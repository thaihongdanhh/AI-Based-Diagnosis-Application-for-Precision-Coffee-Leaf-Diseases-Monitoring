{"ast":null,"code":"'use strict';\n\nimport { isSharedValue } from \"../isSharedValue.js\";\nimport { isChromeDebugger } from \"../PlatformChecker.js\";\nimport { WorkletEventHandler } from \"../WorkletEventHandler.js\";\nimport { initialUpdaterRun } from \"../animation/index.js\";\nimport { hasInlineStyles, getInlineStyle } from \"./InlinePropManager.js\";\nimport { flattenArray, has } from \"./utils.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nfunction dummyListener() {}\nexport class PropsFilter {\n  _initialStyle = {};\n  filterNonAnimatedProps(component) {\n    const inputProps = component.props;\n    const props = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray(styleProp ?? []);\n        const processedStyle = styles.map(style => {\n          if (style && style.viewDescriptors) {\n            if (component._isFirstRender) {\n              this._initialStyle = Object.assign({}, style.initial.value, this._initialStyle, initialUpdaterRun(style.initial.updater));\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach(initialValueKey => {\n            props[initialValueKey] = animatedProp.initial?.value[initialValueKey];\n          });\n        }\n      } else if (has('workletEventHandler', value) && value.workletEventHandler instanceof WorkletEventHandler) {\n        if (value.workletEventHandler.eventNames.length > 0) {\n          value.workletEventHandler.eventNames.forEach(eventName => {\n            props[eventName] = has('listeners', value.workletEventHandler) ? value.workletEventHandler.listeners[eventName] : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = value.value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}","map":{"version":3,"names":["isSharedValue","isChromeDebugger","WorkletEventHandler","initialUpdaterRun","hasInlineStyles","getInlineStyle","flattenArray","has","StyleSheet","dummyListener","PropsFilter","_initialStyle","filterNonAnimatedProps","component","inputProps","props","key","value","styleProp","style","styles","processedStyle","map","viewDescriptors","_isFirstRender","Object","assign","initial","updater","flatten","animatedProp","animatedProps","undefined","keys","forEach","initialValueKey","workletEventHandler","eventNames","length","eventName","listeners"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/src/createAnimatedComponent/PropsFilter.tsx"],"sourcesContent":["'use strict';\n\nimport type { StyleProps } from '../commonTypes';\nimport { isSharedValue } from '../isSharedValue';\nimport { isChromeDebugger } from '../PlatformChecker';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport { initialUpdaterRun } from '../animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  IAnimatedComponentInternal,\n  IPropsFilter,\n} from './commonTypes';\nimport { flattenArray, has } from './utils';\nimport { StyleSheet } from 'react-native';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nexport class PropsFilter implements IPropsFilter {\n  private _initialStyle = {};\n\n  public filterNonAnimatedProps(\n    component: React.Component<unknown, unknown> & IAnimatedComponentInternal\n  ): Record<string, unknown> {\n    const inputProps =\n      component.props as AnimatedComponentProps<InitialComponentProps>;\n    const props: Record<string, unknown> = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray<StyleProps>(styleProp ?? []);\n        const processedStyle: StyleProps[] = styles.map((style) => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            if (component._isFirstRender) {\n              this._initialStyle = {\n                ...style.initial.value,\n                ...this._initialStyle,\n                ...initialUpdaterRun<StyleProps>(style.initial.updater),\n              };\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps as Partial<\n          AnimatedComponentProps<AnimatedProps>\n        >;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach((initialValueKey) => {\n            props[initialValueKey] =\n              animatedProp.initial?.value[initialValueKey];\n          });\n        }\n      } else if (\n        has('workletEventHandler', value) &&\n        value.workletEventHandler instanceof WorkletEventHandler\n      ) {\n        if (value.workletEventHandler.eventNames.length > 0) {\n          value.workletEventHandler.eventNames.forEach((eventName) => {\n            props[eventName] = has('listeners', value.workletEventHandler)\n              ? (\n                  value.workletEventHandler.listeners as Record<string, unknown>\n                )[eventName]\n              : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = value.value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}