{"ast":null,"code":"import { PerformanceEntry } from \"./PerformanceEntry\";\nexport class PerformanceMark extends PerformanceEntry {\n  constructor(markName, markOptions) {\n    super({\n      name: markName,\n      entryType: 'mark',\n      startTime: markOptions?.startTime ?? performance.now(),\n      duration: 0\n    });\n    if (markOptions) {\n      this.detail = markOptions.detail;\n    }\n  }\n}\nexport class PerformanceMeasure extends PerformanceEntry {\n  #detail;\n  constructor(measureName, measureOptions) {\n    super({\n      name: measureName,\n      entryType: 'measure',\n      startTime: measureOptions?.startTime ?? 0,\n      duration: measureOptions?.duration ?? 0\n    });\n    if (measureOptions) {\n      this.#detail = measureOptions.detail;\n    }\n  }\n  get detail() {\n    return this.#detail;\n  }\n}","map":{"version":3,"names":["PerformanceEntry","PerformanceMark","constructor","markName","markOptions","name","entryType","startTime","performance","now","duration","detail","PerformanceMeasure","measureName","measureOptions"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/src/private/webapis/performance/UserTiming.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {DOMHighResTimeStamp} from './PerformanceEntry';\n\nimport {PerformanceEntry} from './PerformanceEntry';\n\nexport type DetailType = mixed;\n\nexport type PerformanceMarkOptions = {\n  detail?: DetailType,\n  startTime?: DOMHighResTimeStamp,\n};\n\nexport type TimeStampOrName = DOMHighResTimeStamp | string;\n\nexport type PerformanceMeasureInit = {\n  detail?: DetailType,\n  startTime?: DOMHighResTimeStamp,\n  duration?: DOMHighResTimeStamp,\n};\n\nexport class PerformanceMark extends PerformanceEntry {\n  detail: DetailType;\n\n  constructor(markName: string, markOptions?: PerformanceMarkOptions) {\n    super({\n      name: markName,\n      entryType: 'mark',\n      startTime: markOptions?.startTime ?? performance.now(),\n      duration: 0,\n    });\n\n    if (markOptions) {\n      this.detail = markOptions.detail;\n    }\n  }\n}\n\nexport class PerformanceMeasure extends PerformanceEntry {\n  #detail: DetailType;\n\n  constructor(measureName: string, measureOptions?: PerformanceMeasureInit) {\n    super({\n      name: measureName,\n      entryType: 'measure',\n      startTime: measureOptions?.startTime ?? 0,\n      duration: measureOptions?.duration ?? 0,\n    });\n\n    if (measureOptions) {\n      this.#detail = measureOptions.detail;\n    }\n  }\n\n  get detail(): DetailType {\n    return this.#detail;\n  }\n}\n"],"mappings":"AAcA,SAAQA,gBAAgB;AAiBxB,OAAO,MAAMC,eAAe,SAASD,gBAAgB,CAAC;EAGpDE,WAAWA,CAACC,QAAgB,EAAEC,WAAoC,EAAE;IAClE,KAAK,CAAC;MACJC,IAAI,EAAEF,QAAQ;MACdG,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAEH,WAAW,EAAEG,SAAS,IAAIC,WAAW,CAACC,GAAG,CAAC,CAAC;MACtDC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,IAAIN,WAAW,EAAE;MACf,IAAI,CAACO,MAAM,GAAGP,WAAW,CAACO,MAAM;IAClC;EACF;AACF;AAEA,OAAO,MAAMC,kBAAkB,SAASZ,gBAAgB,CAAC;EACvD,CAACW,MAAM;EAEPT,WAAWA,CAACW,WAAmB,EAAEC,cAAuC,EAAE;IACxE,KAAK,CAAC;MACJT,IAAI,EAAEQ,WAAW;MACjBP,SAAS,EAAE,SAAS;MACpBC,SAAS,EAAEO,cAAc,EAAEP,SAAS,IAAI,CAAC;MACzCG,QAAQ,EAAEI,cAAc,EAAEJ,QAAQ,IAAI;IACxC,CAAC,CAAC;IAEF,IAAII,cAAc,EAAE;MAClB,IAAI,CAAC,CAACH,MAAM,GAAGG,cAAc,CAACH,MAAM;IACtC;EACF;EAEA,IAAIA,MAAMA,CAAA,EAAe;IACvB,OAAO,IAAI,CAAC,CAACA,MAAM;EACrB;AACF"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}