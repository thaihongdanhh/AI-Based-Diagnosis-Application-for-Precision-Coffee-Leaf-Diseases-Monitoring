{"ast":null,"code":"import { useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nconst StatusBarManager = ({\n  presentationStyle\n}) => {\n  if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n    return null;\n  }\n  StatusBar.setHidden(true);\n  useEffect(() => {\n    return () => StatusBar.setHidden(false);\n  }, []);\n  return null;\n};\nexport default StatusBarManager;","map":{"version":3,"names":["useEffect","Platform","StatusBar","StatusBarManager","presentationStyle","OS","setHidden"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-image-viewing/dist/components/StatusBarManager.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Platform, StatusBar, } from \"react-native\";\nconst StatusBarManager = ({ presentationStyle, }) => {\n    if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n        return null;\n    }\n    //Can't get an actual state of app status bar with default RN. Gonna rely on \"presentationStyle === overFullScreen\" prop and guess application status bar state to be visible in this case.\n    StatusBar.setHidden(true);\n    useEffect(() => {\n        return () => StatusBar.setHidden(false);\n    }, []);\n    return null;\n};\nexport default StatusBarManager;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAElC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EACjD,IAAIH,QAAQ,CAACI,EAAE,KAAK,KAAK,IAAID,iBAAiB,KAAK,gBAAgB,EAAE;IACjE,OAAO,IAAI;EACf;EAEAF,SAAS,CAACI,SAAS,CAAC,IAAI,CAAC;EACzBN,SAAS,CAAC,MAAM;IACZ,OAAO,MAAME,SAAS,CAACI,SAAS,CAAC,KAAK,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,IAAI;AACf,CAAC;AACD,eAAeH,gBAAgB"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}