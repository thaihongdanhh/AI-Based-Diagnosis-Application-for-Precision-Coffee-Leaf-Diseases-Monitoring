{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { styles } from \"./styles\";\nconst ic_close = require(\"../../assets/close.png\");\nconst TextInputComponent = props => {\n  const {\n    fontFamily,\n    style,\n    value,\n    placeholderTextColor = '#000',\n    placeholder = '',\n    showIcon,\n    inputStyle,\n    iconStyle,\n    onChangeText = _value => {},\n    renderLeftIcon,\n    renderRightIcon\n  } = props;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    if (value) {\n      setText(value);\n    }\n  }, [value]);\n  const onChange = text => {\n    setText(text);\n    onChangeText(text);\n  };\n  const _renderRightIcon = () => {\n    if (showIcon) {\n      if (renderRightIcon) {\n        return renderRightIcon();\n      }\n      if (text.length > 0) {\n        return React.createElement(TouchableOpacity, {\n          onPress: () => onChange('')\n        }, React.createElement(Image, {\n          source: ic_close,\n          style: StyleSheet.flatten([styles.icon, iconStyle])\n        }));\n      }\n      return null;\n    }\n    return null;\n  };\n  const font = () => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  };\n  return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n    style: [style]\n  }, React.createElement(View, {\n    style: styles.textInput\n  }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), React.createElement(TextInput, _extends({}, props, {\n    style: StyleSheet.flatten([styles.input, inputStyle, font()]),\n    value: text,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    onChangeText: onChange\n  })), _renderRightIcon())));\n};\nexport default TextInputComponent;","map":{"version":3,"names":["React","useEffect","useState","Image","TextInput","TouchableOpacity","View","TouchableWithoutFeedback","StyleSheet","styles","ic_close","require","TextInputComponent","props","fontFamily","style","value","placeholderTextColor","placeholder","showIcon","inputStyle","iconStyle","onChangeText","_value","renderLeftIcon","renderRightIcon","text","setText","onChange","_renderRightIcon","length","createElement","onPress","source","flatten","icon","font","textInput","_extends","input"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-element-dropdown/src/components/TextInput/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedback,\n  StyleSheet,\n} from 'react-native';\nimport type { CTextInput } from './model';\nimport { styles } from './styles';\n\nconst ic_close = require('../../assets/close.png');\n\nconst TextInputComponent: CTextInput = (props) => {\n  const {\n    fontFamily,\n    style,\n    value,\n    placeholderTextColor = '#000',\n    placeholder = '',\n    showIcon,\n    inputStyle,\n    iconStyle,\n    onChangeText = (_value: string) => {},\n    renderLeftIcon,\n    renderRightIcon,\n  } = props;\n\n  const [text, setText] = useState<string>('');\n\n  useEffect(() => {\n    if (value) {\n      setText(value);\n    }\n  }, [value]);\n\n  const onChange = (text: string) => {\n    setText(text);\n    onChangeText(text);\n  };\n\n  const _renderRightIcon = () => {\n    if (showIcon) {\n      if (renderRightIcon) {\n        return renderRightIcon();\n      }\n      if (text.length > 0) {\n        return (\n          <TouchableOpacity onPress={() => onChange('')}>\n            <Image\n              source={ic_close}\n              style={StyleSheet.flatten([styles.icon, iconStyle])}\n            />\n          </TouchableOpacity>\n        );\n      }\n      return null;\n    }\n    return null;\n  };\n\n  const font = () => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily,\n      };\n    } else {\n      return {};\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback>\n      <View style={[style]}>\n        <View style={styles.textInput}>\n          {renderLeftIcon?.()}\n          <TextInput\n            {...props}\n            style={StyleSheet.flatten([styles.input, inputStyle, font()])}\n            value={text}\n            placeholder={placeholder}\n            placeholderTextColor={placeholderTextColor}\n            onChangeText={onChange}\n          />\n          {_renderRightIcon()}\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default TextInputComponent;\n"],"mappings":";;;;;;;;;;;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,UAAA;AAUlD,SAASC,MAAM;AAEf,MAAMC,QAAQ,GAAGC,OAAO,yBAAyB,CAAC;AAElD,MAAMC,kBAA8B,GAAIC,KAAK,IAAK;EAChD,MAAM;IACJC,UAAU;IACVC,KAAK;IACLC,KAAK;IACLC,oBAAoB,GAAG,MAAM;IAC7BC,WAAW,GAAG,EAAE;IAChBC,QAAQ;IACRC,UAAU;IACVC,SAAS;IACTC,YAAY,GAAIC,MAAc,IAAK,CAAC,CAAC;IACrCC,cAAc;IACdC;EACF,CAAC,GAAGZ,KAAK;EAET,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAS,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,EAAE;MACTW,OAAO,CAACX,KAAK,CAAC;IAChB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMY,QAAQ,GAAIF,IAAY,IAAK;IACjCC,OAAO,CAACD,IAAI,CAAC;IACbJ,YAAY,CAACI,IAAI,CAAC;EACpB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIV,QAAQ,EAAE;MACZ,IAAIM,eAAe,EAAE;QACnB,OAAOA,eAAe,EAAE;MAC1B;MACA,IAAIC,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;QACnB,OACE9B,KAAA,CAAA+B,aAAA,CAAC1B,gBAAgB;UAAC2B,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAAC,EAAE;QAAE,GAC5C5B,KAAA,CAAA+B,aAAA,CAAC5B,KAAK;UACJ8B,MAAM,EAAEvB,QAAS;UACjBK,KAAK,EAAEP,UAAU,CAAC0B,OAAO,CAAC,CAACzB,MAAM,CAAC0B,IAAI,EAAEd,SAAS,CAAC;QAAE,EACpD,CACe;MAEvB;MACA,OAAO,IAAI;IACb;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMe,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAItB,UAAU,EAAE;MACd,OAAO;QACLA,UAAU,EAAEA;MACd,CAAC;IACH,CAAC,MAAM;MACL,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,OACEd,KAAA,CAAA+B,aAAA,CAACxB,wBAAwB,QACvBP,KAAA,CAAA+B,aAAA,CAACzB,IAAI;IAACS,KAAK,EAAE,CAACA,KAAK;EAAE,GACnBf,KAAA,CAAA+B,aAAA,CAACzB,IAAI;IAACS,KAAK,EAAEN,MAAM,CAAC4B;EAAU,GAC3Bb,cAAc,aAAdA,cAAc,uBAAdA,cAAc,EAAI,EACnBxB,KAAA,CAAA+B,aAAA,CAAC3B,SAAS,EAAAkC,QAAA,KACJzB,KAAK;IACTE,KAAK,EAAEP,UAAU,CAAC0B,OAAO,CAAC,CAACzB,MAAM,CAAC8B,KAAK,EAAEnB,UAAU,EAAEgB,IAAI,EAAE,CAAC,CAAE;IAC9DpB,KAAK,EAAEU,IAAK;IACZR,WAAW,EAAEA,WAAY;IACzBD,oBAAoB,EAAEA,oBAAqB;IAC3CK,YAAY,EAAEM;EAAS,GACvB,EACDC,gBAAgB,EAAE,CACd,CACF,CACkB;AAE/B,CAAC;AAED,eAAejB,kBAAkB"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}