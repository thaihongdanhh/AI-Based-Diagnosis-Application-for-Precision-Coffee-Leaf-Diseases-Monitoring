{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/App.js\";\nimport React, { Fragment } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as Font from \"expo-font\";\nimport { Asset } from \"expo-asset\";\nimport { Block, GalioProvider } from \"galio-framework\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\nimport Screens from \"./navigation/Screens\";\nimport { Images, articles, nowTheme } from \"./constants\";\nimport Entypo from '@expo/vector-icons/Entypo';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Provider } from 'react-redux';\nimport store from \"./store/reducers/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst assetImages = [Images.Pro, Images.NowLogo, Images.iOSLogo, Images.androidLogo, Images.CreativeTimLogo, Images.InvisionLogo, Images.RegisterBackground];\narticles.map(article => assetImages.push(article.image));\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\nSplashScreen.preventAutoHideAsync();\nexport default class App extends React.Component {\n  state = {\n    isLoading: true\n  };\n  prepare = async () => {\n    try {\n      await console.log('OK');\n      await Font.loadAsync(Entypo.font);\n      await Font.loadAsync({\n        \"montserrat-regular\": require(\"./assets/font/Montserrat-Regular.ttf\"),\n        \"montserrat-bold\": require(\"./assets/font/Montserrat-Bold.ttf\")\n      });\n      await console.log('OK');\n      await new Promise.all([...cacheImages(assetImages)]);\n      await console.log('OK');\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      this.setState({\n        isLoading: false\n      }, async () => {\n        await SplashScreen.hideAsync();\n      });\n    }\n  };\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    if (isLoading) {\n      this.prepare();\n    }\n    return _jsxDEV(Fragment, {\n      children: !isLoading && _jsxDEV(NavigationContainer, {\n        children: _jsxDEV(GalioProvider, {\n          theme: nowTheme,\n          children: _jsxDEV(Block, {\n            flex: true,\n            children: _jsxDEV(Provider, {\n              store: store,\n              children: [Platform.OS === \"ios\" && _jsxDEV(StatusBar, {\n                barStyle: \"default\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this), _jsxDEV(Screens, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Fragment","Image","Platform","Font","Asset","Block","GalioProvider","NavigationContainer","enableScreens","Screens","Images","articles","nowTheme","Entypo","SplashScreen","Provider","store","ImageBackground","StyleSheet","StatusBar","Dimensions","jsxDEV","_jsxDEV","assetImages","Pro","NowLogo","iOSLogo","androidLogo","CreativeTimLogo","InvisionLogo","RegisterBackground","map","article","push","image","cacheImages","images","prefetch","fromModule","downloadAsync","preventAutoHideAsync","App","Component","state","isLoading","prepare","console","log","loadAsync","font","require","Promise","all","resolve","setTimeout","e","warn","setState","hideAsync","render","children","theme","flex","OS","barStyle","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/App.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { Image, Platform } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport { Asset } from \"expo-asset\";\nimport { Block, GalioProvider } from \"galio-framework\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\n// Before rendering any navigation stack\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\n\nimport Screens from \"./navigation/Screens\";\nimport { Images, articles, nowTheme } from \"./constants\";\n\nimport Entypo from '@expo/vector-icons/Entypo';\n\nimport * as SplashScreen from 'expo-splash-screen';\n\nimport { Provider } from 'react-redux';\nimport store  from \"./store/reducers/index\";\n\nimport {\n  ImageBackground,\n  StyleSheet,\n  StatusBar,\n  Dimensions\n} from \"react-native\";\n\n// cache app images\nconst assetImages = [\n  Images.Pro,\n  Images.NowLogo,\n  Images.iOSLogo,\n  Images.androidLogo,\n  Images.CreativeTimLogo,\n  Images.InvisionLogo,\n  Images.RegisterBackground,  \n];\n\n// cache product images\narticles.map((article) => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map((image) => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nSplashScreen.preventAutoHideAsync();\n\nexport default class App extends React.Component {\n  state = {\n    isLoading: true,\n  };\n\n  prepare = async () => {\n    try {\n      // Pre-load fonts, make any API calls you need to do here\n      await console.log('OK');\n      await Font.loadAsync(Entypo.font);\n      await Font.loadAsync({\n        \"montserrat-regular\": require(\"./assets/font/Montserrat-Regular.ttf\"),\n        \"montserrat-bold\": require(\"./assets/font/Montserrat-Bold.ttf\"),\n      });\n      await console.log('OK');\n      await new Promise.all([...cacheImages(assetImages)]);\n      await console.log('OK');\n      // Artificially delay for two seconds to simulate a slow loading\n      // experience. Please remove this if you copy and paste the code!\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      // Tell the application to render\n      this.setState({\n        isLoading: false,\n      },async () => {\n        // console.log(this.state.isLoading)\n        await SplashScreen.hideAsync();\n      })\n\n    }\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state\n\n    if(isLoading){\n      this.prepare() \n    }\n\n    return (\n      <Fragment>\n        {(!isLoading) && (\n          <NavigationContainer>\n            <GalioProvider theme={nowTheme}>\n              <Block flex>\n                <Provider\n                  store={store}\n                >\n                  {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n                  <Screens />\n                </Provider>\n              </Block>\n            </GalioProvider>\n          </NavigationContainer>\n        )}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}