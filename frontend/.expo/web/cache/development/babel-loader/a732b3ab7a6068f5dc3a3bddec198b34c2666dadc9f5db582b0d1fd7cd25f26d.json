{"ast":null,"code":"export default class ReactNativeStartupTiming {\n  #startTime;\n  #endTime;\n  #initializeRuntimeStart;\n  #initializeRuntimeEnd;\n  #executeJavaScriptBundleEntryPointStart;\n  #executeJavaScriptBundleEntryPointEnd;\n  constructor(startUpTiming) {\n    if (startUpTiming != null) {\n      this.#startTime = startUpTiming.startTime;\n      this.#endTime = startUpTiming.endTime;\n      this.#initializeRuntimeStart = startUpTiming.initializeRuntimeStart;\n      this.#initializeRuntimeEnd = startUpTiming.initializeRuntimeEnd;\n      this.#executeJavaScriptBundleEntryPointStart = startUpTiming.executeJavaScriptBundleEntryPointStart;\n      this.#executeJavaScriptBundleEntryPointEnd = startUpTiming.executeJavaScriptBundleEntryPointEnd;\n    }\n  }\n  get startTime() {\n    return this.#startTime;\n  }\n  get endTime() {\n    return this.#endTime;\n  }\n  get initializeRuntimeStart() {\n    return this.#initializeRuntimeStart;\n  }\n  get initializeRuntimeEnd() {\n    return this.#initializeRuntimeEnd;\n  }\n  get executeJavaScriptBundleEntryPointStart() {\n    return this.#executeJavaScriptBundleEntryPointStart;\n  }\n  get executeJavaScriptBundleEntryPointEnd() {\n    return this.#executeJavaScriptBundleEntryPointEnd;\n  }\n}","map":{"version":3,"names":["ReactNativeStartupTiming","startTime","endTime","initializeRuntimeStart","initializeRuntimeEnd","executeJavaScriptBundleEntryPointStart","executeJavaScriptBundleEntryPointEnd","constructor","startUpTiming"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/src/private/webapis/performance/ReactNativeStartupTiming.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\ntype ReactNativeStartupTimingLike = {\n  startTime: ?number,\n  endTime: ?number,\n  initializeRuntimeStart: ?number,\n  initializeRuntimeEnd: ?number,\n  executeJavaScriptBundleEntryPointStart: ?number,\n  executeJavaScriptBundleEntryPointEnd: ?number,\n};\n\n// Read-only object with RN startup timing information.\n// This is returned by the performance.reactNativeStartup API.\nexport default class ReactNativeStartupTiming {\n  // All time information here are in ms. The values may be null if not provided.\n  // We do NOT match web spect here for two reasons:\n  // 1. The `ReactNativeStartupTiming` is non-standard API\n  // 2. The timing information is relative to the time origin, which means `0` has valid meaning\n  #startTime: ?number;\n  #endTime: ?number;\n  #initializeRuntimeStart: ?number;\n  #initializeRuntimeEnd: ?number;\n  #executeJavaScriptBundleEntryPointStart: ?number;\n  #executeJavaScriptBundleEntryPointEnd: ?number;\n\n  constructor(startUpTiming: ?ReactNativeStartupTimingLike) {\n    if (startUpTiming != null) {\n      this.#startTime = startUpTiming.startTime;\n      this.#endTime = startUpTiming.endTime;\n      this.#initializeRuntimeStart = startUpTiming.initializeRuntimeStart;\n      this.#initializeRuntimeEnd = startUpTiming.initializeRuntimeEnd;\n      this.#executeJavaScriptBundleEntryPointStart =\n        startUpTiming.executeJavaScriptBundleEntryPointStart;\n      this.#executeJavaScriptBundleEntryPointEnd =\n        startUpTiming.executeJavaScriptBundleEntryPointEnd;\n    }\n  }\n\n  /**\n   * Start time of the RN app startup process. This is provided by the platform by implementing the `ReactMarker.setAppStartTime` API in the native platform code.\n   */\n  get startTime(): ?number {\n    return this.#startTime;\n  }\n\n  /**\n   * End time of the RN app startup process. This is equal to `executeJavaScriptBundleEntryPointEnd`.\n   */\n  get endTime(): ?number {\n    return this.#endTime;\n  }\n\n  /**\n   * Start time when RN runtime get initialized. This is when RN infra first kicks in app startup process.\n   */\n  get initializeRuntimeStart(): ?number {\n    return this.#initializeRuntimeStart;\n  }\n\n  /**\n   * End time when RN runtime get initialized. This is the last marker before ends of the app startup process.\n   */\n  get initializeRuntimeEnd(): ?number {\n    return this.#initializeRuntimeEnd;\n  }\n\n  /**\n   * Start time of JS bundle being executed. This indicates the RN JS bundle is loaded and start to be evaluated.\n   */\n  get executeJavaScriptBundleEntryPointStart(): ?number {\n    return this.#executeJavaScriptBundleEntryPointStart;\n  }\n\n  /**\n   * End time of JS bundle being executed. This indicates all the synchronous entry point jobs are finished.\n   */\n  get executeJavaScriptBundleEntryPointEnd(): ?number {\n    return this.#executeJavaScriptBundleEntryPointEnd;\n  }\n}\n"],"mappings":"AAwBA,eAAe,MAAMA,wBAAwB,CAAC;EAK5C,CAACC,SAAS;EACV,CAACC,OAAO;EACR,CAACC,sBAAsB;EACvB,CAACC,oBAAoB;EACrB,CAACC,sCAAsC;EACvC,CAACC,oCAAoC;EAErCC,WAAWA,CAACC,aAA4C,EAAE;IACxD,IAAIA,aAAa,IAAI,IAAI,EAAE;MACzB,IAAI,CAAC,CAACP,SAAS,GAAGO,aAAa,CAACP,SAAS;MACzC,IAAI,CAAC,CAACC,OAAO,GAAGM,aAAa,CAACN,OAAO;MACrC,IAAI,CAAC,CAACC,sBAAsB,GAAGK,aAAa,CAACL,sBAAsB;MACnE,IAAI,CAAC,CAACC,oBAAoB,GAAGI,aAAa,CAACJ,oBAAoB;MAC/D,IAAI,CAAC,CAACC,sCAAsC,GAC1CG,aAAa,CAACH,sCAAsC;MACtD,IAAI,CAAC,CAACC,oCAAoC,GACxCE,aAAa,CAACF,oCAAoC;IACtD;EACF;EAKA,IAAIL,SAASA,CAAA,EAAY;IACvB,OAAO,IAAI,CAAC,CAACA,SAAS;EACxB;EAKA,IAAIC,OAAOA,CAAA,EAAY;IACrB,OAAO,IAAI,CAAC,CAACA,OAAO;EACtB;EAKA,IAAIC,sBAAsBA,CAAA,EAAY;IACpC,OAAO,IAAI,CAAC,CAACA,sBAAsB;EACrC;EAKA,IAAIC,oBAAoBA,CAAA,EAAY;IAClC,OAAO,IAAI,CAAC,CAACA,oBAAoB;EACnC;EAKA,IAAIC,sCAAsCA,CAAA,EAAY;IACpD,OAAO,IAAI,CAAC,CAACA,sCAAsC;EACrD;EAKA,IAAIC,oCAAoCA,CAAA,EAAY;IAClD,OAAO,IAAI,CAAC,CAACA,oCAAoC;EACnD;AACF"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}