{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/screens/W.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport * as Location from \"expo-location\";\nimport WeatherInfo from \"../components/WeatherInfo\";\nimport UnitsPicker from \"../components/UnitsPicker\";\nimport ReloadIcon from \"../components/ReloadIcon\";\nimport WeatherDetails from \"../components/WeatherDetails\";\nimport { colors } from \"../utils/index\";\nimport weatherData from \"./data.json\";\nimport { Button } from \"../components\";\nimport { Block, theme } from \"galio-framework\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  height,\n  width\n} = Dimensions.get(\"screen\");\nconst WEATHER_API_KEY = \"53e04e394ce834e3e283355568f6b56b\";\nconst BASE_WEATHER_URL = \"https://api.openweathermap.org/data/3.0/onecall?\";\nexport default function App() {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [currentWeatherDetails, setCurrentWeatherDetails] = useState(null);\n  const [unitsSystem, setUnitsSystem] = useState('metric');\n  useEffect(() => {\n    load();\n  }, [unitsSystem]);\n  async function load() {\n    setCurrentWeatherDetails(null);\n    setCurrentWeather(null);\n    setErrorMessage(null);\n    try {\n      let {\n        status\n      } = await Location.requestForegroundPermissionsAsync();\n      if (status != \"granted\") {\n        setErrorMessage(\"Access is needed to run the app\");\n        return;\n      }\n      const result = weatherData;\n      setCurrentWeather(result.current.temp);\n      setCurrentWeatherDetails(result);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  }\n  const navigation = useNavigation();\n  if (currentWeatherDetails) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Button, {\n        textStyle: {\n          fontFamily: 'montserrat-regular',\n          fontSize: 18,\n          color: 'black'\n        },\n        style: styles.buttonB,\n        onPress: () => navigation.navigate(\"Onboarding\", {\n          isReload: false\n        }),\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.main,\n        children: [_jsxDEV(Block, {\n          flex: true,\n          children: [_jsxDEV(UnitsPicker, {\n            unitsSystem: unitsSystem,\n            setUnitsSystem: setUnitsSystem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this), _jsxDEV(ReloadIcon, {\n            load: load\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), _jsxDEV(Block, {\n          flex: true,\n          style: {\n            marginTop: 0\n          },\n          children: _jsxDEV(WeatherInfo, {\n            currentWeather: currentWeather,\n            currentWeatherDetails: currentWeatherDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), _jsxDEV(Block, {\n        flex: true,\n        style: {\n          paddingBottom: 100\n        },\n        children: _jsxDEV(WeatherDetails, {\n          currentWeather: currentWeather,\n          currentWeatherDetails: currentWeatherDetails,\n          unitsSystem: unitsSystem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else if (errorMessage) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), _jsxDEV(StatusBar, {\n        style: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  } else {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.PRIMARY_COLOR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), _jsxDEV(StatusBar, {\n        style: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\"\n  },\n  main: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  buttonB: {\n    backgroundColor: '#FACE9C',\n    width: width - theme.SIZES.BASE * 2,\n    height: theme.SIZES.BASE * 3,\n    color: theme.COLORS.BLACK,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 15\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Text","View","ActivityIndicator","Dimensions","StatusBar","Location","WeatherInfo","UnitsPicker","ReloadIcon","WeatherDetails","colors","weatherData","Button","Block","theme","useNavigation","jsxDEV","_jsxDEV","height","width","get","WEATHER_API_KEY","BASE_WEATHER_URL","App","errorMessage","setErrorMessage","currentWeather","setCurrentWeather","currentWeatherDetails","setCurrentWeatherDetails","unitsSystem","setUnitsSystem","load","status","requestForegroundPermissionsAsync","result","current","temp","error","message","navigation","style","styles","container","children","textStyle","fontFamily","fontSize","color","buttonB","onPress","navigate","isReload","fileName","_jsxFileName","lineNumber","columnNumber","main","flex","marginTop","paddingBottom","size","PRIMARY_COLOR","create","backgroundColor","justifyContent","SIZES","BASE","COLORS","BLACK","alignItems","marginLeft"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/screens/W.js"],"sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View , ActivityIndicator, Dimensions, StatusBar } from \"react-native\";\nimport * as Location from \"expo-location\";\nimport WeatherInfo from '../components/WeatherInfo'\nimport UnitsPicker from '../components/UnitsPicker'\nimport ReloadIcon from '../components/ReloadIcon'\nimport WeatherDetails from '../components/WeatherDetails'\nimport {colors} from '../utils/index'\nimport weatherData from './data.json';\nimport { Button } from '../components'\nimport { Block, theme } from \"galio-framework\";\nimport { useNavigation } from '@react-navigation/native';\n\nconst { height, width } = Dimensions.get(\"screen\");\n\nconst WEATHER_API_KEY = \"53e04e394ce834e3e283355568f6b56b\";\nconst BASE_WEATHER_URL = \"https://api.openweathermap.org/data/3.0/onecall?\";\n\nexport default function App() {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [currentWeatherDetails, setCurrentWeatherDetails] = useState(null);\n  const [unitsSystem , setUnitsSystem] = useState('metric')\n  useEffect(() => {\n    load();\n  }, [unitsSystem]);\n  async function load() {\n    setCurrentWeatherDetails(null)\n    setCurrentWeather(null)\n    setErrorMessage(null)\n    try {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status != \"granted\") {\n        setErrorMessage(\"Access is needed to run the app\");\n        return;\n      }\n      // const location = await Location.getCurrentPositionAsync();      \n      \n      // const { latitude, longitude } = location.coords;\n      // const weatherUrl = `${BASE_WEATHER_URL}lat=${latitude}&lon=${longitude}&units=${unitsSystem}&appid=${WEATHER_API_KEY}`;\n      // console.log(weatherData)\n      // const response = await fetch(weatherUrl)\n      // const result = await response.json()\n      const result = weatherData\n      // console.log(result.current)\n      \n\n      // if(response.ok){\n      //  setCurrentWeather(result.current.temp)\n      //  setCurrentWeatherDetails(result)\n      // }\n      // else {\n      //   setErrorMessage(result.message)\n      // }\n\n      setCurrentWeather(result.current.temp)\n      setCurrentWeatherDetails(result)\n\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n\n\n  }\n\n  const navigation = useNavigation()\n  if(currentWeatherDetails){\n\n    //const  {main : temp} = currentWeather\n    return (\n      <View style={styles.container}>        \n      <Button\n                      textStyle={{ fontFamily: 'montserrat-regular', fontSize: 18, color: 'black' }}\n                      style={styles.buttonB}\n                      onPress={() => navigation.navigate(\"Onboarding\", { isReload: false })}                      \n                    >\n                      Weather\n                    </Button>\n        {/* <StatusBar style=\"auto\" /> */}\n        <View style={styles.main}>     \n        <Block flex>\n        <UnitsPicker unitsSystem={unitsSystem} setUnitsSystem={setUnitsSystem}/>        \n        <ReloadIcon load={load}/>\n        </Block>   \n        <Block flex style={{marginTop: 0}}>\n          <WeatherInfo currentWeather={currentWeather} currentWeatherDetails={currentWeatherDetails}></WeatherInfo>\n        </Block>                \n        </View>\n        <Block flex style={{paddingBottom: 100}}>\n        <WeatherDetails currentWeather={currentWeather} currentWeatherDetails={currentWeatherDetails} unitsSystem={unitsSystem}/>\n        </Block>\n        \n      </View>\n    );\n  }\n  else if(errorMessage){\n    return (\n      <View style={styles.container}>\n        <Text>{errorMessage}</Text>\n        <StatusBar style=\"auto\" />\n        \n      </View>\n    );\n  } \n  else {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" color={colors.PRIMARY_COLOR} />\n        <StatusBar style=\"auto\" />\n        \n      </View>\n    );\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n  },\n  main : {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  buttonB: {        \n    backgroundColor: '#FACE9C',\n    width: width - theme.SIZES.BASE * 2,\n    height: theme.SIZES.BASE * 3,    \n    color: theme.COLORS.BLACK,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 15\n  },\n});"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}