{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js\";\nimport View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport LogBoxLog from \"../Data/LogBoxLog\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxNotificationCountBadge from \"./LogBoxNotificationCountBadge\";\nimport LogBoxNotificationDismissButton from \"./LogBoxNotificationDismissButton\";\nimport LogBoxNotificationMessage from \"./LogBoxNotificationMessage\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogBoxNotification(props) {\n  const {\n    totalLogCount,\n    level,\n    log\n  } = props;\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: _jsxDEV(LogBoxButton, {\n      onPress: props.onPressOpen,\n      style: styles.press,\n      backgroundColor: {\n        default: LogBoxStyle.getBackgroundColor(1),\n        pressed: LogBoxStyle.getBackgroundColor(0.9)\n      },\n      children: _jsxDEV(View, {\n        style: styles.content,\n        children: [_jsxDEV(LogBoxNotificationCountBadge, {\n          count: totalLogCount,\n          level: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), _jsxDEV(LogBoxNotificationMessage, {\n          message: log.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), _jsxDEV(LogBoxNotificationDismissButton, {\n          onPress: props.onPressDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1)\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto'\n  }\n});","map":{"version":3,"names":["View","StyleSheet","LogBoxData","LogBoxLog","LogBoxButton","LogBoxNotificationCountBadge","LogBoxNotificationDismissButton","LogBoxNotificationMessage","LogBoxStyle","React","useEffect","jsxDEV","_jsxDEV","LogBoxNotification","props","totalLogCount","level","log","symbolicateLogLazy","style","styles","container","children","onPress","onPressOpen","press","backgroundColor","default","getBackgroundColor","pressed","content","count","fileName","_jsxFileName","lineNumber","columnNumber","message","onPressDismiss","create","height","position","width","justifyContent","marginTop","getTextColor","paddingHorizontal","alignItems","flexDirection","borderRadius","flexGrow","flexShrink","flexBasis"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport LogBoxLog from '../Data/LogBoxLog';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxNotificationCountBadge from './LogBoxNotificationCountBadge';\nimport LogBoxNotificationDismissButton from './LogBoxNotificationDismissButton';\nimport LogBoxNotificationMessage from './LogBoxNotificationMessage';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\nimport {useEffect} from 'react';\n\ntype Props = $ReadOnly<{\n  log: LogBoxLog,\n  totalLogCount: number,\n  level: 'warn' | 'error',\n  onPressOpen: () => void,\n  onPressDismiss: () => void,\n}>;\n\nexport default function LogBoxNotification(props: Props): React.Node {\n  const {totalLogCount, level, log} = props;\n\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n\n  return (\n    <View style={styles.container}>\n      <LogBoxButton\n        onPress={props.onPressOpen}\n        style={styles.press}\n        backgroundColor={{\n          default: LogBoxStyle.getBackgroundColor(1),\n          pressed: LogBoxStyle.getBackgroundColor(0.9),\n        }}>\n        <View style={styles.content}>\n          <LogBoxNotificationCountBadge count={totalLogCount} level={level} />\n          <LogBoxNotificationMessage message={log.message} />\n          <LogBoxNotificationDismissButton onPress={props.onPressDismiss} />\n        </View>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1),\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12,\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n  },\n});\n"],"mappings":";AAUA,OAAOA,IAAI;AACX,OAAOC,UAAU;AACjB,OAAO,KAAKC,UAAU;AACtB,OAAOC,SAAS;AAChB,OAAOC,YAAY;AACnB,OAAOC,4BAA4B;AACnC,OAAOC,+BAA+B;AACtC,OAAOC,yBAAyB;AAChC,OAAO,KAAKC,WAAW;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhC,eAAe,SAASC,kBAAkBA,CAACC,KAAY,EAAc;EACnE,MAAM;IAACC,aAAa;IAAEC,KAAK;IAAEC;EAAG,CAAC,GAAGH,KAAK;EAGzCJ,SAAS,CAAC,MAAM;IACdR,UAAU,CAACgB,kBAAkB,CAACD,GAAG,CAAC;EACpC,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAET,OACEL,OAAA,CAACZ,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BV,OAAA,CAACR,YAAY;MACXmB,OAAO,EAAET,KAAK,CAACU,WAAY;MAC3BL,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,eAAe,EAAE;QACfC,OAAO,EAAEnB,WAAW,CAACoB,kBAAkB,CAAC,CAAC,CAAC;QAC1CC,OAAO,EAAErB,WAAW,CAACoB,kBAAkB,CAAC,GAAG;MAC7C,CAAE;MAAAN,QAAA,EACFV,OAAA,CAACZ,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACU,OAAQ;QAAAR,QAAA,GAC1BV,OAAA,CAACP,4BAA4B;UAAC0B,KAAK,EAAEhB,aAAc;UAACC,KAAK,EAAEA;QAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACpEvB,OAAA,CAACL,yBAAyB;UAAC6B,OAAO,EAAEnB,GAAG,CAACmB;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACnDvB,OAAA,CAACN,+BAA+B;UAACiB,OAAO,EAAET,KAAK,CAACuB;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEX;AAEA,MAAMf,MAAM,GAAGnB,UAAU,CAACqC,MAAM,CAAC;EAC/BjB,SAAS,EAAE;IACTkB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE,GAAG;IACdjB,eAAe,EAAElB,WAAW,CAACoC,YAAY,CAAC,CAAC;EAC7C,CAAC;EACDnB,KAAK,EAAE;IACLc,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE,GAAG;IACdE,iBAAiB,EAAE;EACrB,CAAC;EACDf,OAAO,EAAE;IACPgB,UAAU,EAAE,YAAY;IACxBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}