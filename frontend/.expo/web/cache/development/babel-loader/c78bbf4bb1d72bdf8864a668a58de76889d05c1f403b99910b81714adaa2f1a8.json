{"ast":null,"code":"export default class MemoryInfo {\n  #jsHeapSizeLimit;\n  #totalJSHeapSize;\n  #usedJSHeapSize;\n  constructor(memoryInfo) {\n    if (memoryInfo != null) {\n      this.#jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this.#totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this.#usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n  get jsHeapSizeLimit() {\n    return this.#jsHeapSizeLimit;\n  }\n  get totalJSHeapSize() {\n    return this.#totalJSHeapSize;\n  }\n  get usedJSHeapSize() {\n    return this.#usedJSHeapSize;\n  }\n}","map":{"version":3,"names":["MemoryInfo","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","constructor","memoryInfo"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/src/private/webapis/performance/MemoryInfo.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\ntype MemoryInfoLike = {\n  jsHeapSizeLimit: ?number,\n  totalJSHeapSize: ?number,\n  usedJSHeapSize: ?number,\n};\n\n// Read-only object with JS memory information. This is returned by the performance.memory API.\nexport default class MemoryInfo {\n  #jsHeapSizeLimit: ?number;\n  #totalJSHeapSize: ?number;\n  #usedJSHeapSize: ?number;\n\n  constructor(memoryInfo: ?MemoryInfoLike) {\n    if (memoryInfo != null) {\n      this.#jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this.#totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this.#usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n\n  /**\n   * The maximum size of the heap, in bytes, that is available to the context\n   */\n  get jsHeapSizeLimit(): ?number {\n    return this.#jsHeapSizeLimit;\n  }\n\n  /**\n   * The total allocated heap size, in bytes\n   */\n  get totalJSHeapSize(): ?number {\n    return this.#totalJSHeapSize;\n  }\n\n  /**\n   * The currently active segment of JS heap, in bytes.\n   */\n  get usedJSHeapSize(): ?number {\n    return this.#usedJSHeapSize;\n  }\n}\n"],"mappings":"AAoBA,eAAe,MAAMA,UAAU,CAAC;EAC9B,CAACC,eAAe;EAChB,CAACC,eAAe;EAChB,CAACC,cAAc;EAEfC,WAAWA,CAACC,UAA2B,EAAE;IACvC,IAAIA,UAAU,IAAI,IAAI,EAAE;MACtB,IAAI,CAAC,CAACJ,eAAe,GAAGI,UAAU,CAACJ,eAAe;MAClD,IAAI,CAAC,CAACC,eAAe,GAAGG,UAAU,CAACH,eAAe;MAClD,IAAI,CAAC,CAACC,cAAc,GAAGE,UAAU,CAACF,cAAc;IAClD;EACF;EAKA,IAAIF,eAAeA,CAAA,EAAY;IAC7B,OAAO,IAAI,CAAC,CAACA,eAAe;EAC9B;EAKA,IAAIC,eAAeA,CAAA,EAAY;IAC7B,OAAO,IAAI,CAAC,CAACA,eAAe;EAC9B;EAKA,IAAIC,cAAcA,CAAA,EAAY;IAC5B,OAAO,IAAI,CAAC,CAACA,cAAc;EAC7B;AACF"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}