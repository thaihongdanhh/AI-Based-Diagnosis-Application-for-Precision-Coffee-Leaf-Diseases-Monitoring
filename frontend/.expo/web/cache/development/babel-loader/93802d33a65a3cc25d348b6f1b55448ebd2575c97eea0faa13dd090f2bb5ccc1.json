{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  require(\"../../src/private/fusebox/setUpFuseboxReactDevToolsDispatcher\");\n  const reactDevTools = require('react-devtools-core');\n  const fuseboxReactDevToolsDispatcher = global.__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__;\n  const reactDevToolsFuseboxGlobalBindingName = fuseboxReactDevToolsDispatcher.BINDING_NAME;\n  const ReactNativeStyleAttributes = require(\"../Components/View/ReactNativeStyleAttributes\");\n  const devToolsSettingsManager = require(\"../DevToolsSettings/DevToolsSettingsManager\");\n  const resolveRNStyle = require(\"../StyleSheet/flattenStyle\");\n  let disconnect = null;\n  function disconnectBackendFromReactDevToolsInFuseboxIfNeeded() {\n    if (disconnect != null) {\n      disconnect();\n      disconnect = null;\n    }\n  }\n  function connectToReactDevToolsInFusebox(domain) {\n    disconnect = reactDevTools.connectWithCustomMessagingProtocol({\n      onSubscribe: listener => {\n        domain.onMessage.addEventListener(listener);\n      },\n      onUnsubscribe: listener => {\n        domain.onMessage.removeEventListener(listener);\n      },\n      onMessage: (event, payload) => {\n        domain.sendMessage({\n          event,\n          payload\n        });\n      },\n      settingsManager: devToolsSettingsManager,\n      nativeStyleEditorValidAttributes: Object.keys(ReactNativeStyleAttributes),\n      resolveRNStyle\n    });\n  }\n  let isWebSocketOpen = false;\n  let ws = null;\n  function connectToWSBasedReactDevToolsFrontend() {\n    if (ws !== null && isWebSocketOpen) {\n      return;\n    }\n    if (!window.document) {\n      const AppState = require(\"../AppState/AppState\");\n      const getDevServer = require(\"./Devtools/getDevServer\");\n      const isAppActive = () => AppState.currentState !== 'background';\n      const devServer = getDevServer();\n      const host = devServer.bundleLoadedFromServer ? devServer.url.replace(/https?:\\/\\//, '').replace(/\\/$/, '').split(':')[0] : 'localhost';\n      const port = window.__REACT_DEVTOOLS_PORT__ != null ? window.__REACT_DEVTOOLS_PORT__ : 8097;\n      const WebSocket = require(\"../WebSocket/WebSocket\");\n      ws = new WebSocket('ws://' + host + ':' + port);\n      ws.addEventListener('close', event => {\n        isWebSocketOpen = false;\n      });\n      ws.addEventListener('open', event => {\n        isWebSocketOpen = true;\n      });\n      reactDevTools.connectToDevTools({\n        isAppActive,\n        resolveRNStyle,\n        nativeStyleEditorValidAttributes: Object.keys(ReactNativeStyleAttributes),\n        websocket: ws,\n        devToolsSettingsManager\n      });\n    }\n  }\n  if (global[reactDevToolsFuseboxGlobalBindingName] != null) {\n    disconnectBackendFromReactDevToolsInFuseboxIfNeeded();\n    const domain = fuseboxReactDevToolsDispatcher.initializeDomain('react-devtools');\n    connectToReactDevToolsInFusebox(domain);\n  }\n  global.__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__.onDomainInitialization.addEventListener(domain => {\n    if (domain.name === 'react-devtools') {\n      disconnectBackendFromReactDevToolsInFuseboxIfNeeded();\n      connectToReactDevToolsInFusebox(domain);\n    }\n  });\n  const RCTNativeAppEventEmitter = require(\"../EventEmitter/RCTNativeAppEventEmitter\");\n  RCTNativeAppEventEmitter.addListener('RCTDevMenuShown', connectToWSBasedReactDevToolsFrontend);\n  connectToWSBasedReactDevToolsFrontend();\n}","map":{"version":3,"names":["__DEV__","require","reactDevTools","fuseboxReactDevToolsDispatcher","global","__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__","reactDevToolsFuseboxGlobalBindingName","BINDING_NAME","ReactNativeStyleAttributes","devToolsSettingsManager","resolveRNStyle","disconnect","disconnectBackendFromReactDevToolsInFuseboxIfNeeded","connectToReactDevToolsInFusebox","domain","connectWithCustomMessagingProtocol","onSubscribe","listener","onMessage","addEventListener","onUnsubscribe","removeEventListener","event","payload","sendMessage","settingsManager","nativeStyleEditorValidAttributes","Object","keys","isWebSocketOpen","ws","connectToWSBasedReactDevToolsFrontend","window","document","AppState","getDevServer","isAppActive","currentState","devServer","host","bundleLoadedFromServer","url","replace","split","port","__REACT_DEVTOOLS_PORT__","WebSocket","connectToDevTools","websocket","initializeDomain","onDomainInitialization","name","RCTNativeAppEventEmitter","addListener"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/Core/setUpReactDevTools.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {Domain} from '../../src/private/fusebox/setUpFuseboxReactDevToolsDispatcher';\n\nif (__DEV__) {\n  // Register dispatcher on global, which can be used later by Chrome DevTools frontend\n  require('../../src/private/fusebox/setUpFuseboxReactDevToolsDispatcher');\n\n  // Install hook before React is loaded.\n  const reactDevTools = require('react-devtools-core');\n  // This should be defined in DEV, otherwise error is expected.\n  const fuseboxReactDevToolsDispatcher =\n    global.__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__;\n  const reactDevToolsFuseboxGlobalBindingName =\n    fuseboxReactDevToolsDispatcher.BINDING_NAME;\n\n  const ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\n  const devToolsSettingsManager = require('../DevToolsSettings/DevToolsSettingsManager');\n  const resolveRNStyle = require('../StyleSheet/flattenStyle');\n\n  let disconnect = null;\n  function disconnectBackendFromReactDevToolsInFuseboxIfNeeded() {\n    if (disconnect != null) {\n      disconnect();\n      disconnect = null;\n    }\n  }\n\n  function connectToReactDevToolsInFusebox(domain: Domain) {\n    disconnect = reactDevTools.connectWithCustomMessagingProtocol({\n      onSubscribe: listener => {\n        domain.onMessage.addEventListener(listener);\n      },\n      onUnsubscribe: listener => {\n        domain.onMessage.removeEventListener(listener);\n      },\n      onMessage: (event, payload) => {\n        domain.sendMessage({event, payload});\n      },\n      settingsManager: devToolsSettingsManager,\n      nativeStyleEditorValidAttributes: Object.keys(ReactNativeStyleAttributes),\n      resolveRNStyle,\n    });\n  }\n\n  let isWebSocketOpen = false;\n  let ws = null;\n  function connectToWSBasedReactDevToolsFrontend() {\n    if (ws !== null && isWebSocketOpen) {\n      // If the DevTools backend is already connected, don't recreate the WebSocket.\n      // This would break the connection.\n      // If there isn't an active connection, a backend may be waiting to connect,\n      // in which case it's okay to make a new one.\n      return;\n    }\n\n    // not when debugging in chrome\n    // TODO(t12832058) This check is broken\n    if (!window.document) {\n      const AppState = require('../AppState/AppState');\n      const getDevServer = require('./Devtools/getDevServer');\n\n      // Don't steal the DevTools from currently active app.\n      // Note: if you add any AppState subscriptions to this file,\n      // you will also need to guard against `AppState.isAvailable`,\n      // or the code will throw for bundles that don't have it.\n      const isAppActive = () => AppState.currentState !== 'background';\n\n      // Get hostname from development server (packager)\n      const devServer = getDevServer();\n      const host = devServer.bundleLoadedFromServer\n        ? devServer.url\n            .replace(/https?:\\/\\//, '')\n            .replace(/\\/$/, '')\n            .split(':')[0]\n        : 'localhost';\n\n      // Read the optional global variable for backward compatibility.\n      // It was added in https://github.com/facebook/react-native/commit/bf2b435322e89d0aeee8792b1c6e04656c2719a0.\n      const port =\n        window.__REACT_DEVTOOLS_PORT__ != null\n          ? window.__REACT_DEVTOOLS_PORT__\n          : 8097;\n\n      const WebSocket = require('../WebSocket/WebSocket');\n      ws = new WebSocket('ws://' + host + ':' + port);\n      ws.addEventListener('close', event => {\n        isWebSocketOpen = false;\n      });\n      ws.addEventListener('open', event => {\n        isWebSocketOpen = true;\n      });\n\n      reactDevTools.connectToDevTools({\n        isAppActive,\n        resolveRNStyle,\n        nativeStyleEditorValidAttributes: Object.keys(\n          ReactNativeStyleAttributes,\n        ),\n        websocket: ws,\n        devToolsSettingsManager,\n      });\n    }\n  }\n\n  // 1. If React DevTools has already been opened and initialized in Fusebox, bindings survive reloads\n  if (global[reactDevToolsFuseboxGlobalBindingName] != null) {\n    disconnectBackendFromReactDevToolsInFuseboxIfNeeded();\n    const domain =\n      fuseboxReactDevToolsDispatcher.initializeDomain('react-devtools');\n    connectToReactDevToolsInFusebox(domain);\n  }\n\n  // 2. If React DevTools panel in Fusebox was opened for the first time after the runtime has been created\n  // 2. OR if React DevTools frontend was re-initialized: Chrome DevTools was closed and then re-opened\n  global.__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__.onDomainInitialization.addEventListener(\n    (domain: Domain) => {\n      if (domain.name === 'react-devtools') {\n        disconnectBackendFromReactDevToolsInFuseboxIfNeeded();\n        connectToReactDevToolsInFusebox(domain);\n      }\n    },\n  );\n\n  // 3. Fallback to attempting to connect WS-based RDT frontend\n  const RCTNativeAppEventEmitter = require('../EventEmitter/RCTNativeAppEventEmitter');\n  RCTNativeAppEventEmitter.addListener(\n    'RCTDevMenuShown',\n    connectToWSBasedReactDevToolsFrontend,\n  );\n  connectToWSBasedReactDevToolsFrontend(); // Try connecting once on load\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"script","externalDependencies":[]}