{"ast":null,"code":"function castToNumber(value) {\n  return value ? Number(value) : 0;\n}\nexport default class DOMRectReadOnly {\n  #x;\n  #y;\n  #width;\n  #height;\n  constructor(x, y, width, height) {\n    this.__setInternalX(x);\n    this.__setInternalY(y);\n    this.__setInternalWidth(width);\n    this.__setInternalHeight(height);\n  }\n  get x() {\n    return this.#x;\n  }\n  get y() {\n    return this.#y;\n  }\n  get width() {\n    return this.#width;\n  }\n  get height() {\n    return this.#height;\n  }\n  get top() {\n    const height = this.#height;\n    const y = this.#y;\n    if (height < 0) {\n      return y + height;\n    }\n    return y;\n  }\n  get right() {\n    const width = this.#width;\n    const x = this.#x;\n    if (width < 0) {\n      return x;\n    }\n    return x + width;\n  }\n  get bottom() {\n    const height = this.#height;\n    const y = this.#y;\n    if (height < 0) {\n      return y;\n    }\n    return y + height;\n  }\n  get left() {\n    const width = this.#width;\n    const x = this.#x;\n    if (width < 0) {\n      return x + width;\n    }\n    return x;\n  }\n  toJSON() {\n    const {\n      x,\n      y,\n      width,\n      height,\n      top,\n      left,\n      bottom,\n      right\n    } = this;\n    return {\n      x,\n      y,\n      width,\n      height,\n      top,\n      left,\n      bottom,\n      right\n    };\n  }\n  static fromRect(rect) {\n    if (!rect) {\n      return new DOMRectReadOnly();\n    }\n    return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);\n  }\n  __getInternalX() {\n    return this.#x;\n  }\n  __getInternalY() {\n    return this.#y;\n  }\n  __getInternalWidth() {\n    return this.#width;\n  }\n  __getInternalHeight() {\n    return this.#height;\n  }\n  __setInternalX(x) {\n    this.#x = castToNumber(x);\n  }\n  __setInternalY(y) {\n    this.#y = castToNumber(y);\n  }\n  __setInternalWidth(width) {\n    this.#width = castToNumber(width);\n  }\n  __setInternalHeight(height) {\n    this.#height = castToNumber(height);\n  }\n}","map":{"version":3,"names":["castToNumber","value","Number","DOMRectReadOnly","x","y","width","height","constructor","__setInternalX","__setInternalY","__setInternalWidth","__setInternalHeight","top","right","bottom","left","toJSON","fromRect","rect","__getInternalX","__getInternalY","__getInternalWidth","__getInternalHeight"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/src/private/webapis/dom/geometry/DOMRectReadOnly.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n/**\n * The JSDoc comments in this file have been extracted from [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).\n * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/contributors.txt),\n * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n */\n\n// flowlint sketchy-null:off, unsafe-getters-setters:off\n\nexport interface DOMRectLike {\n  x?: ?number;\n  y?: ?number;\n  width?: ?number;\n  height?: ?number;\n}\n\nfunction castToNumber(value: mixed): number {\n  return value ? Number(value) : 0;\n}\n\n/**\n * The `DOMRectReadOnly` interface specifies the standard properties used by `DOMRect` to define a rectangle whose properties are immutable.\n *\n * This is a (mostly) spec-compliant version of `DOMRectReadOnly` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).\n */\nexport default class DOMRectReadOnly {\n  #x: number;\n  #y: number;\n  #width: number;\n  #height: number;\n\n  constructor(x: ?number, y: ?number, width: ?number, height: ?number) {\n    this.__setInternalX(x);\n    this.__setInternalY(y);\n    this.__setInternalWidth(width);\n    this.__setInternalHeight(height);\n  }\n\n  /**\n   * The x coordinate of the `DOMRectReadOnly`'s origin.\n   */\n  get x(): number {\n    return this.#x;\n  }\n\n  /**\n   * The y coordinate of the `DOMRectReadOnly`'s origin.\n   */\n  get y(): number {\n    return this.#y;\n  }\n\n  /**\n   * The width of the `DOMRectReadOnly`.\n   */\n  get width(): number {\n    return this.#width;\n  }\n\n  /**\n   * The height of the `DOMRectReadOnly`.\n   */\n  get height(): number {\n    return this.#height;\n  }\n\n  /**\n   * Returns the top coordinate value of the `DOMRect` (has the same value as `y`, or `y + height` if `height` is negative).\n   */\n  get top(): number {\n    const height = this.#height;\n    const y = this.#y;\n\n    if (height < 0) {\n      return y + height;\n    }\n\n    return y;\n  }\n\n  /**\n   * Returns the right coordinate value of the `DOMRect` (has the same value as ``x + width`, or `x` if `width` is negative).\n   */\n  get right(): number {\n    const width = this.#width;\n    const x = this.#x;\n\n    if (width < 0) {\n      return x;\n    }\n\n    return x + width;\n  }\n\n  /**\n   * Returns the bottom coordinate value of the `DOMRect` (has the same value as `y + height`, or `y` if `height` is negative).\n   */\n  get bottom(): number {\n    const height = this.#height;\n    const y = this.#y;\n\n    if (height < 0) {\n      return y;\n    }\n\n    return y + height;\n  }\n\n  /**\n   * Returns the left coordinate value of the `DOMRect` (has the same value as `x`, or `x + width` if `width` is negative).\n   */\n  get left(): number {\n    const width = this.#width;\n    const x = this.#x;\n\n    if (width < 0) {\n      return x + width;\n    }\n\n    return x;\n  }\n\n  toJSON(): {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    top: number,\n    left: number,\n    bottom: number,\n    right: number,\n  } {\n    const {x, y, width, height, top, left, bottom, right} = this;\n    return {x, y, width, height, top, left, bottom, right};\n  }\n\n  /**\n   * Creates a new `DOMRectReadOnly` object with a given location and dimensions.\n   */\n  static fromRect(rect?: ?DOMRectLike): DOMRectReadOnly {\n    if (!rect) {\n      return new DOMRectReadOnly();\n    }\n\n    return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);\n  }\n\n  __getInternalX(): number {\n    return this.#x;\n  }\n\n  __getInternalY(): number {\n    return this.#y;\n  }\n\n  __getInternalWidth(): number {\n    return this.#width;\n  }\n\n  __getInternalHeight(): number {\n    return this.#height;\n  }\n\n  __setInternalX(x: ?number) {\n    this.#x = castToNumber(x);\n  }\n\n  __setInternalY(y: ?number) {\n    this.#y = castToNumber(y);\n  }\n\n  __setInternalWidth(width: ?number) {\n    this.#width = castToNumber(width);\n  }\n\n  __setInternalHeight(height: ?number) {\n    this.#height = castToNumber(height);\n  }\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}