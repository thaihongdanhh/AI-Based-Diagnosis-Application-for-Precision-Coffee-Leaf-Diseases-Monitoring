{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/screens/PE.js\";\nimport React from 'react';\nimport { Camera } from 'expo-camera';\nimport { cameraWithTensors } from '@tensorflow/tfjs-react-native';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Block } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport * as tf from '@tensorflow/tfjs';\nimport * as jpeg from 'jpeg-js';\nimport { theme } from 'galio-framework';\nimport { Card } from 'react-native-elements';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport Svg, { Circle, Rect } from 'react-native-svg';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Images, nowTheme } from \"../constants\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  width,\n  height\n} = Dimensions.get('screen');\nconst TensorCamera = cameraWithTensors(Camera);\nconst IS_ANDROID = Platform.OS === 'android';\nconst IS_IOS = Platform.OS === 'ios';\nconst CAM_PREVIEW_WIDTH = Dimensions.get('window').width;\nconst CAM_PREVIEW_HEIGHT = CAM_PREVIEW_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4);\nconst MIN_KEYPOINT_SCORE = 0.3;\nconst OUTPUT_TENSOR_WIDTH = 480;\nconst OUTPUT_TENSOR_HEIGHT = OUTPUT_TENSOR_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4);\nconst AUTO_RENDER = true;\nconst LOAD_MODEL_FROM_BUNDLE = false;\nexport default class PE extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      modalProcess: false,\n      Image: [],\n      orientation: null,\n      outputTensorWidth: null,\n      outputTensorHeight: null,\n      Loading: false\n    };\n  }\n  handleCameraStream = async (images, updatePreview, gl) => {\n    const loop = async () => {\n      const nextImageTensor = images.next().value;\n      const height = nextImageTensor.shape[0];\n      const width = nextImageTensor.shape[1];\n      const data = new Buffer(tf.concat([nextImageTensor, tf.ones([height, width, 1]).mul(255)], [-1]).slice([0], [height, width, 4]).dataSync());\n      const rawImageData = {\n        data,\n        width,\n        height\n      };\n      const jpegImageData = jpeg.encode(rawImageData);\n      const imgBase64 = tf.util.decodeString(jpegImageData.data, \"base64\");\n      this.setState({}, async () => {\n        const formdata = new FormData();\n        formdata.append('files', {\n          uri: 'data:image/png;base64,' + imgBase64,\n          name: 'coffee-mobile.png',\n          type: 'image/png'\n        });\n        await axios.post('http://ai.ailab.vn:5003/upload2', formdata, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          this.setState({\n            Image: res.data\n          });\n        });\n        nextImageTensor.dispose();\n      });\n      await this.sleep(200);\n      requestAnimationFrame(loop);\n    };\n    loop();\n  };\n  isPortrait = () => {\n    const {\n      orientation\n    } = this.state;\n    return orientation === ScreenOrientation.Orientation.PORTRAIT_UP;\n  };\n  getOutputTensorWidth = () => {\n    return OUTPUT_TENSOR_WIDTH;\n  };\n  getOutputTensorHeight = () => {\n    return OUTPUT_TENSOR_HEIGHT;\n  };\n  getTextureRotationAngleInDegrees = async () => {\n    console.log('VÃ´ Ä‘Ã¢y rá»“i ==============');\n    if (IS_ANDROID) {\n      return 0;\n    }\n    switch (this.state.orientation) {\n      case ScreenOrientation.Orientation.PORTRAIT_DOWN:\n        return 180;\n      case ScreenOrientation.Orientation.LANDSCAPE_LEFT:\n        return CameraType.front ? 270 : 90;\n      case ScreenOrientation.Orientation.LANDSCAPE_RIGHT:\n        return CameraType.front ? 90 : 270;\n      default:\n        return 0;\n    }\n  };\n  sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  render() {\n    const {\n      isLoading,\n      modalProcess,\n      outputTensorHeight,\n      outputTensorWidth\n    } = this.state;\n    if (isLoading) {\n      return _jsxDEV(View, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 14\n      }, this);\n    } else {\n      return _jsxDEV(_Fragment, {\n        children: [_jsxDEV(View, {\n          flex: true,\n          children: !this.state.Loading && _jsxDEV(Image, {\n            source: {\n              uri: this.state.Image\n            },\n            style: {\n              width: '100%',\n              height: '100%',\n              resizeMode: 'contain'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          children: _jsxDEV(Block, {\n            flex: true,\n            style: styles.container,\n            children: [_jsxDEV(Modal, {\n              animationType: \"slide\",\n              transparent: true,\n              visible: modalProcess,\n              onRequestClose: () => {},\n              children: _jsxDEV(View, {\n                style: styles.centeredView,\n                children: _jsxDEV(View, {\n                  style: styles.modalView,\n                  children: [_jsxDEV(Text, {\n                    style: styles.modalText,\n                    children: [\"On Developing ... Not Available Yet !\", ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), _jsxDEV(Block, {\n                    row: true,\n                    center: true,\n                    space: \"between\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), _jsxDEV(Block, {\n              flex: true,\n              space: \"between\",\n              style: styles.padded,\n              children: [_jsxDEV(Block, {\n                middle: true,\n                row: true,\n                style: {\n                  marginTop: 150\n                },\n                children: _jsxDEV(Image, {\n                  source: Images.Logo,\n                  style: {\n                    resizeMode: 'stretch',\n                    width: width - theme.SIZES.BASE * 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), _jsxDEV(Block, {\n                middle: true,\n                row: true,\n                style: {},\n                children: _jsxDEV(SafeAreaView, {\n                  style: styles.containerCard,\n                  children: _jsxDEV(View, {\n                    style: styles.containerCard,\n                    children: _jsxDEV(Card, {\n                      containerStyle: styles.containerCard,\n                      wrapperStyle: {\n                        width: width - theme.SIZES.BASE * 2\n                      },\n                      children: [_jsxDEV(Card.Title, {\n                        style: [styles.titleCard, {\n                          paddingTop: 15\n                        }],\n                        children: \"MODULES\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 25\n                      }, this), _jsxDEV(Card.Divider, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 25\n                      }, this), _jsxDEV(Text, {\n                        style: styles.paragraph,\n                        children: [time, \" - \", date_current]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 25\n                      }, this), _jsxDEV(Block, {\n                        row: true,\n                        children: [_jsxDEV(Button, {\n                          textStyle: {\n                            fontFamily: 'montserrat-regular',\n                            fontSize: 18,\n                            color: 'black'\n                          },\n                          style: styles.buttonA,\n                          onPress: () => navigation.navigate(\"PE\", {\n                            isReload: false\n                          }),\n                          children: _jsxDEV(Text, {\n                            style: {\n                              fontFamily: 'montserrat-regular',\n                              fontSize: 18,\n                              color: 'black',\n                              textAlign: 'center'\n                            },\n                            children: [\"Pond\", '\\n', \"Environment \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 281,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 276,\n                          columnNumber: 27\n                        }, this), _jsxDEV(Button, {\n                          textStyle: {\n                            fontFamily: 'montserrat-regular',\n                            fontSize: 18,\n                            color: 'black'\n                          },\n                          style: styles.buttonB,\n                          onPress: () => navigation.navigate(\"W\", {\n                            isReload: false\n                          }),\n                          children: \"Weather\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 25\n                      }, this), _jsxDEV(Block, {\n                        row: true,\n                        children: [_jsxDEV(Button, {\n                          textStyle: {\n                            fontFamily: 'montserrat-regular',\n                            fontSize: 18,\n                            color: 'black'\n                          },\n                          style: styles.buttonC,\n                          onPress: () => navigation.navigate(\"AA\", {\n                            isReload: false\n                          }),\n                          children: \"Aqua Assistant\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 292,\n                          columnNumber: 27\n                        }, this), _jsxDEV(Button, {\n                          textStyle: {\n                            fontFamily: 'montserrat-regular',\n                            fontSize: 18,\n                            color: 'black'\n                          },\n                          style: styles.buttonD,\n                          onPress: () => navigation.navigate(\"CS\", {\n                            isReload: false\n                          }),\n                          children: \"Control System\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), _jsxDEV(Block, {\n                middle: true,\n                flex: true,\n                space: \"around\",\n                style: {\n                  zIndex: 2\n                },\n                children: [_jsxDEV(Block, {\n                  middle: true,\n                  row: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), _jsxDEV(Block, {\n                  middle: true,\n                  row: true,\n                  style: {\n                    marginTop: 200,\n                    marginBottom: 500\n                  },\n                  children: _jsxDEV(Text, {\n                    color: \"white\",\n                    size: 16,\n                    style: {\n                      fontFamily: 'montserrat-regular'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  async componentDidMount() {\n    await tf.ready();\n    const cameras = ['cam5'];\n    cameras.map((data, index) => {\n      const client = new W3CWebSocket('ws://ai.ailab.vn:5005/media/' + data);\n      client.onopen = () => {\n        console.log('WebSocket Client Connected ' + data);\n        this.setState({\n          isQuetLai: true,\n          message_log: ''\n        }, () => {\n          client.onmessage = async message => {\n            var img = Buffer.from(JSON.parse(message.data).src, 'base64');\n            this.setState({\n              Image: 'data:image/png;base64,' + JSON.parse(message.data).src,\n              [data]: {\n                src: 'data:image/png;base64,' + JSON.parse(message.data).src,\n                raw: 'data:image/png;base64,' + JSON.parse(message.data).raw,\n                rotate: '0deg',\n                count: JSON.parse(message.data).count,\n                color: JSON.parse(message.data).color\n              },\n              isLoading: false\n            });\n          };\n        });\n      };\n    });\n  }\n  componentWillUnmount() {\n    clearInterval(this.time, this.date_current);\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  camera: {},\n  svg: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 30\n  }\n});","map":{"version":3,"names":["React","Camera","cameraWithTensors","AppRegistry","Alert","StyleSheet","Text","TouchableOpacity","View","Dimensions","Block","Image","Platform","Modal","SafeAreaView","tf","jpeg","theme","Card","ScreenOrientation","Svg","Circle","Rect","axios","w3cwebsocket","W3CWebSocket","Images","nowTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","width","height","get","TensorCamera","IS_ANDROID","OS","IS_IOS","CAM_PREVIEW_WIDTH","CAM_PREVIEW_HEIGHT","MIN_KEYPOINT_SCORE","OUTPUT_TENSOR_WIDTH","OUTPUT_TENSOR_HEIGHT","AUTO_RENDER","LOAD_MODEL_FROM_BUNDLE","PE","Component","constructor","props","state","isLoading","modalProcess","orientation","outputTensorWidth","outputTensorHeight","Loading","handleCameraStream","images","updatePreview","gl","loop","nextImageTensor","next","value","shape","data","Buffer","concat","ones","mul","slice","dataSync","rawImageData","jpegImageData","encode","imgBase64","util","decodeString","setState","formdata","FormData","append","uri","name","type","post","headers","then","res","dispose","sleep","requestAnimationFrame","isPortrait","Orientation","PORTRAIT_UP","getOutputTensorWidth","getOutputTensorHeight","getTextureRotationAngleInDegrees","console","log","PORTRAIT_DOWN","LANDSCAPE_LEFT","CameraType","front","LANDSCAPE_RIGHT","ms","Promise","resolve","setTimeout","render","fileName","_jsxFileName","lineNumber","columnNumber","children","flex","source","style","resizeMode","styles","container","animationType","transparent","visible","onRequestClose","centeredView","modalView","modalText","row","center","space","padded","middle","marginTop","Logo","SIZES","BASE","containerCard","containerStyle","wrapperStyle","Title","titleCard","paddingTop","Divider","paragraph","time","date_current","Button","textStyle","fontFamily","fontSize","color","buttonA","onPress","navigation","navigate","isReload","textAlign","buttonB","buttonC","buttonD","zIndex","marginBottom","size","componentDidMount","ready","cameras","map","index","client","onopen","isQuetLai","message_log","onmessage","message","img","from","JSON","parse","src","raw","rotate","count","componentWillUnmount","clearInterval","create","justifyContent","camera","svg","position"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/screens/PE.js"],"sourcesContent":["import React from 'react'\nimport { Camera } from 'expo-camera'\nimport { cameraWithTensors } from '@tensorflow/tfjs-react-native'\nimport {\n  AppRegistry,\n  Alert,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n  Block,\n  Image,\n  Platform,\n  Modal,\n  SafeAreaView,\n\n} from 'react-native'\n\nimport * as tf from '@tensorflow/tfjs'\nimport * as jpeg from 'jpeg-js';\n\nimport { theme } from 'galio-framework';\nimport { Card } from 'react-native-elements'\n\n\n// import * as faceDetection from '@tensorflow-models/face-detection'\nimport * as ScreenOrientation from 'expo-screen-orientation'\nimport Svg, { Circle, Rect } from 'react-native-svg'\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Images, nowTheme } from '../constants';\nconst { width, height } = Dimensions.get('screen');\n\nconst TensorCamera = cameraWithTensors(Camera)\n\nconst IS_ANDROID = Platform.OS === 'android'\nconst IS_IOS = Platform.OS === 'ios'\n\n// const model = faceDetection.SupportedModels.MediaPipeFaceMesh;\n// const detectorConfig = {\n//   runtime: 'mediapipe', // or 'tfjs'\n// }\n// const detector = await faceDetection.createDetector(model, detectorConfig);\n\n// Camera preview size.\n//\n// From experiments, to render camera feed without distortion, 16:9 ratio\n// should be used fo iOS devices and 4:3 ratio should be used for android\n// devices.\n//\n// This might not cover all cases.\nconst CAM_PREVIEW_WIDTH = Dimensions.get('window').width\nconst CAM_PREVIEW_HEIGHT = CAM_PREVIEW_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4)\n\n// The score threshold for pose detection results.\nconst MIN_KEYPOINT_SCORE = 0.3\n\n// The size of the resized output from TensorCamera.\n//\n// For movenet, the size here doesn't matter too much because the model will\n// preprocess the input (crop, resize, etc). For best result, use the size that\n// doesn't distort the image.\nconst OUTPUT_TENSOR_WIDTH = 480\nconst OUTPUT_TENSOR_HEIGHT = OUTPUT_TENSOR_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4)\n// OUTPUT_TENSOR_WIDTH = 360\n// OUTPUT_TENSOR_HEIGHT = 360\n\n// Whether to auto-render TensorCamera preview.\nconst AUTO_RENDER = true\n\n// Whether to load model from app bundle (true) or through network (false).\nconst LOAD_MODEL_FROM_BUNDLE = false\n\n\nexport default class PE extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      modalProcess: false,\n      Image: [],\n      orientation: null,\n      outputTensorWidth: null,\n      outputTensorHeight: null,\n      Loading: false\n    }\n  }\n\n  handleCameraStream = async (images, updatePreview, gl) => {\n    const loop = async () => {\n      const nextImageTensor = images.next().value\n      const height = nextImageTensor.shape[0]\n      const width = nextImageTensor.shape[1]\n      const data = new Buffer(\n        // concat with an extra alpha channel and slice up to 4 channels to handle 3 and 4 channels tensors\n        tf.concat([nextImageTensor, tf.ones([height, width, 1]).mul(255)], [-1])\n          .slice([0], [height, width, 4])\n          .dataSync(),\n      )\n\n      const rawImageData = { data, width, height };\n      const jpegImageData = jpeg.encode(rawImageData);\n\n      const imgBase64 = tf.util.decodeString(jpegImageData.data, \"base64\")\n      this.setState({\n        // Loading: true\n      }, async () => {\n        // console.log(imgBase64)\n        const formdata = new FormData();\n\n        formdata.append('files', {\n          uri: 'data:image/png;base64,' + imgBase64, // base64\n          name: 'coffee-mobile.png',\n          type: 'image/png',\n        });\n\n        await axios.post('http://ai.ailab.vn:5003/upload2', formdata, { headers: { 'Content-Type': 'multipart/form-data' } })\n          .then(res => {\n            // console.log(res.data[0].file_process)\n            this.setState({\n              Image: res.data,\n              // Loading: false\n            })\n          })\n        nextImageTensor.dispose();\n      })\n\n\n\n      //\n      // do something with tensor here\n      //\n\n      // if autorender is false you need the following two lines.\n      // updatePreview();\n      // gl.endFrameEXP();\n      await this.sleep(200)\n      requestAnimationFrame(loop)\n    }\n    loop()\n  }\n\n\n  isPortrait = () => {\n    const {\n      orientation\n    } = this.state\n    return (\n      orientation === ScreenOrientation.Orientation.PORTRAIT_UP\n      // || orientation === ScreenOrientation.Orientation.PORTRAIT_DOWN\n    )\n  }\n\n  getOutputTensorWidth = () => {\n    return OUTPUT_TENSOR_WIDTH\n    // return this.isPortrait() || IS_ANDROID\n    //   ? OUTPUT_TENSOR_WIDTH\n    //   : OUTPUT_TENSOR_HEIGHT\n  }\n\n  getOutputTensorHeight = () => {\n    return OUTPUT_TENSOR_HEIGHT\n    // return this.isPortrait() || IS_ANDROID\n    //   ? OUTPUT_TENSOR_HEIGHT\n    //   : OUTPUT_TENSOR_WIDTH\n  }\n\n  getTextureRotationAngleInDegrees = async () => {\n    // On Android, the camera texture will rotate behind the scene as the phone\n    // changes orientation, so we don't need to rotate it in TensorCamera.\n    console.log('VÃ´ Ä‘Ã¢y rá»“i ==============')\n    if (IS_ANDROID) {\n      return 0\n    }\n\n    // For iOS, the camera texture won't rotate automatically. Calculate the\n    // rotation angles here which will be passed to TensorCamera to rotate it\n    // internally.\n    // console.log(this.state.orientation)\n    switch (this.state.orientation) {\n      // Not supported on iOS as of 11/2021, but add it here just in case.\n      case ScreenOrientation.Orientation.PORTRAIT_DOWN:\n        return 180\n      case ScreenOrientation.Orientation.LANDSCAPE_LEFT:\n        return CameraType.front ? 270 : 90\n      case ScreenOrientation.Orientation.LANDSCAPE_RIGHT:\n        return CameraType.front ? 90 : 270\n      default:\n        return 0\n    }\n  }\n\n  sleep = ms => new Promise(\n    resolve => setTimeout(resolve, ms)\n  );\n\n  render() {\n    const { \n      isLoading, \n      modalProcess,\n      outputTensorHeight, \n      outputTensorWidth } = this.state\n    // console.log(this.getOutputTensorWidth())\n    // console.log(this.getOutputTensorHeight())\n    if (isLoading) {\n      return <View></View>\n    } else {\n      return (\n        <>\n          <View flex >\n            {!this.state.Loading && (\n              <Image source={{ uri: this.state.Image }} style={{ width: '100%', height: '100%', resizeMode: 'contain' }} />\n            )}\n          </View>\n          <View>\n            <Block flex style={styles.container}>\n              <Modal\n                animationType='slide'\n                transparent={true}\n                visible={modalProcess}\n                // key={this.state.data2['index']}\n                onRequestClose={() => { }}\n              >\n                <View style={styles.centeredView}>\n                  <View style={styles.modalView}>\n                    <Text style={styles.modalText}>\n                      On Developing ... Not Available Yet !{' '}\n                    </Text>\n                    <Block row center space='between'>                      \n                    </Block>\n                  </View>\n                </View>\n              </Modal>              \n              {/* <Block flex center>\n          <ImageBackground  \n            source={Images.Pro}\n            style={{ height, width, zIndex: 1 }} \n          />     \n        </Block> */}\n              <Block flex space=\"between\" style={styles.padded}>\n\n                <Block middle row style={{\n                  marginTop: 150\n                }}>\n                  <Image\n                    source={Images.Logo}\n                    style={{\n                      // height: 200,\n                      // width: \"600\",\n                      resizeMode: 'stretch',\n                      width: width - theme.SIZES.BASE * 2\n                    }}\n                  />\n                </Block>\n\n                <Block middle row style={{}}>\n                  <SafeAreaView style={styles.containerCard}>\n                    <View style={styles.containerCard}>\n                      <Card containerStyle={styles.containerCard} wrapperStyle={{\n                        width: width - theme.SIZES.BASE * 2\n                      }}>\n                        <Card.Title style={[styles.titleCard, {\n                          paddingTop: 15\n                        }]}>\n                          MODULES\n                        </Card.Title>\n                        <Card.Divider />\n                        {/* <Text style={{ textAlign: 'center', fontSize: '20px' }}>\n                    \n                  </Text> */}\n                        <Text style={styles.paragraph}>\n                          {time} - {date_current}\n                        </Text>\n                        <Block row>\n                          <Button\n                            textStyle={{ fontFamily: 'montserrat-regular', fontSize: 18, color: 'black' }}\n                            style={styles.buttonA}\n                            onPress={() => navigation.navigate(\"PE\", { isReload: false })}\n                          >\n                            <Text style={{ fontFamily: 'montserrat-regular', fontSize: 18, color: 'black', textAlign: 'center' }}>Pond{'\\n'}Environment </Text>\n                          </Button>\n                          <Button\n                            textStyle={{ fontFamily: 'montserrat-regular', fontSize: 18, color: 'black' }}\n                            style={styles.buttonB}\n                            onPress={() => navigation.navigate(\"W\", { isReload: false })}\n                          >\n                            Weather\n                          </Button>\n                        </Block>\n                        <Block row>\n                          <Button\n                            textStyle={{ fontFamily: 'montserrat-regular', fontSize: 18, color: 'black' }}\n                            style={styles.buttonC}\n                            onPress={() => navigation.navigate(\"AA\", { isReload: false })}\n                          >\n                            Aqua Assistant\n                          </Button>\n                          <Button\n                            textStyle={{ fontFamily: 'montserrat-regular', fontSize: 18, color: 'black' }}\n                            style={styles.buttonD}\n                            onPress={() => navigation.navigate(\"CS\", { isReload: false })}\n                          >\n                            Control System\n                          </Button>\n                        </Block>\n                      </Card>\n                    </View>\n                  </SafeAreaView>\n                </Block>\n\n                <Block middle flex space=\"around\" style={{ zIndex: 2 }}>\n                  <Block middle row>\n\n                  </Block>\n                  <Block middle row style={{ marginTop: 200, marginBottom: 500 }}>\n                    <Text\n                      color=\"white\"\n                      size={16}\n                      style={{ fontFamily: 'montserrat-regular' }}\n                    >\n                      {/* Developed by DanhTH */}\n                    </Text>\n                  </Block>\n                </Block>\n              </Block>\n            </Block>\n\n          </View>\n\n        </>\n      )\n    }\n  }\n\n  async componentDidMount() {\n    await tf.ready()\n\n    // let canvas = document.getElementById(\"video-canvas\");\n    // let url = \"ws://ai.ailab.vn:5005/media/zurich\"\n\n    // new JSMpeg.Player(url, { canvas: canvas });\n\n    const cameras = ['cam5']\n    // const cameras = ['cam1', 'cam2']\n    cameras.map((data, index) => {\n      const client = new W3CWebSocket('ws://ai.ailab.vn:5005/media/' + data);\n      client.onopen = () => {\n        console.log('WebSocket Client Connected ' + data);\n        this.setState({\n          isQuetLai: true,\n          message_log: ''\n        }, () => {\n          client.onmessage = async (message) => {\n            // console.log(JSON.parse(message.data))\n            var img = Buffer.from(JSON.parse(message.data).src, 'base64');\n            // console.log(JSON.parse(message.data).count)       \n            // console.log(img)     \n            this.setState({\n              Image: 'data:image/png;base64,' + JSON.parse(message.data).src,\n              [data]: {\n                src: 'data:image/png;base64,' + JSON.parse(message.data).src,\n                raw: 'data:image/png;base64,' + JSON.parse(message.data).raw,\n                rotate: '0deg',\n                count: JSON.parse(message.data).count,\n                color: JSON.parse(message.data).color\n              },\n              isLoading: false\n            })\n\n          }\n        })\n      }\n    })\n\n    // this.setState({\n    //   isLoading: false\n    // })\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.time, this.date_current)\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  camera: {\n    // flex: 1,\n    // height: '85%',\n    // width: '100%',\n    // flex: 0,\n    // height: '100%',\n    // borderColor: 'green',\n    // borderWidth: 10,\n    // width: 400,\n    // borderRadius: 360,\n    // backgroundColor: 'transparent',\n    // flexDirection: 'row',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    // alignSelf: 'center',\n    // height: 400,\n    // overflow: 'hidden'\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 30\n  },\n})\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}