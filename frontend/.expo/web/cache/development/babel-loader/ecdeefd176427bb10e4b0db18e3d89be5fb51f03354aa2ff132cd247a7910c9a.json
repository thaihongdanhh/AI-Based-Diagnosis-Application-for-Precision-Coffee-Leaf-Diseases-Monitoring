{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js\";\nimport RefreshControl from \"../../Components/RefreshControl/RefreshControl\";\nimport ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport flattenStyle from \"../../StyleSheet/flattenStyle\";\nimport splitLayoutProps from \"../../StyleSheet/splitLayoutProps\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Platform from \"../../Utilities/Platform\";\nimport useMergeRefs from \"../../Utilities/useMergeRefs\";\nimport createAnimatedComponent from \"../createAnimatedComponent\";\nimport useAnimatedProps from \"../useAnimatedProps\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedScrollView = React.forwardRef(function AnimatedScrollViewWithOrWithoutInvertedRefreshControl(props, forwardedRef) {\n  if (Platform.OS === 'android' && props.refreshControl != null && props.style != null) {\n    return _jsxDEV(AnimatedScrollViewWithInvertedRefreshControl, Object.assign({\n      scrollEventThrottle: 0.0001\n    }, props, {\n      ref: forwardedRef,\n      refreshControl: props.refreshControl\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this);\n  } else {\n    return _jsxDEV(AnimatedScrollViewWithoutInvertedRefreshControl, Object.assign({\n      scrollEventThrottle: 0.0001\n    }, props, {\n      ref: forwardedRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this);\n  }\n});\nconst AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(function AnimatedScrollViewWithInvertedRefreshControl(props, forwardedRef) {\n  const {\n    intermediatePropsForRefreshControl,\n    intermediatePropsForScrollView\n  } = useMemo(() => {\n    const {\n      outer,\n      inner\n    } = splitLayoutProps(flattenStyle(props.style));\n    return {\n      intermediatePropsForRefreshControl: {\n        style: outer\n      },\n      intermediatePropsForScrollView: Object.assign({}, props, {\n        style: inner\n      })\n    };\n  }, [props]);\n  const [refreshControlAnimatedProps, refreshControlRef] = useAnimatedProps(intermediatePropsForRefreshControl);\n  const refreshControl = React.cloneElement(props.refreshControl, Object.assign({}, refreshControlAnimatedProps, {\n    ref: refreshControlRef\n  }));\n  const [scrollViewAnimatedProps, scrollViewRef] = useAnimatedProps(intermediatePropsForScrollView);\n  const ref = useMergeRefs(scrollViewRef, forwardedRef);\n  return _jsxDEV(ScrollView, Object.assign({}, scrollViewAnimatedProps, {\n    ref: ref,\n    refreshControl: refreshControl,\n    style: StyleSheet.compose(scrollViewAnimatedProps.style, refreshControlAnimatedProps.style)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, this);\n});\nconst AnimatedScrollViewWithoutInvertedRefreshControl = createAnimatedComponent(ScrollView);\nexport default AnimatedScrollView;","map":{"version":3,"names":["RefreshControl","ScrollView","flattenStyle","splitLayoutProps","StyleSheet","Platform","useMergeRefs","createAnimatedComponent","useAnimatedProps","React","useMemo","jsxDEV","_jsxDEV","AnimatedScrollView","forwardRef","AnimatedScrollViewWithOrWithoutInvertedRefreshControl","props","forwardedRef","OS","refreshControl","style","AnimatedScrollViewWithInvertedRefreshControl","Object","assign","scrollEventThrottle","ref","fileName","_jsxFileName","lineNumber","columnNumber","AnimatedScrollViewWithoutInvertedRefreshControl","intermediatePropsForRefreshControl","intermediatePropsForScrollView","outer","inner","refreshControlAnimatedProps","refreshControlRef","cloneElement","scrollViewAnimatedProps","scrollViewRef","compose"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {____ViewStyle_Internal} from '../../StyleSheet/StyleSheetTypes';\nimport type {AnimatedComponentType} from '../createAnimatedComponent';\n\nimport RefreshControl from '../../Components/RefreshControl/RefreshControl';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport splitLayoutProps from '../../StyleSheet/splitLayoutProps';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport useAnimatedProps from '../useAnimatedProps';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\ntype Props = React.ElementConfig<typeof ScrollView>;\ntype Instance = React.ElementRef<typeof ScrollView>;\n\n/**\n * @see https://github.com/facebook/react-native/commit/b8c8562\n */\nconst AnimatedScrollView: AnimatedComponentType<Props, Instance> =\n  React.forwardRef(\n    function AnimatedScrollViewWithOrWithoutInvertedRefreshControl(\n      props,\n      forwardedRef,\n    ) {\n      // (Android only) When a ScrollView has a RefreshControl and\n      // any `style` property set with an Animated.Value, the CSS\n      // gets incorrectly applied twice. This is because ScrollView\n      // swaps the parent/child relationship of itself and the\n      // RefreshControl component (see ScrollView.js for more details).\n      if (\n        Platform.OS === 'android' &&\n        props.refreshControl != null &&\n        props.style != null\n      ) {\n        return (\n          // $FlowFixMe[prop-missing]\n          <AnimatedScrollViewWithInvertedRefreshControl\n            scrollEventThrottle={0.0001}\n            {...props}\n            ref={forwardedRef}\n            refreshControl={props.refreshControl}\n          />\n        );\n      } else {\n        return (\n          <AnimatedScrollViewWithoutInvertedRefreshControl\n            scrollEventThrottle={0.0001}\n            {...props}\n            ref={forwardedRef}\n          />\n        );\n      }\n    },\n  );\n\nconst AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(\n  // $FlowFixMe[incompatible-call]\n  function AnimatedScrollViewWithInvertedRefreshControl(\n    props: {\n      ...React.ElementConfig<typeof ScrollView>,\n      // $FlowFixMe[unclear-type] Same Flow type as `refreshControl` in ScrollView\n      refreshControl: ExactReactElement_DEPRECATED<any>,\n    },\n    forwardedRef:\n      | {current: Instance | null, ...}\n      | ((Instance | null) => mixed),\n  ) {\n    // Split `props` into the animate-able props for the parent (RefreshControl)\n    // and child (ScrollView).\n    const {intermediatePropsForRefreshControl, intermediatePropsForScrollView} =\n      useMemo(() => {\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        // $FlowFixMe[incompatible-call]\n        const {outer, inner} = splitLayoutProps(flattenStyle(props.style));\n        return {\n          intermediatePropsForRefreshControl: {style: outer},\n          intermediatePropsForScrollView: {...props, style: inner},\n        };\n      }, [props]);\n\n    // Handle animated props on `refreshControl`.\n    const [refreshControlAnimatedProps, refreshControlRef] = useAnimatedProps<\n      {style: ?____ViewStyle_Internal},\n      $FlowFixMe,\n    >(intermediatePropsForRefreshControl);\n    // NOTE: Assumes that refreshControl.ref` and `refreshControl.style` can be\n    // safely clobbered.\n    const refreshControl: ExactReactElement_DEPRECATED<typeof RefreshControl> =\n      React.cloneElement(props.refreshControl, {\n        ...refreshControlAnimatedProps,\n        ref: refreshControlRef,\n      });\n\n    // Handle animated props on `NativeDirectionalScrollView`.\n    const [scrollViewAnimatedProps, scrollViewRef] = useAnimatedProps<\n      Props,\n      Instance,\n    >(intermediatePropsForScrollView);\n    const ref = useMergeRefs<Instance>(scrollViewRef, forwardedRef);\n\n    return (\n      // $FlowFixMe[incompatible-use] Investigate useAnimatedProps return value\n      <ScrollView\n        {...scrollViewAnimatedProps}\n        ref={ref}\n        refreshControl={refreshControl}\n        // Because `refreshControl` is a clone of `props.refreshControl` with\n        // `refreshControlAnimatedProps` added, we need to pass ScrollView.js\n        // the combined styles since it also splits the outer/inner styles for\n        // its parent/child, respectively. Without this, the refreshControl\n        // styles would be ignored.\n        style={StyleSheet.compose(\n          scrollViewAnimatedProps.style,\n          refreshControlAnimatedProps.style,\n        )}\n      />\n    );\n  },\n);\n\nconst AnimatedScrollViewWithoutInvertedRefreshControl =\n  createAnimatedComponent(ScrollView);\n\nexport default AnimatedScrollView;\n"],"mappings":";AAaA,OAAOA,cAAc;AACrB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,gBAAgB;AACvB,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AACf,OAAOC,YAAY;AACnB,OAAOC,uBAAuB;AAC9B,OAAOC,gBAAgB;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,OAAO,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9B,MAAMC,kBAA0D,GAC9DJ,KAAK,CAACK,UAAU,CACd,SAASC,qDAAqDA,CAC5DC,KAAK,EACLC,YAAY,EACZ;EAMA,IACEZ,QAAQ,CAACa,EAAE,KAAK,SAAS,IACzBF,KAAK,CAACG,cAAc,IAAI,IAAI,IAC5BH,KAAK,CAACI,KAAK,IAAI,IAAI,EACnB;IACA,OAEER,OAAA,CAACS,4CAA4C,EAAAC,MAAA,CAAAC,MAAA;MAC3CC,mBAAmB,EAAE;IAAO,GACxBR,KAAK;MACTS,GAAG,EAAER,YAAa;MAClBE,cAAc,EAAEH,KAAK,CAACG;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAEN,CAAC,MAAM;IACL,OACEjB,OAAA,CAACkB,+CAA+C,EAAAR,MAAA,CAAAC,MAAA;MAC9CC,mBAAmB,EAAE;IAAO,GACxBR,KAAK;MACTS,GAAG,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEN;AACF,CACF,CAAC;AAEH,MAAMR,4CAA4C,GAAGZ,KAAK,CAACK,UAAU,CAEnE,SAASO,4CAA4CA,CACnDL,KAIC,EACDC,YAEgC,EAChC;EAGA,MAAM;IAACc,kCAAkC;IAAEC;EAA8B,CAAC,GACxEtB,OAAO,CAAC,MAAM;IAGZ,MAAM;MAACuB,KAAK;MAAEC;IAAK,CAAC,GAAG/B,gBAAgB,CAACD,YAAY,CAACc,KAAK,CAACI,KAAK,CAAC,CAAC;IAClE,OAAO;MACLW,kCAAkC,EAAE;QAACX,KAAK,EAAEa;MAAK,CAAC;MAClDD,8BAA8B,EAAAV,MAAA,CAAAC,MAAA,KAAMP,KAAK;QAAEI,KAAK,EAAEc;MAAK;IACzD,CAAC;EACH,CAAC,EAAE,CAAClB,KAAK,CAAC,CAAC;EAGb,MAAM,CAACmB,2BAA2B,EAAEC,iBAAiB,CAAC,GAAG5B,gBAAgB,CAGvEuB,kCAAkC,CAAC;EAGrC,MAAMZ,cAAmE,GACvEV,KAAK,CAAC4B,YAAY,CAACrB,KAAK,CAACG,cAAc,EAAAG,MAAA,CAAAC,MAAA,KAClCY,2BAA2B;IAC9BV,GAAG,EAAEW;EAAiB,EACvB,CAAC;EAGJ,MAAM,CAACE,uBAAuB,EAAEC,aAAa,CAAC,GAAG/B,gBAAgB,CAG/DwB,8BAA8B,CAAC;EACjC,MAAMP,GAAG,GAAGnB,YAAY,CAAWiC,aAAa,EAAEtB,YAAY,CAAC;EAE/D,OAEEL,OAAA,CAACX,UAAU,EAAAqB,MAAA,CAAAC,MAAA,KACLe,uBAAuB;IAC3Bb,GAAG,EAAEA,GAAI;IACTN,cAAc,EAAEA,cAAe;IAM/BC,KAAK,EAAEhB,UAAU,CAACoC,OAAO,CACvBF,uBAAuB,CAAClB,KAAK,EAC7Be,2BAA2B,CAACf,KAC9B;EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CACF,CAAC;AAED,MAAMC,+CAA+C,GACnDvB,uBAAuB,CAACN,UAAU,CAAC;AAErC,eAAeY,kBAAkB"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}