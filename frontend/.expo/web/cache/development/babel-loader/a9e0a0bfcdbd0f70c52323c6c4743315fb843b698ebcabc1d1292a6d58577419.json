{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-progress/withAnimation.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function withAnimation(WrappedComponent, indeterminateProgress) {\n  const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return class AnimatedComponent extends Component {\n    static displayName = `withAnimation(${wrappedComponentName})`;\n    static propTypes = {\n      animated: PropTypes.bool,\n      direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n      indeterminate: PropTypes.bool,\n      indeterminateAnimationDuration: PropTypes.number,\n      progress: PropTypes.number\n    };\n    static defaultProps = {\n      animated: true,\n      indeterminateAnimationDuration: 1000,\n      indeterminate: false,\n      progress: 0\n    };\n    constructor(props) {\n      super(props);\n      this.progressValue = Math.min(Math.max(props.progress, 0), 1);\n      this.rotationValue = 0;\n      this.state = {\n        progress: new Animated.Value(this.progressValue),\n        rotation: new Animated.Value(this.rotationValue)\n      };\n    }\n    componentDidMount() {\n      this.state.progress.addListener(event => {\n        this.progressValue = event.value;\n      });\n      this.state.rotation.addListener(event => {\n        this.rotationValue = event.value;\n      });\n      if (this.props.indeterminate) {\n        this.spin();\n        if (indeterminateProgress) {\n          Animated.spring(this.state.progress, {\n            toValue: indeterminateProgress,\n            useNativeDriver: false\n          }).start();\n        }\n      }\n    }\n    componentDidUpdate(prevProps) {\n      if (prevProps.indeterminate !== this.props.indeterminate) {\n        if (this.props.indeterminate) {\n          this.spin();\n        } else {\n          Animated.spring(this.state.rotation, {\n            toValue: this.rotationValue > 0.5 ? 1 : 0,\n            useNativeDriver: false\n          }).start(endState => {\n            if (endState.finished) {\n              this.state.rotation.setValue(0);\n            }\n          });\n        }\n      }\n      const progress = this.props.indeterminate ? indeterminateProgress || 0 : Math.min(Math.max(this.props.progress, 0), 1);\n      if (progress !== this.progressValue) {\n        if (this.props.animated) {\n          Animated.spring(this.state.progress, {\n            toValue: progress,\n            bounciness: 0,\n            useNativeDriver: false\n          }).start();\n        } else {\n          this.state.progress.setValue(progress);\n        }\n      }\n    }\n    componentWillUnmount() {\n      this.state.progress.removeAllListeners();\n      this.state.rotation.removeAllListeners();\n    }\n    spin() {\n      this.state.rotation.setValue(0);\n      Animated.timing(this.state.rotation, {\n        toValue: this.props.direction === 'counter-clockwise' ? -1 : 1,\n        duration: this.props.indeterminateAnimationDuration,\n        easing: Easing.linear,\n        isInteraction: false,\n        useNativeDriver: false\n      }).start(endState => {\n        if (endState.finished) {\n          this.spin();\n        }\n      });\n    }\n    render() {\n      return _jsxDEV(WrappedComponent, Object.assign({}, this.props, {\n        progress: this.props.animated ? this.state.progress : this.props.progress,\n        rotation: this.state.rotation\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    }\n  };\n}","map":{"version":3,"names":["React","Component","PropTypes","Animated","Easing","jsxDEV","_jsxDEV","withAnimation","WrappedComponent","indeterminateProgress","wrappedComponentName","displayName","name","AnimatedComponent","propTypes","animated","bool","direction","oneOf","indeterminate","indeterminateAnimationDuration","number","progress","defaultProps","constructor","props","progressValue","Math","min","max","rotationValue","state","Value","rotation","componentDidMount","addListener","event","value","spin","spring","toValue","useNativeDriver","start","componentDidUpdate","prevProps","endState","finished","setValue","bounciness","componentWillUnmount","removeAllListeners","timing","duration","easing","linear","isInteraction","render","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-progress/withAnimation.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing } from 'react-native';\n\nexport default function withAnimation(WrappedComponent, indeterminateProgress) {\n  const wrappedComponentName =\n    WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n  return class AnimatedComponent extends Component {\n    static displayName = `withAnimation(${wrappedComponentName})`;\n\n    static propTypes = {\n      animated: PropTypes.bool,\n      direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n      indeterminate: PropTypes.bool,\n      indeterminateAnimationDuration: PropTypes.number,\n      progress: PropTypes.number,\n    };\n\n    static defaultProps = {\n      animated: true,\n      indeterminateAnimationDuration: 1000,\n      indeterminate: false,\n      progress: 0,\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.progressValue = Math.min(Math.max(props.progress, 0), 1);\n      this.rotationValue = 0;\n      this.state = {\n        progress: new Animated.Value(this.progressValue),\n        rotation: new Animated.Value(this.rotationValue),\n      };\n    }\n\n    componentDidMount() {\n      this.state.progress.addListener(event => {\n        this.progressValue = event.value;\n      });\n      this.state.rotation.addListener(event => {\n        this.rotationValue = event.value;\n      });\n      if (this.props.indeterminate) {\n        this.spin();\n        if (indeterminateProgress) {\n          Animated.spring(this.state.progress, {\n            toValue: indeterminateProgress,\n            useNativeDriver: false\n          }).start();\n        }\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.indeterminate !== this.props.indeterminate) {\n        if (this.props.indeterminate) {\n          this.spin();\n        } else {\n          Animated.spring(this.state.rotation, {\n            toValue: this.rotationValue > 0.5 ? 1 : 0,\n            useNativeDriver: false\n          }).start(endState => {\n            if (endState.finished) {\n              this.state.rotation.setValue(0);\n            }\n          });\n        }\n      }\n      const progress = this.props.indeterminate\n        ? indeterminateProgress || 0\n        : Math.min(Math.max(this.props.progress, 0), 1);\n      if (progress !== this.progressValue) {\n        if (this.props.animated) {\n          Animated.spring(this.state.progress, {\n            toValue: progress,\n            bounciness: 0,\n            useNativeDriver: false\n          }).start();\n        } else {\n          this.state.progress.setValue(progress);\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      this.state.progress.removeAllListeners();\n      this.state.rotation.removeAllListeners();\n    }\n\n    spin() {\n      this.state.rotation.setValue(0);\n      Animated.timing(this.state.rotation, {\n        toValue: this.props.direction === 'counter-clockwise' ? -1 : 1,\n        duration: this.props.indeterminateAnimationDuration,\n        easing: Easing.linear,\n        isInteraction: false,\n        useNativeDriver: false\n      }).start(endState => {\n        if (endState.finished) {\n          this.spin();\n        }\n      });\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          progress={\n            this.props.animated ? this.state.progress : this.props.progress\n          }\n          rotation={this.state.rotation}\n        />\n      );\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}