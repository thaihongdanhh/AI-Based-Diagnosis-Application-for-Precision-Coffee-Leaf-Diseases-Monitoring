{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/src/private/components/HScrollViewNativeComponents.js\";\nimport AndroidHorizontalScrollViewNativeComponent from \"../../../Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent\";\nimport ScrollContentViewNativeComponent from \"../../../Libraries/Components/ScrollView/ScrollContentViewNativeComponent\";\nimport ScrollViewNativeComponent from \"../../../Libraries/Components/ScrollView/ScrollViewNativeComponent\";\nimport Platform from \"../../../Libraries/Utilities/Platform\";\nimport AndroidHorizontalScrollContentViewNativeComponent from \"../specs/components/AndroidHorizontalScrollContentViewNativeComponent\";\nimport useSyncOnScroll from \"./useSyncOnScroll\";\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HScrollViewNativeComponentForPlatform = Platform.OS === 'android' ? AndroidHorizontalScrollViewNativeComponent : ScrollViewNativeComponent;\nexport const HScrollViewNativeComponent = forwardRef(function HScrollViewNativeComponent(props, ref) {\n  const [componentRef, enableSyncOnScroll] = useSyncOnScroll(ref);\n  return _jsxDEV(HScrollViewNativeComponentForPlatform, Object.assign({}, props, {\n    ref: componentRef,\n    enableSyncOnScroll: enableSyncOnScroll\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n});\nexport const HScrollContentViewNativeComponent = Platform.OS === 'android' ? AndroidHorizontalScrollContentViewNativeComponent : ScrollContentViewNativeComponent;","map":{"version":3,"names":["AndroidHorizontalScrollViewNativeComponent","ScrollContentViewNativeComponent","ScrollViewNativeComponent","Platform","AndroidHorizontalScrollContentViewNativeComponent","useSyncOnScroll","React","forwardRef","jsxDEV","_jsxDEV","HScrollViewNativeComponentForPlatform","OS","HScrollViewNativeComponent","props","ref","componentRef","enableSyncOnScroll","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber","HScrollContentViewNativeComponent"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/src/private/components/HScrollViewNativeComponents.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport type {ScrollViewNativeProps} from '../../../Libraries/Components/ScrollView/ScrollViewNativeComponentType';\nimport type {ViewProps} from '../../../Libraries/Components/View/ViewPropTypes';\nimport type {HostComponent} from '../../../Libraries/Renderer/shims/ReactNativeTypes';\nimport type {TScrollViewNativeImperativeHandle} from './useSyncOnScroll';\n\nimport AndroidHorizontalScrollViewNativeComponent from '../../../Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent';\nimport ScrollContentViewNativeComponent from '../../../Libraries/Components/ScrollView/ScrollContentViewNativeComponent';\nimport ScrollViewNativeComponent from '../../../Libraries/Components/ScrollView/ScrollViewNativeComponent';\nimport Platform from '../../../Libraries/Utilities/Platform';\nimport AndroidHorizontalScrollContentViewNativeComponent from '../specs/components/AndroidHorizontalScrollContentViewNativeComponent';\nimport useSyncOnScroll from './useSyncOnScroll';\nimport * as React from 'react';\nimport {forwardRef} from 'react';\n\nconst HScrollViewNativeComponentForPlatform =\n  Platform.OS === 'android'\n    ? AndroidHorizontalScrollViewNativeComponent\n    : ScrollViewNativeComponent;\n\n// TODO: After upgrading to React 19, remove `forwardRef` from this component.\nexport const HScrollViewNativeComponent: React.AbstractComponent<\n  ScrollViewNativeProps,\n  TScrollViewNativeImperativeHandle,\n  // $FlowExpectedError[incompatible-type] - Flow cannot model imperative handles, yet.\n> = forwardRef(function HScrollViewNativeComponent(\n  props: ScrollViewNativeProps,\n  ref: ?React.RefSetter<TScrollViewNativeImperativeHandle | null>,\n): React.Node {\n  const [componentRef, enableSyncOnScroll] = useSyncOnScroll(ref);\n  // NOTE: When `useSyncOnScroll` triggers an update, `props` will not have\n  // changed. Notably, `props.children` will be the same, allowing React to\n  // bail out during reconciliation.\n  return (\n    <HScrollViewNativeComponentForPlatform\n      {...props}\n      ref={componentRef}\n      enableSyncOnScroll={enableSyncOnScroll}\n    />\n  );\n});\n\nexport const HScrollContentViewNativeComponent: HostComponent<ViewProps> =\n  Platform.OS === 'android'\n    ? AndroidHorizontalScrollContentViewNativeComponent\n    : ScrollContentViewNativeComponent;\n"],"mappings":";AAgBA,OAAOA,0CAA0C;AACjD,OAAOC,gCAAgC;AACvC,OAAOC,yBAAyB;AAChC,OAAOC,QAAQ;AACf,OAAOC,iDAAiD;AACxD,OAAOC,eAAe;AACtB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,qCAAqC,GACzCP,QAAQ,CAACQ,EAAE,KAAK,SAAS,GACrBX,0CAA0C,GAC1CE,yBAAyB;AAG/B,OAAO,MAAMU,0BAIZ,GAAGL,UAAU,CAAC,SAASK,0BAA0BA,CAChDC,KAA4B,EAC5BC,GAA+D,EACnD;EACZ,MAAM,CAACC,YAAY,EAAEC,kBAAkB,CAAC,GAAGX,eAAe,CAACS,GAAG,CAAC;EAI/D,OACEL,OAAA,CAACC,qCAAqC,EAAAO,MAAA,CAAAC,MAAA,KAChCL,KAAK;IACTC,GAAG,EAAEC,YAAa;IAClBC,kBAAkB,EAAEA;EAAmB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEN,CAAC,CAAC;AAEF,OAAO,MAAMC,iCAA2D,GACtEpB,QAAQ,CAACQ,EAAE,KAAK,SAAS,GACrBP,iDAAiD,GACjDH,gCAAgC"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}