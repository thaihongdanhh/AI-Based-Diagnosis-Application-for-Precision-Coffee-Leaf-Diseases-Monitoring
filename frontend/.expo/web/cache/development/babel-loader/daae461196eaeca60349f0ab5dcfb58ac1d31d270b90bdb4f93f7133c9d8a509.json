{"ast":null,"code":"'use strict';\n\nimport { runOnUIImmediately } from \"../../threads.js\";\nimport { registerEventHandler, unregisterEventHandler } from \"../../core.js\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { isJest, shouldBeUseWeb } from \"../../PlatformChecker.js\";\nimport { ReanimatedError } from \"../../errors.js\";\nconst IS_ANDROID = Platform.OS === 'android';\nconst _worklet_8193719887552_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs1(){const{viewTag,progressAnimation}=this.__closure;global.ProgressTransitionRegister.addProgressAnimation(viewTag,progressAnimation);}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs1\\\",\\\"viewTag\\\",\\\"progressAnimation\\\",\\\"__closure\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"addProgressAnimation\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAkBuB,SAAAA,kDAAMA,CAAA,QAAAC,OAAA,CAAAC,iBAAA,OAAAC,SAAA,CAGvBC,MAAM,CAACC,0BAA0B,CAACC,oBAAoB,CAACL,OAAO,CAAEC,iBAAiB,CAAC,CACpF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_358282488548_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs2(){const{viewTag,isUnmounting}=this.__closure;global.ProgressTransitionRegister.removeProgressAnimation(viewTag,isUnmounting);}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs2\\\",\\\"viewTag\\\",\\\"isUnmounting\\\",\\\"__closure\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"removeProgressAnimation\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AA2BuB,SAAAA,kDAAMA,CAAA,QAAAC,OAAA,CAAAC,YAAA,OAAAC,SAAA,CAGvBC,MAAM,CAACC,0BAA0B,CAACC,uBAAuB,CAACL,OAAO,CAAEC,YAAY,CAAC,CAClF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_1443442633147_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs3(event){const{lastProgressValue}=this.__closure;const progress=event.progress;if(progress===lastProgressValue){return;}lastProgressValue=progress;global.ProgressTransitionRegister.frame(progress);}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs3\\\",\\\"event\\\",\\\"lastProgressValue\\\",\\\"__closure\\\",\\\"progress\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"frame\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAwC+D,SAAAA,kDAASA,CAAAC,KAAA,QAAAC,iBAAA,OAAAC,SAAA,CAGhE,KAAM,CAAAC,QAAQ,CAAGH,KAAK,CAACG,QAAQ,CAC/B,GAAIA,QAAQ,GAAKF,iBAAiB,CAAE,CAIlC,OACF,CACAA,iBAAiB,CAAGE,QAAQ,CAC5BC,MAAM,CAACC,0BAA0B,CAACC,KAAK,CAACH,QAAQ,CAAC,CACnD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_12937400495570_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs4(){global.ProgressTransitionRegister.onTransitionEnd();}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs4\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onTransitionEnd\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAqDmD,SAAAA,kDAAMA,CAAA,EAGjDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,CAAC,CACrD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_2253017632180_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs5(){global.ProgressTransitionRegister.onAndroidFinishTransitioning();}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs5\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onAndroidFinishTransitioning\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AA6DwD,SAAAA,kDAAMA,CAAA,EAGpDC,MAAM,CAACC,0BAA0B,CAACC,4BAA4B,CAAC,CAAC,CAClE\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_17066273721446_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs6(){global.ProgressTransitionRegister.onTransitionEnd(true);}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs6\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onTransitionEnd\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAoEwD,SAAAA,kDAAMA,CAAA,EAGpDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,IAAI,CAAC,CACzD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_3680855814993_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs7(){global.ProgressTransitionRegister.onTransitionEnd();}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs7\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onTransitionEnd\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAyE2D,SAAAA,kDAAMA,CAAA,EAGvDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,CAAC,CACrD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nexport class ProgressTransitionManager {\n  _sharedElementCount = 0;\n  _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1\n  };\n  addProgressAnimation(viewTag, progressAnimation) {\n    runOnUIImmediately(function () {\n      const _e = [new global.Error(), -3, -27];\n      const reactNativeReanimated_ProgressTransitionManagerJs1 = function () {\n        global.ProgressTransitionRegister.addProgressAnimation(viewTag, progressAnimation);\n      };\n      reactNativeReanimated_ProgressTransitionManagerJs1.__closure = {\n        viewTag,\n        progressAnimation\n      };\n      reactNativeReanimated_ProgressTransitionManagerJs1.__workletHash = 8193719887552;\n      reactNativeReanimated_ProgressTransitionManagerJs1.__initData = _worklet_8193719887552_init_data;\n      reactNativeReanimated_ProgressTransitionManagerJs1.__stackDetails = _e;\n      return reactNativeReanimated_ProgressTransitionManagerJs1;\n    }())();\n    this.registerEventHandlers();\n  }\n  removeProgressAnimation(viewTag, isUnmounting = true) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(function () {\n      const _e = [new global.Error(), -3, -27];\n      const reactNativeReanimated_ProgressTransitionManagerJs2 = function () {\n        global.ProgressTransitionRegister.removeProgressAnimation(viewTag, isUnmounting);\n      };\n      reactNativeReanimated_ProgressTransitionManagerJs2.__closure = {\n        viewTag,\n        isUnmounting\n      };\n      reactNativeReanimated_ProgressTransitionManagerJs2.__workletHash = 358282488548;\n      reactNativeReanimated_ProgressTransitionManagerJs2.__initData = _worklet_358282488548_init_data;\n      reactNativeReanimated_ProgressTransitionManagerJs2.__stackDetails = _e;\n      return reactNativeReanimated_ProgressTransitionManagerJs2;\n    }())();\n  }\n  registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = IS_ANDROID ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(function () {\n        const _e = [new global.Error(), -2, -27];\n        const reactNativeReanimated_ProgressTransitionManagerJs3 = function (event) {\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        };\n        reactNativeReanimated_ProgressTransitionManagerJs3.__closure = {\n          lastProgressValue\n        };\n        reactNativeReanimated_ProgressTransitionManagerJs3.__workletHash = 1443442633147;\n        reactNativeReanimated_ProgressTransitionManagerJs3.__initData = _worklet_1443442633147_init_data;\n        reactNativeReanimated_ProgressTransitionManagerJs3.__stackDetails = _e;\n        return reactNativeReanimated_ProgressTransitionManagerJs3;\n      }(), eventPrefix + 'TransitionProgress');\n      eventHandler.onAppear = registerEventHandler(function () {\n        const _e = [new global.Error(), 1, -27];\n        const reactNativeReanimated_ProgressTransitionManagerJs4 = function () {\n          global.ProgressTransitionRegister.onTransitionEnd();\n        };\n        reactNativeReanimated_ProgressTransitionManagerJs4.__closure = {};\n        reactNativeReanimated_ProgressTransitionManagerJs4.__workletHash = 12937400495570;\n        reactNativeReanimated_ProgressTransitionManagerJs4.__initData = _worklet_12937400495570_init_data;\n        reactNativeReanimated_ProgressTransitionManagerJs4.__stackDetails = _e;\n        return reactNativeReanimated_ProgressTransitionManagerJs4;\n      }(), eventPrefix + 'Appear');\n      if (IS_ANDROID) {\n        eventHandler.onDisappear = registerEventHandler(function () {\n          const _e = [new global.Error(), 1, -27];\n          const reactNativeReanimated_ProgressTransitionManagerJs5 = function () {\n            global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n          };\n          reactNativeReanimated_ProgressTransitionManagerJs5.__closure = {};\n          reactNativeReanimated_ProgressTransitionManagerJs5.__workletHash = 2253017632180;\n          reactNativeReanimated_ProgressTransitionManagerJs5.__initData = _worklet_2253017632180_init_data;\n          reactNativeReanimated_ProgressTransitionManagerJs5.__stackDetails = _e;\n          return reactNativeReanimated_ProgressTransitionManagerJs5;\n        }(), 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        eventHandler.onDisappear = registerEventHandler(function () {\n          const _e = [new global.Error(), 1, -27];\n          const reactNativeReanimated_ProgressTransitionManagerJs6 = function () {\n            global.ProgressTransitionRegister.onTransitionEnd(true);\n          };\n          reactNativeReanimated_ProgressTransitionManagerJs6.__closure = {};\n          reactNativeReanimated_ProgressTransitionManagerJs6.__workletHash = 17066273721446;\n          reactNativeReanimated_ProgressTransitionManagerJs6.__initData = _worklet_17066273721446_init_data;\n          reactNativeReanimated_ProgressTransitionManagerJs6.__stackDetails = _e;\n          return reactNativeReanimated_ProgressTransitionManagerJs6;\n        }(), 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(function () {\n          const _e = [new global.Error(), 1, -27];\n          const reactNativeReanimated_ProgressTransitionManagerJs7 = function () {\n            global.ProgressTransitionRegister.onTransitionEnd();\n          };\n          reactNativeReanimated_ProgressTransitionManagerJs7.__closure = {};\n          reactNativeReanimated_ProgressTransitionManagerJs7.__workletHash = 3680855814993;\n          reactNativeReanimated_ProgressTransitionManagerJs7.__initData = _worklet_3680855814993_init_data;\n          reactNativeReanimated_ProgressTransitionManagerJs7.__stackDetails = _e;\n          return reactNativeReanimated_ProgressTransitionManagerJs7;\n        }(), 'topGestureCancel');\n      }\n    }\n  }\n  unregisterEventHandlers() {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\nconst _worklet_4312515321175_init_data = {\n  code: \"function createProgressTransitionRegister_reactNativeReanimated_ProgressTransitionManagerJs8(){const{IS_ANDROID}=this.__closure;const progressAnimations=new Map();const snapshots=new Map();const currentTransitions=new Set();const toRemove=new Set();let skipCleaning=false;let isTransitionRestart=false;const progressTransitionManager={addProgressAnimation:function(viewTag,progressAnimation){if(currentTransitions.size>0&&!progressAnimations.has(viewTag)){isTransitionRestart=!IS_ANDROID;}progressAnimations.set(viewTag,progressAnimation);},removeProgressAnimation:function(viewTag,isUnmounting){if(currentTransitions.size>0){isTransitionRestart=!IS_ANDROID;}if(isUnmounting){toRemove.add(viewTag);}else{progressAnimations.delete(viewTag);}},onTransitionStart:function(viewTag,snapshot){skipCleaning=isTransitionRestart;snapshots.set(viewTag,snapshot);currentTransitions.add(viewTag);progressTransitionManager.frame(0);},frame:function(progress){for(const viewTag of currentTransitions){const progressAnimation=progressAnimations.get(viewTag);if(!progressAnimation){continue;}const snapshot=snapshots.get(viewTag);progressAnimation(viewTag,snapshot,progress);}},onAndroidFinishTransitioning:function(){if(toRemove.size>0){progressTransitionManager.onTransitionEnd();}},onTransitionEnd:function(removeViews=false){if(currentTransitions.size===0){toRemove.clear();return;}if(skipCleaning){skipCleaning=false;isTransitionRestart=false;return;}for(const viewTag of currentTransitions){global._notifyAboutEnd(viewTag,removeViews);}currentTransitions.clear();if(isTransitionRestart){return;}snapshots.clear();if(toRemove.size>0){for(const viewTag of toRemove){progressAnimations.delete(viewTag);global._notifyAboutEnd(viewTag,removeViews);}toRemove.clear();}}};return progressTransitionManager;}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createProgressTransitionRegister_reactNativeReanimated_ProgressTransitionManagerJs8\\\",\\\"IS_ANDROID\\\",\\\"__closure\\\",\\\"progressAnimations\\\",\\\"Map\\\",\\\"snapshots\\\",\\\"currentTransitions\\\",\\\"Set\\\",\\\"toRemove\\\",\\\"skipCleaning\\\",\\\"isTransitionRestart\\\",\\\"progressTransitionManager\\\",\\\"addProgressAnimation\\\",\\\"viewTag\\\",\\\"progressAnimation\\\",\\\"size\\\",\\\"has\\\",\\\"set\\\",\\\"removeProgressAnimation\\\",\\\"isUnmounting\\\",\\\"add\\\",\\\"delete\\\",\\\"onTransitionStart\\\",\\\"snapshot\\\",\\\"frame\\\",\\\"progress\\\",\\\"get\\\",\\\"onAndroidFinishTransitioning\\\",\\\"onTransitionEnd\\\",\\\"removeViews\\\",\\\"clear\\\",\\\"global\\\",\\\"_notifyAboutEnd\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst createProgressTransitionRegister = function () {\n  const _e = [new global.Error(), -2, -27];\n  const createProgressTransitionRegister = function () {\n    const progressAnimations = new Map();\n    const snapshots = new Map();\n    const currentTransitions = new Set();\n    const toRemove = new Set();\n    let skipCleaning = false;\n    let isTransitionRestart = false;\n    const progressTransitionManager = {\n      addProgressAnimation: (viewTag, progressAnimation) => {\n        if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n          isTransitionRestart = !IS_ANDROID;\n        }\n        progressAnimations.set(viewTag, progressAnimation);\n      },\n      removeProgressAnimation: (viewTag, isUnmounting) => {\n        if (currentTransitions.size > 0) {\n          isTransitionRestart = !IS_ANDROID;\n        }\n        if (isUnmounting) {\n          toRemove.add(viewTag);\n        } else {\n          progressAnimations.delete(viewTag);\n        }\n      },\n      onTransitionStart: (viewTag, snapshot) => {\n        skipCleaning = isTransitionRestart;\n        snapshots.set(viewTag, snapshot);\n        currentTransitions.add(viewTag);\n        progressTransitionManager.frame(0);\n      },\n      frame: progress => {\n        for (const viewTag of currentTransitions) {\n          const progressAnimation = progressAnimations.get(viewTag);\n          if (!progressAnimation) {\n            continue;\n          }\n          const snapshot = snapshots.get(viewTag);\n          progressAnimation(viewTag, snapshot, progress);\n        }\n      },\n      onAndroidFinishTransitioning: () => {\n        if (toRemove.size > 0) {\n          progressTransitionManager.onTransitionEnd();\n        }\n      },\n      onTransitionEnd: (removeViews = false) => {\n        if (currentTransitions.size === 0) {\n          toRemove.clear();\n          return;\n        }\n        if (skipCleaning) {\n          skipCleaning = false;\n          isTransitionRestart = false;\n          return;\n        }\n        for (const viewTag of currentTransitions) {\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        currentTransitions.clear();\n        if (isTransitionRestart) {\n          return;\n        }\n        snapshots.clear();\n        if (toRemove.size > 0) {\n          for (const viewTag of toRemove) {\n            progressAnimations.delete(viewTag);\n            global._notifyAboutEnd(viewTag, removeViews);\n          }\n          toRemove.clear();\n        }\n      }\n    };\n    return progressTransitionManager;\n  };\n  createProgressTransitionRegister.__closure = {\n    IS_ANDROID\n  };\n  createProgressTransitionRegister.__workletHash = 4312515321175;\n  createProgressTransitionRegister.__initData = _worklet_4312515321175_init_data;\n  createProgressTransitionRegister.__stackDetails = _e;\n  return createProgressTransitionRegister;\n}();\nconst _worklet_10991674430257_init_data = {\n  code: \"function reactNativeReanimated_ProgressTransitionManagerJs9(){const{createProgressTransitionRegister}=this.__closure;global.ProgressTransitionRegister=createProgressTransitionRegister();}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_ProgressTransitionManagerJs9\\\",\\\"createProgressTransitionRegister\\\",\\\"__closure\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AA6MqB,SAAAA,kDAAMA,CAAA,QAAAC,gCAAA,OAAAC,SAAA,CAGvBC,MAAM,CAACC,0BAA0B,CAAGH,gCAAgC,CAAC,CAAC,CACxE\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    if (!isJest()) {\n      throw new ReanimatedError('`ProgressTransitionRegister` is not available on non-native platform.');\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy({}, {\n    get: maybeThrowError,\n    set: () => {\n      maybeThrowError();\n      return false;\n    }\n  });\n} else {\n  runOnUIImmediately(function () {\n    const _e = [new global.Error(), -2, -27];\n    const reactNativeReanimated_ProgressTransitionManagerJs9 = function () {\n      global.ProgressTransitionRegister = createProgressTransitionRegister();\n    };\n    reactNativeReanimated_ProgressTransitionManagerJs9.__closure = {\n      createProgressTransitionRegister\n    };\n    reactNativeReanimated_ProgressTransitionManagerJs9.__workletHash = 10991674430257;\n    reactNativeReanimated_ProgressTransitionManagerJs9.__initData = _worklet_10991674430257_init_data;\n    reactNativeReanimated_ProgressTransitionManagerJs9.__stackDetails = _e;\n    return reactNativeReanimated_ProgressTransitionManagerJs9;\n  }())();\n}","map":{"version":3,"names":["runOnUIImmediately","registerEventHandler","unregisterEventHandler","Platform","isJest","shouldBeUseWeb","ReanimatedError","IS_ANDROID","OS","_worklet_8193719887552_init_data","code","location","sourceMap","version","_worklet_358282488548_init_data","_worklet_1443442633147_init_data","_worklet_12937400495570_init_data","_worklet_2253017632180_init_data","_worklet_17066273721446_init_data","_worklet_3680855814993_init_data","ProgressTransitionManager","_sharedElementCount","_eventHandler","isRegistered","onTransitionProgress","onAppear","onDisappear","onSwipeDismiss","addProgressAnimation","viewTag","progressAnimation","_e","global","Error","reactNativeReanimated_ProgressTransitionManagerJs1","ProgressTransitionRegister","__closure","__workletHash","__initData","__stackDetails","registerEventHandlers","removeProgressAnimation","isUnmounting","unregisterEventHandlers","reactNativeReanimated_ProgressTransitionManagerJs2","eventHandler","eventPrefix","lastProgressValue","reactNativeReanimated_ProgressTransitionManagerJs3","event","progress","frame","reactNativeReanimated_ProgressTransitionManagerJs4","onTransitionEnd","reactNativeReanimated_ProgressTransitionManagerJs5","onAndroidFinishTransitioning","reactNativeReanimated_ProgressTransitionManagerJs6","reactNativeReanimated_ProgressTransitionManagerJs7","_worklet_4312515321175_init_data","createProgressTransitionRegister","progressAnimations","Map","snapshots","currentTransitions","Set","toRemove","skipCleaning","isTransitionRestart","progressTransitionManager","size","has","set","add","delete","onTransitionStart","snapshot","get","removeViews","clear","_notifyAboutEnd","_worklet_10991674430257_init_data","maybeThrowError","Proxy","reactNativeReanimated_ProgressTransitionManagerJs9"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/src/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts"],"sourcesContent":["'use strict';\nimport { runOnUIImmediately } from '../../threads';\nimport type {\n  ProgressAnimation,\n  SharedTransitionAnimationsValues,\n} from '../animationBuilder/commonTypes';\nimport { registerEventHandler, unregisterEventHandler } from '../../core';\nimport { Platform } from 'react-native';\nimport { isJest, shouldBeUseWeb } from '../../PlatformChecker';\nimport { ReanimatedError } from '../../errors';\n\ntype TransitionProgressEvent = {\n  closing: number;\n  goingForward: number;\n  eventName: string;\n  progress: number;\n  target: number;\n};\n\nconst IS_ANDROID = Platform.OS === 'android';\n\nexport class ProgressTransitionManager {\n  private _sharedElementCount = 0;\n  private _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1,\n  };\n\n  public addProgressAnimation(\n    viewTag: number,\n    progressAnimation: ProgressAnimation\n  ) {\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.addProgressAnimation(\n        viewTag,\n        progressAnimation\n      );\n    })();\n\n    this.registerEventHandlers();\n  }\n\n  public removeProgressAnimation(viewTag: number, isUnmounting = true) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.removeProgressAnimation(\n        viewTag,\n        isUnmounting\n      );\n    })();\n  }\n\n  private registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = IS_ANDROID ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(\n        (event: TransitionProgressEvent) => {\n          'worklet';\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            // During screen transition, handler receives two events with the same progress\n            // value for both screens, but for modals, there is only one event. To optimize\n            // performance and avoid unnecessary worklet calls, let's skip the second event.\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        },\n        eventPrefix + 'TransitionProgress'\n      );\n      eventHandler.onAppear = registerEventHandler(() => {\n        'worklet';\n        global.ProgressTransitionRegister.onTransitionEnd();\n      }, eventPrefix + 'Appear');\n\n      if (IS_ANDROID) {\n        // onFinishTransitioning event is available only on Android and\n        // is used to handle closing modals\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n        }, 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        // topDisappear event is required to handle closing modals on iOS\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd(true);\n        }, 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, 'topGestureCancel');\n      }\n    }\n  }\n\n  private unregisterEventHandlers(): void {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\n\nfunction createProgressTransitionRegister() {\n  'worklet';\n  const progressAnimations = new Map<number, ProgressAnimation>();\n  const snapshots = new Map<\n    number,\n    Partial<SharedTransitionAnimationsValues>\n  >();\n  const currentTransitions = new Set<number>();\n  const toRemove = new Set<number>();\n\n  let skipCleaning = false;\n  let isTransitionRestart = false;\n\n  const progressTransitionManager = {\n    addProgressAnimation: (\n      viewTag: number,\n      progressAnimation: ProgressAnimation\n    ) => {\n      if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: (viewTag: number, isUnmounting: boolean) => {\n      if (currentTransitions.size > 0) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      if (isUnmounting) {\n        // Remove the animation config after the transition is finished\n        toRemove.add(viewTag);\n      } else {\n        // if the animation is removed, without ever being started, it can be removed immediately\n        progressAnimations.delete(viewTag);\n      }\n    },\n    onTransitionStart: (\n      viewTag: number,\n      snapshot: Partial<SharedTransitionAnimationsValues>\n    ) => {\n      skipCleaning = isTransitionRestart;\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      // set initial style for re-parented components\n      progressTransitionManager.frame(0);\n    },\n    frame: (progress: number) => {\n      for (const viewTag of currentTransitions) {\n        const progressAnimation = progressAnimations.get(viewTag);\n        if (!progressAnimation) {\n          continue;\n        }\n        const snapshot = snapshots.get(\n          viewTag\n        )! as SharedTransitionAnimationsValues;\n        progressAnimation(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: () => {\n      if (toRemove.size > 0) {\n        // it should be ran only on modal closing\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: (removeViews = false) => {\n      if (currentTransitions.size === 0) {\n        toRemove.clear();\n        return;\n      }\n      if (skipCleaning) {\n        skipCleaning = false;\n        isTransitionRestart = false;\n        return;\n      }\n      for (const viewTag of currentTransitions) {\n        global._notifyAboutEnd(viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      if (isTransitionRestart) {\n        // on transition restart, progressAnimations should be saved\n        // because they potentially can be used in the next transition\n        return;\n      }\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (const viewTag of toRemove) {\n          progressAnimations.delete(viewTag);\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        toRemove.clear();\n      }\n    },\n  };\n  return progressTransitionManager;\n}\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new ReanimatedError(\n        '`ProgressTransitionRegister` is not available on non-native platform.'\n      );\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy(\n    {} as ProgressTransitionRegister,\n    {\n      get: maybeThrowError,\n      set: () => {\n        maybeThrowError();\n        return false;\n      },\n    }\n  );\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.ProgressTransitionRegister = createProgressTransitionRegister();\n  })();\n}\n\nexport type ProgressTransitionRegister = ReturnType<\n  typeof createProgressTransitionRegister\n>;\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}