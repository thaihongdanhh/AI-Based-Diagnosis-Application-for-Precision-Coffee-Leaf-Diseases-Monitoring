{"ast":null,"code":"'use strict';\n\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedImplementation from \"./AnimatedImplementation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nlet inAnimationCallback = false;\nfunction mockAnimationStart(start) {\n  return callback => {\n    const guardedCallback = callback == null ? callback : (...args) => {\n      if (inAnimationCallback) {\n        console.warn('Ignoring recursive animation callback when running mock animations');\n        return;\n      }\n      inAnimationCallback = true;\n      try {\n        callback(...args);\n      } finally {\n        inAnimationCallback = false;\n      }\n    };\n    start(guardedCallback);\n  };\n}\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  }\n};\nconst mockCompositeAnimation = animations => Object.assign({}, emptyAnimation, {\n  start: mockAnimationStart(callback => {\n    animations.forEach(animation => animation.start());\n    callback?.({\n      finished: true\n    });\n  })\n});\nconst spring = function (value, config) {\n  const anyValue = value;\n  return Object.assign({}, emptyAnimation, {\n    start: mockAnimationStart(callback => {\n      anyValue.setValue(config.toValue);\n      callback?.({\n        finished: true\n      });\n    })\n  });\n};\nconst timing = function (value, config) {\n  const anyValue = value;\n  return Object.assign({}, emptyAnimation, {\n    start: mockAnimationStart(callback => {\n      anyValue.setValue(config.toValue);\n      callback?.({\n        finished: true\n      });\n    })\n  });\n};\nconst decay = function (value, config) {\n  return emptyAnimation;\n};\nconst sequence = function (animations) {\n  return mockCompositeAnimation(animations);\n};\nconst parallel = function (animations, config) {\n  return mockCompositeAnimation(animations);\n};\nconst delay = function (time) {\n  return emptyAnimation;\n};\nconst stagger = function (time, animations) {\n  return mockCompositeAnimation(animations);\n};\nconst loop = function (animation, {\n  iterations = -1\n} = {}) {\n  return emptyAnimation;\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["AnimatedEvent","attachNativeEvent","AnimatedImplementation","createAnimatedComponent","AnimatedColor","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","args","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","Object","assign","forEach","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","iterations","Value","ValueXY","Color","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/Animated/AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {Numeric as AnimatedNumeric} from './AnimatedImplementation';\nimport type {EndResult} from './animations/Animation';\nimport type {EndCallback} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args: Array<EndResult>) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nexport type {AnimatedNumeric as Numeric};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}