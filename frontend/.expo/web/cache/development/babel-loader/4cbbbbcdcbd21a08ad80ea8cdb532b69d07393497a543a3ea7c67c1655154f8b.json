{"ast":null,"code":"import { PermissionStatus, Platform } from 'expo-modules-core';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nimport { parseMediaTypes } from \"./utils\";\nconst MediaTypeInput = {\n  images: 'image/*',\n  videos: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n  livePhotos: ''\n};\nexport default {\n  async launchImageLibraryAsync({\n    mediaTypes = ['images'],\n    allowsMultipleSelection = false,\n    base64 = false\n  }) {\n    if (!Platform.isDOMAvailable) {\n      return {\n        canceled: true,\n        assets: null\n      };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64\n    });\n  },\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false\n  }) {\n    if (!Platform.isDOMAvailable) {\n      return {\n        canceled: true,\n        assets: null\n      };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64\n    });\n  },\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async getMediaLibraryPermissionsAsync(_writeOnly) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly) {\n    return permissionGrantedResponse();\n  }\n};\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64\n}) {\n  const parsedMediaTypes = parseMediaTypes(mediaTypes);\n  const mediaTypeFormat = createMediaTypeFormat(parsedMediaTypes);\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n  return new Promise(resolve => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets = await Promise.all(Array.from(files).map(file => readFile(file, {\n          base64\n        })));\n        resolve({\n          canceled: false,\n          assets\n        });\n      } else {\n        resolve({\n          canceled: true,\n          assets: null\n        });\n      }\n      document.body.removeChild(input);\n    });\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\nfunction readFile(targetFile, options) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({\n      target\n    }) => {\n      const uri = target.result;\n      const returnRaw = () => resolve({\n        uri,\n        width: 0,\n        height: 0\n      });\n      const returnMediaData = data => {\n        resolve(Object.assign({}, data, options.base64 && {\n          base64: uri.substr(uri.indexOf(',') + 1)\n        }, {\n          file: targetFile\n        }));\n      };\n      if (typeof uri === 'string') {\n        if (targetFile.type.startsWith('image/')) {\n          const image = new Image();\n          image.src = uri;\n          image.onload = () => {\n            returnMediaData({\n              uri,\n              width: image.naturalWidth ?? image.width,\n              height: image.naturalHeight ?? image.height,\n              type: 'image',\n              mimeType: targetFile.type,\n              fileName: targetFile.name,\n              fileSize: targetFile.size\n            });\n          };\n          image.onerror = () => returnRaw();\n        } else if (targetFile.type.startsWith('video/')) {\n          const video = document.createElement('video');\n          video.preload = 'metadata';\n          video.src = uri;\n          video.onloadedmetadata = () => {\n            returnMediaData({\n              uri,\n              width: video.videoWidth,\n              height: video.videoHeight,\n              type: 'video',\n              mimeType: targetFile.type,\n              fileName: targetFile.name,\n              fileSize: targetFile.size,\n              duration: video.duration\n            });\n          };\n          video.onerror = () => returnRaw();\n        } else {\n          returnRaw();\n        }\n      } else {\n        returnRaw();\n      }\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}\nfunction createMediaTypeFormat(mediaTypes) {\n  const filteredMediaTypes = mediaTypes.filter(mediaType => mediaType !== 'livePhotos');\n  if (filteredMediaTypes.length === 0) {\n    return 'image/*';\n  }\n  let result = '';\n  for (const mediaType of filteredMediaTypes) {\n    if (!result.includes(MediaTypeInput[mediaType])) {\n      result = result.concat(',', MediaTypeInput[mediaType]);\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["PermissionStatus","Platform","MediaTypeOptions","parseMediaTypes","MediaTypeInput","images","videos","livePhotos","launchImageLibraryAsync","mediaTypes","allowsMultipleSelection","base64","isDOMAvailable","canceled","assets","openFileBrowserAsync","launchCameraAsync","Images","capture","getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_writeOnly","requestMediaLibraryPermissionsAsync","status","GRANTED","expires","granted","canAskAgain","parsedMediaTypes","mediaTypeFormat","createMediaTypeFormat","input","document","createElement","style","display","setAttribute","String","Math","random","body","appendChild","Promise","resolve","addEventListener","files","all","Array","from","map","file","readFile","removeChild","event","MouseEvent","dispatchEvent","targetFile","options","reject","reader","FileReader","onerror","Error","onload","target","uri","result","returnRaw","width","height","returnMediaData","data","Object","assign","substr","indexOf","type","startsWith","image","Image","src","naturalWidth","naturalHeight","mimeType","fileName","name","fileSize","size","video","preload","onloadedmetadata","videoWidth","videoHeight","duration","readAsDataURL","filteredMediaTypes","filter","mediaType","length","includes","concat"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/expo-image-picker/src/ExponentImagePicker.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\n\nimport {\n  ImagePickerAsset,\n  ImagePickerResult,\n  MediaType,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\nimport { parseMediaTypes } from './utils';\n\nconst MediaTypeInput: Record<MediaType, string> = {\n  images: 'image/*',\n  videos: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n  livePhotos: '',\n};\n\nexport default {\n  async launchImageLibraryAsync({\n    mediaTypes = ['images'] as MediaType[],\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const parsedMediaTypes = parseMediaTypes(mediaTypes);\n\n  const mediaTypeFormat = createMediaTypeFormat(parsedMediaTypes);\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets: ImagePickerAsset[] = await Promise.all(\n          Array.from(files).map((file) => readFile(file, { base64 }))\n        );\n\n        resolve({ canceled: false, assets });\n      } else {\n        resolve({ canceled: true, assets: null });\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: File, options: { base64: boolean }): Promise<ImagePickerAsset> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () => resolve({ uri, width: 0, height: 0 });\n      const returnMediaData = (data: ImagePickerAsset) => {\n        resolve({\n          ...data,\n          ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          file: targetFile,\n        });\n      };\n\n      if (typeof uri === 'string') {\n        if (targetFile.type.startsWith('image/')) {\n          const image = new Image();\n          image.src = uri;\n          image.onload = () => {\n            returnMediaData({\n              uri,\n              width: image.naturalWidth ?? image.width,\n              height: image.naturalHeight ?? image.height,\n              type: 'image',\n              mimeType: targetFile.type,\n              fileName: targetFile.name,\n              fileSize: targetFile.size,\n            });\n          };\n          image.onerror = () => returnRaw();\n        } else if (targetFile.type.startsWith('video/')) {\n          const video = document.createElement('video');\n          video.preload = 'metadata';\n          video.src = uri;\n          video.onloadedmetadata = () => {\n            returnMediaData({\n              uri,\n              width: video.videoWidth,\n              height: video.videoHeight,\n              type: 'video',\n              mimeType: targetFile.type,\n              fileName: targetFile.name,\n              fileSize: targetFile.size,\n              duration: video.duration,\n            });\n          };\n          video.onerror = () => returnRaw();\n        } else {\n          returnRaw();\n        }\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n\nfunction createMediaTypeFormat(mediaTypes: MediaType[]): string {\n  const filteredMediaTypes = mediaTypes.filter((mediaType) => mediaType !== 'livePhotos');\n  if (filteredMediaTypes.length === 0) {\n    return 'image/*';\n  }\n  let result = '';\n  for (const mediaType of filteredMediaTypes) {\n    // Make sure the types don't repeat\n    if (!result.includes(MediaTypeInput[mediaType])) {\n      result = result.concat(',', MediaTypeInput[mediaType]);\n    }\n  }\n  return result;\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}