{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onRef\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport useCompatNavigation from \"./useCompatNavigation\";\nexport default function withNavigation(Comp) {\n  const WrappedComponent = _ref => {\n    let {\n        onRef\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const navigation = useCompatNavigation();\n    return React.createElement(Comp, _extends({\n      ref: onRef,\n      navigation: navigation\n    }, rest));\n  };\n  WrappedComponent.displayName = \"withNavigation(\".concat(Comp.displayName || Comp.name, \")\");\n  return WrappedComponent;\n}","map":{"version":3,"names":["React","useCompatNavigation","withNavigation","Comp","WrappedComponent","_ref","onRef","rest","_objectWithoutPropertiesLoose","_excluded","navigation","createElement","_extends","ref","displayName","concat","name"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/compat/lib/module/withNavigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { NavigationProp, ParamListBase } from '@react-navigation/native';\nimport useCompatNavigation from './useCompatNavigation';\nimport type { CompatNavigationProp } from './types';\n\ntype InjectedProps<T extends NavigationProp<ParamListBase>> = {\n  navigation: CompatNavigationProp<T>;\n};\n\nexport default function withNavigation<\n  T extends NavigationProp<ParamListBase>,\n  P extends InjectedProps<T>,\n  C extends React.ComponentType<P>\n>(Comp: C) {\n  const WrappedComponent = ({\n    onRef,\n    ...rest\n  }: Exclude<P, InjectedProps<T>> & {\n    onRef?: C extends React.ComponentClass<any>\n      ? React.Ref<InstanceType<C>>\n      : never;\n  }): React.ReactElement => {\n    const navigation = useCompatNavigation<T>();\n\n    // @ts-expect-error: type checking HOC is hard\n    return <Comp ref={onRef} navigation={navigation} {...rest} />;\n  };\n\n  WrappedComponent.displayName = `withNavigation(${\n    Comp.displayName || Comp.name\n  })`;\n\n  return WrappedComponent;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,mBAAP;AAOA,eAAe,SAASC,cAATA,CAIbC,IAJa,EAIJ;EACT,MAAMC,gBAAgB,GAAGC,IAAA,IAOC;IAAA,IAPA;QACxBC;MADwB,CAAD,GAAAD,IAAA;MAEpBE,IAAA,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;IAMH,MAAMC,UAAU,GAAGT,mBAAmB,EAAtC;IAGA,OAAOD,KAAA,CAAAW,aAAA,CAACR,IAAD,EAAAS,QAAA;MAAMC,GAAG,EAAEP,KAAX;MAAkBI,UAAU,EAAEA;IAA9B,GAA8CH,IAA9C,EAAP;EACD,CAZD;EAcAH,gBAAgB,CAACU,WAAjB,qBAAAC,MAAA,CACEZ,IAAI,CAACW,WAAL,IAAoBX,IAAI,CAACa,IAD3B;EAIA,OAAOZ,gBAAP;AACD"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}