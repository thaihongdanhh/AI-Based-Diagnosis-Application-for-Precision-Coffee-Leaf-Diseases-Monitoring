{"ast":null,"code":"'use strict';\n\nconst registerCallableModule = function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n  const BatchedBridge = require(\"../BatchedBridge/BatchedBridge\");\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n}();\nexport default registerCallableModule;","map":{"version":3,"names":["registerCallableModule","global","RN$Bridgeless","name","moduleOrFactory","RN$registerCallableModule","BatchedBridge","require","registerLazyCallableModule"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/Core/registerCallableModule.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\ntype Module = {...};\ntype RegisterCallableModule = (\n  name: string,\n  moduleOrFactory: Module | (void => Module),\n) => void;\n\nconst registerCallableModule: RegisterCallableModule = (function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n})();\n\nexport default registerCallableModule;\n"],"mappings":"AAUA,YAAY;;AAQZ,MAAMA,sBAA8C,GAAI,YAAY;EAClE,IAAIC,MAAM,CAACC,aAAa,KAAK,IAAI,EAAE;IACjC,OAAO,CAACC,IAAI,EAAEC,eAAe,KAAK;MAChC,IAAI,OAAOA,eAAe,KAAK,UAAU,EAAE;QACzCH,MAAM,CAACI,yBAAyB,CAACF,IAAI,EAAEC,eAAe,CAAC;QACvD;MACF;MAEAH,MAAM,CAACI,yBAAyB,CAACF,IAAI,EAAE,MAAMC,eAAe,CAAC;IAC/D,CAAC;EACH;EAEA,MAAME,aAAa,GAAGC,OAAO,iCAAiC,CAAC;EAC/D,OAAO,CAACJ,IAAI,EAAEC,eAAe,KAAK;IAChC,IAAI,OAAOA,eAAe,KAAK,UAAU,EAAE;MACzCE,aAAa,CAACE,0BAA0B,CAACL,IAAI,EAAEC,eAAe,CAAC;MAC/D;IACF;IAEAE,aAAa,CAACN,sBAAsB,CAACG,IAAI,EAAEC,eAAe,CAAC;EAC7D,CAAC;AACH,CAAC,CAAE,CAAC;AAEJ,eAAeJ,sBAAsB"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}