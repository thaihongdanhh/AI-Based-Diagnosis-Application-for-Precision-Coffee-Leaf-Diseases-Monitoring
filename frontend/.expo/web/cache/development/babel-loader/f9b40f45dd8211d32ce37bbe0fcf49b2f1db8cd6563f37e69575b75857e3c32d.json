{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/screens/D.js\";\nimport React from 'react';\nimport { CameraView, CameraType } from 'expo-camera';\nimport { cameraWithTensors } from '@tensorflow/tfjs-react-native';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Block } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Root, Toast, Popup } from 'react-native-popup-confirm-toast';\nimport { theme } from 'galio-framework';\nimport * as tf from '@tensorflow/tfjs';\nimport * as jpeg from 'jpeg-js';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Button as EButton, Input, Card } from 'react-native-elements';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport Svg, { Circle, Rect } from 'react-native-svg';\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport ImageView from \"react-native-image-viewing\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Images from \"../constants/Images\";\nimport { Dropdown } from 'react-native-element-dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width\n} = Dimensions.get('screen');\nconst TensorCamera = cameraWithTensors(CameraView);\nconst IS_ANDROID = Platform.OS === 'android';\nconst IS_IOS = Platform.OS === 'ios';\nconst CAM_PREVIEW_WIDTH = Dimensions.get('window').width;\nconst CAM_PREVIEW_HEIGHT = CAM_PREVIEW_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4);\nconst MIN_KEYPOINT_SCORE = 0.3;\nconst OUTPUT_TENSOR_WIDTH = 480;\nconst OUTPUT_TENSOR_HEIGHT = OUTPUT_TENSOR_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4);\nconst AUTO_RENDER = true;\nconst LOAD_MODEL_FROM_BUNDLE = false;\nlet camera;\nexport default class Camera2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isCapture: false,\n      modalImage: false,\n      modalUploadSuccess: false,\n      modalTakePicSuccess: false,\n      previewCapture: false,\n      image: null,\n      Image: \"\",\n      orientation: null,\n      item: {\n        label: \"Please select Farm - Block\",\n        value: \"-1\"\n      },\n      outputTensorWidth: null,\n      outputTensorHeight: null,\n      Loading: false,\n      dataFarm: [{\n        label: 'FARM DT01 - Block A',\n        value: '1'\n      }, {\n        label: 'FARM DT01 - Block B',\n        value: '2'\n      }, {\n        label: 'FARM DT01 - Block C',\n        value: '3'\n      }, {\n        label: 'FARM DT02 - Block A',\n        value: '4'\n      }, {\n        label: 'FARM DT02 - Block B',\n        value: '5'\n      }]\n    };\n  }\n  __takePicture = async () => {\n    if (!camera) return;\n    const photo = await camera.takePictureAsync({\n      base64: true,\n      imageType: \"jpeg\"\n    });\n    const formdata = new FormData();\n    formdata.append('files', {\n      uri: 'data:image/jpeg;base64,' + photo.base64,\n      name: 'coffee-mobile.jpg',\n      type: 'image/jpeg'\n    });\n    formdata.append('farm_name', this.state.item?.label.split(' - ')[0]);\n    formdata.append('block_name', this.state.item?.label.split(' - ')[1]);\n    await axios.post('http://ai.ailab.vn:5004/upload2', formdata, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      this.setState({\n        Image: res.data[0].file_process,\n        modalTakePicSuccess: !this.state.modalTakePicSuccess,\n        previewCapture: true\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            modalTakePicSuccess: false\n          });\n        }, 2000);\n      });\n    });\n  };\n  __pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ['images'],\n      aspect: [4, 3],\n      quality: 1,\n      allowsMultipleSelection: true,\n      base64: true\n    });\n    if (!result.canceled) {\n      result?.assets?.map(async (data, index) => {\n        const formdata = new FormData();\n        formdata.append('files', {\n          uri: 'data:image/jpeg;base64,' + data.base64,\n          name: data.fileName,\n          type: 'image/jpeg'\n        });\n        formdata.append('farm_name', this.state.item?.label.split(' - ')[0]);\n        formdata.append('block_name', this.state.item?.label.split(' - ')[1]);\n        await axios.post('http://ai.ailab.vn:5004/upload2', formdata, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          this.setState({\n            Image: res.data[0].file_process,\n            modalUploadSuccess: !this.state.modalUploadSuccess\n          }, () => {\n            setTimeout(() => {\n              this.setState({\n                modalUploadSuccess: false\n              });\n            }, 2000);\n          });\n        });\n      });\n    }\n  };\n  handleCameraStream = async (images, updatePreview, gl) => {\n    const loop = async () => {\n      const nextImageTensor = images.next().value;\n      const height = nextImageTensor.shape[0];\n      const width = nextImageTensor.shape[1];\n      const data = new Buffer(tf.concat([nextImageTensor, tf.ones([height, width, 1]).mul(255)], [-1]).slice([0], [height, width, 4]).dataSync());\n      const rawImageData = {\n        data,\n        width,\n        height\n      };\n      const jpegImageData = jpeg.encode(rawImageData);\n      const imgBase64 = tf.util.decodeString(jpegImageData.data, \"base64\");\n      console.log(imgBase64);\n      this.setState({}, async () => {\n        const formdata = new FormData();\n        formdata.append('files', {\n          uri: 'data:image/png;base64,' + imgBase64,\n          name: 'coffee-mobile.png',\n          type: 'image/png'\n        });\n        await axios.post('http://ai.ailab.vn:5004/upload2', formdata, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          this.setState({\n            Image: res.data\n          });\n        });\n        nextImageTensor.dispose();\n      });\n      await this.sleep(200);\n      requestAnimationFrame(loop);\n    };\n    loop();\n  };\n  isPortrait = () => {\n    const {\n      orientation\n    } = this.state;\n    return orientation === ScreenOrientation.Orientation.PORTRAIT_UP;\n  };\n  getOutputTensorWidth = () => {\n    return OUTPUT_TENSOR_WIDTH;\n  };\n  getOutputTensorHeight = () => {\n    return OUTPUT_TENSOR_HEIGHT;\n  };\n  getTextureRotationAngleInDegrees = async () => {\n    console.log('Vô đây rồi ==============');\n    if (IS_ANDROID) {\n      return 0;\n    }\n    switch (this.state.orientation) {\n      case ScreenOrientation.Orientation.PORTRAIT_DOWN:\n        return 180;\n      case ScreenOrientation.Orientation.LANDSCAPE_LEFT:\n        return CameraType.front ? 270 : 90;\n      case ScreenOrientation.Orientation.LANDSCAPE_RIGHT:\n        return CameraType.front ? 90 : 270;\n      default:\n        return 0;\n    }\n  };\n  sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  render() {\n    const {\n      navigation,\n      route\n    } = this.props;\n    const {\n      isLoading,\n      isCapture,\n      previewCapture,\n      dataFarm,\n      item,\n      modalImage,\n      modalUploadSuccess,\n      modalTakePicSuccess,\n      outputTensorHeight,\n      outputTensorWidth\n    } = this.state;\n    if (isLoading) {\n      return _jsxDEV(View, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 20\n      }, this);\n    } else {\n      return _jsxDEV(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsxDEV(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalUploadSuccess,\n          onRequestClose: () => {\n            this.setState({\n              modalUploadSuccess: !this.state.modalUploadSuccess\n            });\n          },\n          children: _jsxDEV(View, {\n            style: styles.centeredView,\n            children: _jsxDEV(View, {\n              style: styles.modalView,\n              children: [_jsxDEV(Text, {\n                style: styles.modalText,\n                children: \"Successfully Upload !\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 29\n              }, this), _jsxDEV(View, {\n                children: _jsxDEV(Image, {\n                  source: require(\"../assets/iconsuccess.png\"),\n                  style: {\n                    height: 50,\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 17\n        }, this), _jsxDEV(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalTakePicSuccess,\n          onRequestClose: () => {\n            this.setState({\n              modalTakePicSuccess: !this.state.modalTakePicSuccess\n            });\n          },\n          children: _jsxDEV(View, {\n            style: styles.centeredView,\n            children: _jsxDEV(View, {\n              style: styles.modalView,\n              children: [_jsxDEV(Text, {\n                style: styles.modalText,\n                children: \"Successfully Take a Picture !\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 29\n              }, this), _jsxDEV(View, {\n                children: _jsxDEV(Image, {\n                  source: require(\"../assets/iconsuccess.png\"),\n                  style: {\n                    height: 50,\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }, this), isCapture && !previewCapture && _jsxDEV(CameraView, {\n          ref: r => {\n            camera = r;\n          },\n          style: styles.camera,\n          facing: \"back\",\n          resizeWidth: this.getOutputTensorWidth(),\n          resizeHeight: this.getOutputTensorHeight(),\n          resizeDepth: 3,\n          autorender: false,\n          children: _jsxDEV(View, {\n            style: {\n              flex: 1,\n              width: '100%',\n              height: \"100%\",\n              backgroundColor: 'transparent',\n              flexDirection: 'row'\n            },\n            children: _jsxDEV(View, {\n              style: {\n                position: 'absolute',\n                bottom: 0,\n                flexDirection: 'row',\n                flex: 1,\n                width: '100%',\n                padding: 20,\n                justifyContent: 'space-between'\n              },\n              children: [_jsxDEV(EButton, {\n                title: \"Back\",\n                onPress: () => {\n                  this.setState({\n                    isCapture: false\n                  });\n                },\n                buttonStyle: {\n                  borderColor: '#20a8d8',\n                  backgroundColor: '#20a8d8'\n                },\n                type: \"outline\",\n                titleStyle: {\n                  color: 'white',\n                  fontSize: 24\n                },\n                containerStyle: {\n                  width: '20%',\n                  height: \"70%\",\n                  marginTop: 12,\n                  backgroundColor: '#20a8d8'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 33\n              }, this), _jsxDEV(View, {\n                style: {\n                  alignSelf: 'center',\n                  flex: 1,\n                  alignItems: 'center'\n                },\n                children: _jsxDEV(TouchableOpacity, {\n                  onPress: this.__takePicture,\n                  style: {\n                    width: 70,\n                    height: 70,\n                    bottom: 0,\n                    marginRight: 70,\n                    borderRadius: 50,\n                    backgroundColor: '#fff'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this), isCapture && previewCapture && _jsxDEV(GestureHandlerRootView, {\n          style: {\n            flex: 1\n          },\n          children: _jsxDEV(SafeAreaView, {\n            style: {\n              flex: 1\n            },\n            children: [_jsxDEV(TouchableOpacity, {\n              style: {\n                flex: 1\n              },\n              onPress: () => {\n                this.setState({\n                  modalImage: !this.state.modalImage\n                });\n              },\n              children: _jsxDEV(Image, {\n                style: {\n                  flex: 1,\n                  height: 700,\n                  paddingTop: 15,\n                  width: \"100%\"\n                },\n                resizeMode: \"contain\",\n                source: {\n                  uri: this.state.Image\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 29\n            }, this), _jsxDEV(ImageView, {\n              images: [{\n                uri: this.state.Image\n              }],\n              imageIndex: 0,\n              visible: this.state.modalImage,\n              onRequestClose: () => this.setState({\n                modalImage: !this.state.modalImage\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this), _jsxDEV(View, {\n              style: {\n                padding: 20\n              },\n              children: _jsxDEV(EButton, {\n                title: \"Back\",\n                onPress: () => {\n                  this.setState({\n                    previewCapture: false\n                  });\n                },\n                buttonStyle: {\n                  borderColor: '#20a8d8',\n                  backgroundColor: '#20a8d8'\n                },\n                type: \"outline\",\n                raised: true,\n                titleStyle: {\n                  color: 'white',\n                  fontSize: 24\n                },\n                containerStyle: {\n                  width: '20%',\n                  marginTop: 12,\n                  backgroundColor: '#20a8d8'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }, this), !isCapture && _jsxDEV(View, {\n          children: [_jsxDEV(Image, {\n            style: {\n              height: 300,\n              width: \"100%\",\n              resizeMode: 'contain'\n            },\n            source: Images.Upload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 25\n          }, this), _jsxDEV(Text, {\n            style: {\n              fontFamily: 'montserrat-bold',\n              fontSize: 18,\n              color: 'black',\n              textAlign: 'center'\n            },\n            children: [_jsxDEV(Text, {\n              style: {\n                color: '#18B5A3'\n              },\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 29\n            }, this), \" your crop photo to identify diseases and receive tailored solutions instantly.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 25\n          }, this), _jsxDEV(Dropdown, {\n            style: styles.dropdown,\n            placeholderStyle: styles.placeholderStyle,\n            selectedTextStyle: styles.selectedTextStyle,\n            inputSearchStyle: styles.inputSearchStyle,\n            iconStyle: styles.iconStyle,\n            data: dataFarm,\n            search: true,\n            maxHeight: 300,\n            labelField: \"label\",\n            valueField: \"value\",\n            placeholder: \"Select Farm - Block\",\n            searchPlaceholder: \"Search...\",\n            value: item,\n            onChange: item => {\n              this.setState({\n                item: item\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this), _jsxDEV(View, {\n            style: {\n              backgroundColor: \"rgba(0,133,117,0.25)\",\n              margin: 15\n            },\n            children: [_jsxDEV(Image, {\n              style: {\n                height: 150,\n                margin: \"auto\",\n                width: \"70%\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                alignContent: \"center\",\n                resizeMode: 'contain'\n              },\n              source: Images.D1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 29\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => {\n                if (String(this.state.item.value) === '-1') {\n                  alert('Please select Farm - Block');\n                } else {\n                  this.setState({\n                    isCapture: true\n                  });\n                }\n              },\n              children: _jsxDEV(Image, {\n                style: {\n                  height: 75,\n                  margin: \"auto\",\n                  paddingBottom: 5,\n                  width: \"70%\",\n                  resizeMode: 'contain'\n                },\n                source: Images.D2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 29\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => {\n                if (String(this.state.item.value) === '-1') {\n                  alert('Please select Farm - Block');\n                } else {\n                  this.setState({\n                    isUpload: true\n                  }, () => {\n                    this.__pickImage();\n                  });\n                }\n              },\n              children: [_jsxDEV(Image, {\n                style: {\n                  height: 75,\n                  margin: \"auto\",\n                  paddingBottom: 5,\n                  width: \"70%\",\n                  resizeMode: 'contain'\n                },\n                source: Images.D3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 33\n              }, this), this.state.image && _jsxDEV(Image, {\n                source: {\n                  uri: this.state.image\n                },\n                style: {\n                  height: 300,\n                  width: \"100%\",\n                  resizeMode: 'contain'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  async componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  camera: {\n    width: '100%',\n    flex: 0,\n    height: '100%',\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 30\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    margin: 64\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE,\n    paddingHorizontal: 2,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  dropdown: {\n    margin: 16,\n    height: 50,\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.5\n  },\n  icon: {\n    marginRight: 5\n  },\n  placeholderStyle: {\n    fontSize: 16\n  },\n  selectedTextStyle: {\n    fontSize: 16\n  },\n  iconStyle: {\n    width: 20,\n    height: 20\n  },\n  inputSearchStyle: {\n    height: 40,\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","CameraView","CameraType","cameraWithTensors","AppRegistry","Alert","StyleSheet","Text","TouchableOpacity","View","Dimensions","Block","Image","Platform","StatusBar","SafeAreaView","Modal","ScrollView","Root","Toast","Popup","theme","tf","jpeg","GestureHandlerRootView","Button","EButton","Input","Card","ScreenOrientation","Svg","Circle","Rect","axios","w3cwebsocket","W3CWebSocket","ImageView","ImagePicker","Images","Dropdown","jsxDEV","_jsxDEV","width","get","TensorCamera","IS_ANDROID","OS","IS_IOS","CAM_PREVIEW_WIDTH","CAM_PREVIEW_HEIGHT","MIN_KEYPOINT_SCORE","OUTPUT_TENSOR_WIDTH","OUTPUT_TENSOR_HEIGHT","AUTO_RENDER","LOAD_MODEL_FROM_BUNDLE","camera","Camera2","Component","constructor","props","state","isLoading","isCapture","modalImage","modalUploadSuccess","modalTakePicSuccess","previewCapture","image","orientation","item","label","value","outputTensorWidth","outputTensorHeight","Loading","dataFarm","__takePicture","photo","takePictureAsync","base64","imageType","formdata","FormData","append","uri","name","type","split","post","headers","then","res","setState","data","file_process","setTimeout","__pickImage","result","launchImageLibraryAsync","mediaTypes","aspect","quality","allowsMultipleSelection","canceled","assets","map","index","fileName","handleCameraStream","images","updatePreview","gl","loop","nextImageTensor","next","height","shape","Buffer","concat","ones","mul","slice","dataSync","rawImageData","jpegImageData","encode","imgBase64","util","decodeString","console","log","dispose","sleep","requestAnimationFrame","isPortrait","Orientation","PORTRAIT_UP","getOutputTensorWidth","getOutputTensorHeight","getTextureRotationAngleInDegrees","PORTRAIT_DOWN","LANDSCAPE_LEFT","front","LANDSCAPE_RIGHT","ms","Promise","resolve","render","navigation","route","_jsxFileName","lineNumber","columnNumber","style","flex","children","animationType","transparent","visible","onRequestClose","styles","centeredView","modalView","modalText","source","require","ref","r","facing","resizeWidth","resizeHeight","resizeDepth","autorender","backgroundColor","flexDirection","position","bottom","padding","justifyContent","title","onPress","buttonStyle","borderColor","titleStyle","color","fontSize","containerStyle","marginTop","alignSelf","alignItems","marginRight","borderRadius","paddingTop","resizeMode","imageIndex","raised","Upload","fontFamily","textAlign","dropdown","placeholderStyle","selectedTextStyle","inputSearchStyle","iconStyle","search","maxHeight","labelField","valueField","placeholder","searchPlaceholder","onChange","margin","alignContent","D1","String","alert","paddingBottom","D2","isUpload","D3","componentDidMount","create","container","svg","zIndex","buttonContainer","SIZES","BASE","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderBottomColor","borderBottomWidth","icon"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/screens/D.js"],"sourcesContent":["import React from 'react'\nimport { CameraView, CameraType } from 'expo-camera'\nimport { cameraWithTensors } from '@tensorflow/tfjs-react-native'\nimport {\n    AppRegistry,\n    Alert,\n    StyleSheet,\n    Text,\n    TouchableOpacity,\n    View,\n    Dimensions,\n    Block,\n    Image,\n    Platform,\n    StatusBar,\n    SafeAreaView,\n    Modal,\n    ScrollView\n\n} from 'react-native'\n\nimport { Root, Toast, Popup } from 'react-native-popup-confirm-toast'\n\nimport { theme } from 'galio-framework';\n\n\nimport * as tf from '@tensorflow/tfjs'\nimport * as jpeg from 'jpeg-js';\n\nimport { GestureHandlerRootView } from 'react-native-gesture-handler'\n\n// import * as faceDetection from '@tensorflow-models/face-detection'\nimport { Button as EButton, Input, Card } from 'react-native-elements'\nimport * as ScreenOrientation from 'expo-screen-orientation'\nimport Svg, { Circle, Rect } from 'react-native-svg'\nimport axios from 'axios';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport ImageView from \"react-native-image-viewing\";\nimport * as ImagePicker from 'expo-image-picker';\n\nimport Images from \"../constants/Images\";\nimport { Dropdown } from 'react-native-element-dropdown';\n\nconst { width } = Dimensions.get('screen');\n\n\nconst TensorCamera = cameraWithTensors(CameraView)\n\nconst IS_ANDROID = Platform.OS === 'android'\nconst IS_IOS = Platform.OS === 'ios'\n\n// const model = faceDetection.SupportedModels.MediaPipeFaceMesh;\n// const detectorConfig = {\n//   runtime: 'mediapipe', // or 'tfjs'\n// }\n// const detector = await faceDetection.createDetector(model, detectorConfig);\n\n// Camera preview size.\n//\n// From experiments, to render camera feed without distortion, 16:9 ratio\n// should be used fo iOS devices and 4:3 ratio should be used for android\n// devices.\n//\n// This might not cover all cases.\nconst CAM_PREVIEW_WIDTH = Dimensions.get('window').width\nconst CAM_PREVIEW_HEIGHT = CAM_PREVIEW_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4)\n\n// The score threshold for pose detection results.\nconst MIN_KEYPOINT_SCORE = 0.3\n\n// The size of the resized output from TensorCamera.\n//\n// For movenet, the size here doesn't matter too much because the model will\n// preprocess the input (crop, resize, etc). For best result, use the size that\n// doesn't distort the image.\nconst OUTPUT_TENSOR_WIDTH = 480\nconst OUTPUT_TENSOR_HEIGHT = OUTPUT_TENSOR_WIDTH / (IS_IOS ? 9 / 16 : 3 / 4)\n// OUTPUT_TENSOR_WIDTH = 360\n// OUTPUT_TENSOR_HEIGHT = 360\n\n// Whether to auto-render TensorCamera preview.\nconst AUTO_RENDER = true\n\n// Whether to load model from app bundle (true) or through network (false).\nconst LOAD_MODEL_FROM_BUNDLE = false\nlet camera\n\nexport default class Camera2 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            isCapture: false,\n            modalImage: false,\n            modalUploadSuccess: false,\n            modalTakePicSuccess: false,\n            previewCapture: false,\n            image: null,\n            Image: \"\",\n            orientation: null,\n            item: { label: \"Please select Farm - Block\", value: \"-1\" },\n            outputTensorWidth: null,\n            outputTensorHeight: null,\n            Loading: false,\n            dataFarm: [\n                { label: 'FARM DT01 - Block A', value: '1' },\n                { label: 'FARM DT01 - Block B', value: '2' },\n                { label: 'FARM DT01 - Block C', value: '3' },\n                { label: 'FARM DT02 - Block A', value: '4' },\n                { label: 'FARM DT02 - Block B', value: '5' },\n            ]\n        }\n    }\n\n    __takePicture = async () => {\n        if (!camera) return\n        const photo = await camera.takePictureAsync({ base64: true, imageType: \"jpeg\", })\n\n        const formdata = new FormData();\n        formdata.append('files', {\n            uri: 'data:image/jpeg;base64,' + photo.base64, // base64\n            name: 'coffee-mobile.jpg',\n            type: 'image/jpeg',\n        });\n        formdata.append('farm_name', this.state.item?.label.split(' - ')[0]);\n        formdata.append('block_name', this.state.item?.label.split(' - ')[1]);\n\n        await axios.post('http://ai.ailab.vn:5004/upload2', formdata, { headers: { 'Content-Type': 'multipart/form-data' } })\n            .then(res => {\n                // console.log(res.data[0].file_process)\n                this.setState({\n                    Image: res.data[0].file_process,\n                    modalTakePicSuccess: !this.state.modalTakePicSuccess,\n                    previewCapture: true,\n                    // Loading: false\n                },() => {\n                    setTimeout(() => {\n                        this.setState({\n                            modalTakePicSuccess: false\n                        })\n                    }, 2000)\n                })\n            })\n        // console.log(photo.base64)        \n        // setPreviewVisible(true)\n        // setCapturedImage(photo)\n    }\n\n    __pickImage = async () => {\n        // No permissions request is necessary for launching the image library\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ['images'],\n            //   allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n            allowsMultipleSelection: true,\n            base64: true\n        });        \n\n        if (!result.canceled) {\n            result?.assets?.map(async (data, index) => {                \n                const formdata = new FormData();\n                formdata.append('files', {\n                    uri: 'data:image/jpeg;base64,' + data.base64, // base64\n                    name: data.fileName,\n                    type: 'image/jpeg',\n                });\n                formdata.append('farm_name', this.state.item?.label.split(' - ')[0]);\n                formdata.append('block_name', this.state.item?.label.split(' - ')[1]);\n\n                // console.log(data)\n                // const formdata = {\n                //     // files: {\n                //     //         uri: 'data:image/jpeg;base64,' + data.base64,\n                //     //         name: data.fileName,\n                //     //         type: 'image/jpeg'\n                //     //     },\n                //     // farm_name:  this.state.item?.label.split(' - ')[0],\n                //     // block_name:  this.state.item?.label.split(' - ')[1]\n                // }\n\n                // console.log(this.state.item)\n                await axios.post('http://ai.ailab.vn:5004/upload2', formdata, { headers: { 'Content-Type': 'multipart/form-data' } })\n                    .then(res => {\n                        // console.log(res.data[0].file_process)\n                        this.setState({\n                            Image: res.data[0].file_process,\n                            modalUploadSuccess: !this.state.modalUploadSuccess\n                            // previewCapture: true,\n                            // Loading: false\n                        },() => {\n                            setTimeout(() => {\n                                this.setState({\n                                    modalUploadSuccess: false\n                                })\n                              }, 2000)\n                        })\n                    })\n            }) \n        }\n    };\n\n    handleCameraStream = async (images, updatePreview, gl) => {\n        const loop = async () => {\n            const nextImageTensor = images.next().value\n            const height = nextImageTensor.shape[0]\n            const width = nextImageTensor.shape[1]\n            const data = new Buffer(\n                // concat with an extra alpha channel and slice up to 4 channels to handle 3 and 4 channels tensors\n                tf.concat([nextImageTensor, tf.ones([height, width, 1]).mul(255)], [-1])\n                    .slice([0], [height, width, 4])\n                    .dataSync(),\n            )\n\n            const rawImageData = { data, width, height };\n            const jpegImageData = jpeg.encode(rawImageData);\n\n            const imgBase64 = tf.util.decodeString(jpegImageData.data, \"base64\")\n            console.log(imgBase64)\n            this.setState({\n                // Loading: true\n            }, async () => {\n                // console.log(imgBase64)\n                const formdata = new FormData();\n\n                formdata.append('files', {\n                    uri: 'data:image/png;base64,' + imgBase64, // base64\n                    name: 'coffee-mobile.png',\n                    type: 'image/png',\n                });\n\n                await axios.post('http://ai.ailab.vn:5004/upload2', formdata, { headers: { 'Content-Type': 'multipart/form-data' } })\n                    .then(res => {\n                        // console.log(res.data[0].file_process)\n                        this.setState({\n                            Image: res.data,\n                            // Loading: false\n                        })\n                    })\n                nextImageTensor.dispose();\n            })\n\n\n\n            //\n            // do something with tensor here\n            //\n\n            // if autorender is false you need the following two lines.\n            // updatePreview();\n            // gl.endFrameEXP();\n            await this.sleep(200)\n            requestAnimationFrame(loop)\n        }\n        loop()\n    }\n\n\n    isPortrait = () => {\n        const {\n            orientation\n        } = this.state\n        return (\n            orientation === ScreenOrientation.Orientation.PORTRAIT_UP\n            // || orientation === ScreenOrientation.Orientation.PORTRAIT_DOWN\n        )\n    }\n\n    getOutputTensorWidth = () => {\n        return OUTPUT_TENSOR_WIDTH\n        // return this.isPortrait() || IS_ANDROID\n        //   ? OUTPUT_TENSOR_WIDTH\n        //   : OUTPUT_TENSOR_HEIGHT\n    }\n\n    getOutputTensorHeight = () => {\n        return OUTPUT_TENSOR_HEIGHT\n        // return this.isPortrait() || IS_ANDROID\n        //   ? OUTPUT_TENSOR_HEIGHT\n        //   : OUTPUT_TENSOR_WIDTH\n    }\n\n    getTextureRotationAngleInDegrees = async () => {\n        // On Android, the camera texture will rotate behind the scene as the phone\n        // changes orientation, so we don't need to rotate it in TensorCamera.\n        console.log('Vô đây rồi ==============')\n        if (IS_ANDROID) {\n            return 0\n        }\n\n        // For iOS, the camera texture won't rotate automatically. Calculate the\n        // rotation angles here which will be passed to TensorCamera to rotate it\n        // internally.\n        // console.log(this.state.orientation)\n        switch (this.state.orientation) {\n            // Not supported on iOS as of 11/2021, but add it here just in case.\n            case ScreenOrientation.Orientation.PORTRAIT_DOWN:\n                return 180\n            case ScreenOrientation.Orientation.LANDSCAPE_LEFT:\n                return CameraType.front ? 270 : 90\n            case ScreenOrientation.Orientation.LANDSCAPE_RIGHT:\n                return CameraType.front ? 90 : 270\n            default:\n                return 0\n        }\n    }\n\n    sleep = ms => new Promise(\n        resolve => setTimeout(resolve, ms)\n    );\n\n    render() {\n        const { navigation, route } = this.props\n        const {\n            isLoading,\n            isCapture,\n            previewCapture,\n            dataFarm,\n            item,\n            modalImage,\n            modalUploadSuccess,\n            modalTakePicSuccess,\n            outputTensorHeight,\n            outputTensorWidth\n        } = this.state\n        // console.log(this.getOutputTensorWidth())\n        // console.log(this.getOutputTensorHeight())\n        if (isLoading) {\n            return <View></View>\n        } else {\n            return <View style={{ flex: 1 }}>\n                {/* <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalImage}\n                    onRequestClose={() => {\n                        this.setState({ modalImage: !this.state.modalImage })\n                    }}>\n                    <Root>\n                        <View style={styles.centeredView}>\n                            <View style={styles.modalView}>\n                                <>\n                                    <Text style={styles.modalText}>Picture</Text>\n                                    <View>\n                                        <ScrollView style={{\n                                            width: width - theme.SIZES.BASE * 2,\n                                            paddingVertical: theme.SIZES.BASE,\n                                            paddingHorizontal: 10,\n                                            // padding: \"100%\"\n                                        }}>\n                                            <ImageView\n                                                images={[{uri: this.state.Image}]}\n                                                imageIndex={0}\n                                                visible={this.state.modalImage}\n                                                onRequestClose={() => this.setState({\n                                                    modalImage: !this.state.modalImage\n                                                })}\n                                            />\n                                        </ScrollView>\n                                    </View>\n                                </>\n                            </View>\n                        </View>\n                    </Root>\n                </Modal> */}\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalUploadSuccess}\n                    // key={this.state.data2['index']}\n                    onRequestClose={() => {\n                        // Alert.alert('Modal has been closed.');\n                        // this.setModalVisible(!modalSuccess);\n                        this.setState({\n                            modalUploadSuccess: !this.state.modalUploadSuccess\n                        })\n                    }}>\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <Text style={styles.modalText}>Successfully Upload !</Text>\n                                <View>\n                                    <Image\n                                        source={require('../assets/iconsuccess.png')}\n                                        style={{ height: 50, width: 50 }}\n                                    />\n                                </View>\n                        </View>\n                    </View>\n                </Modal>\n\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalTakePicSuccess}\n                    // key={this.state.data2['index']}\n                    onRequestClose={() => {\n                        // Alert.alert('Modal has been closed.');\n                        // this.setModalVisible(!modalSuccess);\n                        this.setState({\n                            modalTakePicSuccess: !this.state.modalTakePicSuccess\n                        })\n                    }}>\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <Text style={styles.modalText}>Successfully Take a Picture !</Text>\n                                <View>\n                                    <Image\n                                        source={require('../assets/iconsuccess.png')}\n                                        style={{ height: 50, width: 50 }}\n                                    />\n                                </View>\n                        </View>\n                    </View>\n                </Modal>\n\n\n                {(isCapture && !previewCapture) && (\n                    <CameraView\n                        // Standard Camera props\n                        // ratio='1:1'            \n                        // cameraTextureWidth={this.getTextureRotationAngleInDegrees()}            \n                        ref={(r) => {\n                            camera = r\n                        }}\n                        // mirror={false}\n                        style={styles.camera}\n                        facing='back'\n                        // type={Camera.Constants.Type.back}\n                        resizeWidth={this.getOutputTensorWidth()}\n                        resizeHeight={this.getOutputTensorHeight()}\n                        resizeDepth={3}\n                        // onReady={this.handleCameraStream}\n                        autorender={false}\n                    >\n                        <View\n                            style={{\n                                flex: 1,\n                                width: '100%',\n                                height: \"100%\",\n                                backgroundColor: 'transparent',\n                                flexDirection: 'row'\n                            }}\n                        >\n                            <View\n                                style={{\n                                    position: 'absolute',\n                                    bottom: 0,\n                                    flexDirection: 'row',\n                                    flex: 1,\n                                    width: '100%',\n                                    padding: 20,\n                                    justifyContent: 'space-between'\n                                }}>\n                                <EButton\n                                    title='Back'\n                                    onPress={\n                                        () => {\n                                            this.setState({\n                                                isCapture: false,\n                                            })\n                                            // navigation.navigate('HomeDrawer', {})\n                                            // console.log('Press OK !')\n                                        }\n\n                                    }\n                                    buttonStyle={{\n                                        // flex: 1,\n                                        borderColor: '#20a8d8',\n                                        backgroundColor: '#20a8d8'\n                                    }}\n                                    type='outline'\n                                    // raised\n                                    titleStyle={{\n                                        color: 'white',\n                                        fontSize: 24\n                                    }}\n                                    containerStyle={{\n                                        width: '20%',\n                                        height: \"70%\",\n                                        // flex: 1,\n                                        // height: 50,\n                                        marginTop: 12,\n                                        backgroundColor: '#20a8d8'\n                                        //   marginBottom: theme.SIZES.BASE,\n                                        //   width: width - theme.SIZES.BASE * 2,\n                                    }}\n                                />\n                                <View\n                                    style={{\n                                        alignSelf: 'center',\n                                        flex: 1,\n                                        alignItems: 'center'\n                                    }}\n                                >\n                                    <TouchableOpacity\n                                        onPress={this.__takePicture}\n                                        style={{\n                                            width: 70,\n                                            height: 70,\n                                            bottom: 0,\n                                            marginRight: 70,\n                                            borderRadius: 50,\n                                            backgroundColor: '#fff'\n                                        }}\n                                    />\n                                </View>\n                            </View>\n                        </View>\n                    </CameraView >\n                )}\n                {(isCapture && previewCapture) && (\n                    <GestureHandlerRootView style={{ flex: 1 }}>\n                        <SafeAreaView style={{ flex: 1 }}>\n                            <TouchableOpacity\n                                style={{\n                                    flex: 1,\n                                }}\n                                onPress={() => {\n                                    this.setState({\n                                        modalImage: !this.state.modalImage\n                                    })\n                                }}\n                            >\n                                <Image style={{\n                                    flex: 1,\n                                    height: 700,\n                                    paddingTop: 15,\n                                    width: \"100%\"\n                                }}\n                                    resizeMode='contain'\n                                    source={{ uri: this.state.Image }}\n                                />\n                            </TouchableOpacity>\n                            <ImageView\n                                images={[{ uri: this.state.Image }]}\n                                imageIndex={0}\n                                visible={this.state.modalImage}\n                                onRequestClose={() => this.setState({\n                                    modalImage: !this.state.modalImage\n                                })}\n                            />\n                            <View\n                                style={{ padding: 20 }}>\n                                <EButton\n                                    title='Back'\n                                    onPress={\n                                        () => {\n                                            this.setState({\n                                                previewCapture: false,\n                                            })\n                                            // navigation.navigate('HomeDrawer', {})\n                                            // console.log('Press OK !')\n                                        }\n\n                                    }\n                                    buttonStyle={{\n                                        borderColor: '#20a8d8',\n                                        backgroundColor: '#20a8d8'\n                                    }}\n                                    type='outline'\n                                    raised\n                                    titleStyle={{\n                                        color: 'white',\n                                        fontSize: 24\n                                    }}\n                                    containerStyle={{\n                                        width: '20%',\n                                        // height: \"70%\",\n                                        // flex: 1,\n                                        // height: 50,                                \n                                        marginTop: 12,\n                                        backgroundColor: '#20a8d8'\n                                        //   marginBottom: theme.SIZES.BASE,\n                                        //   width: width - theme.SIZES.BASE * 2,\n                                    }}\n                                />\n                            </View>\n                        </SafeAreaView>\n                    </GestureHandlerRootView>\n\n                )}\n                {!isCapture && (\n                    <View>\n                        <Image style={{\n                            height: 300,\n                            width: \"100%\",\n                            resizeMode: 'contain',\n                        }}\n                            source={Images.Upload} />\n                        <Text style={{ fontFamily: 'montserrat-bold', fontSize: 18, color: 'black', textAlign: 'center' }}>\n                            <Text style={{ color: '#18B5A3' }}>Upload</Text> your crop photo to identify diseases and receive tailored solutions instantly.\n                        </Text>\n                        <Dropdown\n                            style={styles.dropdown}\n                            placeholderStyle={styles.placeholderStyle}\n                            selectedTextStyle={styles.selectedTextStyle}\n                            inputSearchStyle={styles.inputSearchStyle}\n                            iconStyle={styles.iconStyle}\n                            data={dataFarm}\n                            search\n                            maxHeight={300}\n                            labelField=\"label\"\n                            valueField=\"value\"\n                            placeholder=\"Select Farm - Block\"\n                            searchPlaceholder=\"Search...\"\n                            value={item}\n                            onChange={item => {\n                                this.setState({ item: item });\n                            }}></Dropdown>\n                        <View style={{ backgroundColor: \"rgba(0,133,117,0.25)\", margin: 15 }}>\n                            <Image style={{\n                                height: 150,\n                                margin: \"auto\",\n                                // paddingTop: 15,\n                                width: \"70%\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                alignContent: \"center\",\n                                resizeMode: 'contain',\n                            }}\n                                source={Images.D1} />\n                            <TouchableOpacity\n                                onPress={() => {\n                                    if (String(this.state.item.value) === '-1') {\n                                        alert('Please select Farm - Block')\n                                    } else {\n                                        this.setState({\n                                            isCapture: true\n                                        })\n                                    }\n                                }}\n                            >\n                                <Image style={{\n                                    height: 75,\n                                    margin: \"auto\",\n                                    paddingBottom: 5,\n                                    width: \"70%\",\n                                    resizeMode: 'contain',\n                                }}\n                                    source={Images.D2} />\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                                onPress={() => {\n                                    if (String(this.state.item.value) === '-1') {\n                                        alert('Please select Farm - Block')\n                                    } else {\n                                        this.setState({\n                                            isUpload: true,\n                                        }, () => {\n                                            this.__pickImage()\n                                        })\n                                    }\n                                }}\n                            >\n                                <Image style={{\n                                    height: 75,\n                                    margin: \"auto\",\n                                    paddingBottom: 5,\n                                    width: \"70%\",\n                                    resizeMode: 'contain',\n                                }}\n                                    source={Images.D3} />\n                                {this.state.image && <Image source={{ uri: this.state.image }} style={{\n                                    height: 300,\n                                    width: \"100%\",\n                                    resizeMode: 'contain',\n                                }} />}\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                )}\n            </View>\n        }\n    }\n\n    async componentDidMount() {\n\n        this.setState({\n            isLoading: false\n        })\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center'\n    },\n    camera: {\n\n        width: '100%',\n        flex: 0,\n        height: '100%',\n\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center',\n\n    },\n    svg: {\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        zIndex: 30\n    },\n    buttonContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: 'transparent',\n        margin: 64\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        // padding: 35,\n\n        width: width - theme.SIZES.BASE * 2,\n        paddingVertical: theme.SIZES.BASE,\n        paddingHorizontal: 2,\n\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    dropdown: {\n        margin: 16,\n        height: 50,\n        borderBottomColor: 'gray',\n        borderBottomWidth: 0.5,\n    },\n    icon: {\n        marginRight: 5,\n    },\n    placeholderStyle: {\n        fontSize: 16,\n    },\n    selectedTextStyle: {\n        fontSize: 16,\n    },\n    iconStyle: {\n        width: 20,\n        height: 20,\n    },\n    inputSearchStyle: {\n        height: 40,\n        fontSize: 16,\n    },\n})\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}