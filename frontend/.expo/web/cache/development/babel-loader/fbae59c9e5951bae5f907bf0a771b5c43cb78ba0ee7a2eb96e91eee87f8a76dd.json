{"ast":null,"code":"var _Reanimated;\nimport { tagMessage } from \"../../utils\";\nlet Reanimated;\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  Reanimated = undefined;\n}\nif (!((_Reanimated = Reanimated) !== null && _Reanimated !== void 0 && _Reanimated.useSharedValue)) {\n  Reanimated = undefined;\n}\nconst _worklet_7298969188432_init_data = {\n  code: \"function reactNativeGestureHandler_reanimatedWrapperJs1(){const{tagMessage}=this.__closure;console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeGestureHandler_reanimatedWrapperJs1\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js\\\"],\\\"mappings\\\":\\\"AAqB+B,SAAAA,8CAAMA,CAAA,QAAAC,UAAA,OAAAC,SAAA,CAGjCC,OAAO,CAACC,IAAI,CAACH,UAAU,CAAC,gGAAgG,CAAC,CAAC,CAC5H\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  Reanimated.setGestureState = function () {\n    const _e = [new global.Error(), -2, -27];\n    const reactNativeGestureHandler_reanimatedWrapperJs1 = function () {\n      console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));\n    };\n    reactNativeGestureHandler_reanimatedWrapperJs1.__closure = {\n      tagMessage\n    };\n    reactNativeGestureHandler_reanimatedWrapperJs1.__workletHash = 7298969188432;\n    reactNativeGestureHandler_reanimatedWrapperJs1.__initData = _worklet_7298969188432_init_data;\n    reactNativeGestureHandler_reanimatedWrapperJs1.__stackDetails = _e;\n    return reactNativeGestureHandler_reanimatedWrapperJs1;\n  }();\n}\nexport { Reanimated };","map":{"version":3,"names":["tagMessage","Reanimated","require","e","undefined","_Reanimated","useSharedValue","_worklet_7298969188432_init_data","code","location","sourceMap","version","setGestureState","_e","global","Error","reactNativeGestureHandler_reanimatedWrapperJs1","console","warn","__closure","__workletHash","__initData","__stackDetails"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.ts"],"sourcesContent":["import { ComponentClass } from 'react';\nimport {\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { tagMessage } from '../../utils';\n\nexport interface SharedValue<T> {\n  value: T;\n}\n\nlet Reanimated:\n  | {\n      default: {\n        // Slightly modified definition copied from 'react-native-reanimated'\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        createAnimatedComponent<P extends object>(\n          component: ComponentClass<P>,\n          options?: unknown\n        ): ComponentClass<P>;\n      };\n      useEvent: (\n        callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void,\n        events: string[],\n        rebuild: boolean\n      ) => unknown;\n      useSharedValue: <T>(value: T) => SharedValue<T>;\n      setGestureState: (handlerTag: number, newState: number) => void;\n    }\n  | undefined;\n\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  // When 'react-native-reanimated' is not available we want to quietly continue\n  // @ts-ignore TS demands the variable to be initialized\n  Reanimated = undefined;\n}\n\nif (!Reanimated?.useSharedValue) {\n  // @ts-ignore Make sure the loaded module is actually Reanimated, if it's not\n  // reset the module to undefined so we can fallback to the default implementation\n  Reanimated = undefined;\n}\n\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  // The loaded module is Reanimated but it doesn't have the setGestureState defined\n  Reanimated.setGestureState = () => {\n    'worklet';\n    console.warn(\n      tagMessage(\n        'Please use newer version of react-native-reanimated in order to control state of the gestures.'\n      )\n    );\n  };\n}\n\nexport { Reanimated };\n"],"mappings":";AAKA,SAASA,UAAT;AAMA,IAAIC,UAAJ;AAoBA,IAAI;EACFA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAApB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;EAGVF,UAAU,GAAGG,SAAb;AACD;AAED,IAAI,GAAAC,WAAA,GAACJ,UAAD,cAAAI,WAAA,eAACA,WAAA,CAAYC,cAAb,CAAJ,EAAiC;EAG/BL,UAAU,GAAGG,SAAb;AACD;AAAA,MAAAG,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAED,IAAIV,UAAU,KAAKG,SAAf,IAA4B,CAACH,UAAU,CAACW,eAA5C,EAA6D;EAE3DX,UAAU,CAACW,eAAX,GAA6B;IAAA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAC,8CAAA,YAAAA,CAAA,EAAM;MAEjCC,OAAO,CAACC,IAAR,CACElB,UAAU,CACR,gGADQ,CADZ;IAKD,CAPD;IAAAgB,8CAAA,CAAAG,SAAA;MAAAnB;IAAA;IAAAgB,8CAAA,CAAAI,aAAA;IAAAJ,8CAAA,CAAAK,UAAA,GAAAd,gCAAA;IAAAS,8CAAA,CAAAM,cAAA,GAAAT,EAAA;IAAA,OAAAG,8CAAA;EAAA,CAA6B,EAA7B;AAQD;AAED,SAASf,UAAT"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}