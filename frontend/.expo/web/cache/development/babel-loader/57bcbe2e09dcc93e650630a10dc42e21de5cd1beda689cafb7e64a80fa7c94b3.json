{"ast":null,"code":"import axios from 'axios';\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport { SERVER } from \"../constants/config\";\nconst sign = require('jwt-encode');\nconst secret = \"ts6nJu7TGes*og$C63NKR412zVhtXsiw5Zd$LC7tk$B^6%WXU1\";\nconst data = {\n  type: 'browser',\n  name: 'HRAI',\n  time: Math.floor(Date.now() / 1000)\n};\nexport const addFM = (block_name, block_area, description, location, block_wealth, callback) => {\n  const headers = {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\"\n  };\n  return dispatch => {\n    axios.post(`${SERVER}/farm/add`, {\n      block_name,\n      block_area,\n      description,\n      location,\n      block_wealth\n    }).then(res => {\n      callback(res.data);\n    }).catch(err => console.log(err.message));\n  };\n};\nexport const fetchFM = callback => {\n  return dispatch => {\n    axios.get(`${SERVER}/farm/fetch`, {}).then(res => {\n      callback(res.data);\n    }).catch(console.log);\n  };\n};\nexport const fetchIMG = callback => {\n  return dispatch => {\n    axios.get(`${SERVER}/images/fetch`, {}).then(res => {\n      callback(res.data);\n    }).catch(console.log);\n  };\n};","map":{"version":3,"names":["axios","InteractionManager","SERVER","sign","require","secret","data","type","name","time","Math","floor","Date","now","addFM","block_name","block_area","description","location","block_wealth","callback","headers","dispatch","post","then","res","catch","err","console","log","message","fetchFM","get","fetchIMG"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/store/actions/aicoffee.js"],"sourcesContent":["import axios from 'axios';\nimport { InteractionManager } from 'react-native';\nimport { SERVER } from \"../constants/config\";\n\n\nconst sign = require('jwt-encode');\n\nconst secret = \"ts6nJu7TGes*og$C63NKR412zVhtXsiw5Zd$LC7tk$B^6%WXU1\";\n\nconst data = {\n  type: 'browser',\n  name: 'HRAI',\n  time: Math.floor(Date.now() / 1000)\n};\n\nexport const addFM = (block_name, block_area, description, location, block_wealth, callback) => {\n    const headers = {\n      \"Content-Type\": \"multipart/form-data\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\"\n    };\n\n    // console.log(image, filename, username, deviceid)\n\n    return dispatch => {\n        axios\n            .post(\n                `${SERVER}/farm/add`,\n                // formData,\n                {\n                    block_name,\n                    block_area,\n                    description,\n                    location,\n                    block_wealth\n                }\n            )\n            .then(res => {\n                // res.data.sizePerPage = sizePerPage\n                // res.data.page = page\n                // console.log(res.data)\n                callback(res.data);\n            })\n            .catch(\n                err => console.log(err.message)\n            );\n    }\n  }\n\n  export const fetchFM = (callback) => {\n    // console.log(CompanyCode)\n    // console.log(VisitorCode)\n\n    return dispatch => {\n        axios\n            .get(`${SERVER}/farm/fetch`, {                \n            })\n            .then(res => {\n                // res.data.sizePerPage = sizePerPage\n                // res.data.page = page\n                // console.log(res.data)\n                callback(res.data);\n            })\n            .catch(console.log);\n    };\n}\n\nexport const fetchIMG = (callback) => {\n    // console.log(CompanyCode)\n    // console.log(VisitorCode)\n\n    return dispatch => {\n        axios\n            .get(`${SERVER}/images/fetch`, {                \n            })\n            .then(res => {\n                // res.data.sizePerPage = sizePerPage\n                // res.data.page = page\n                // console.log(res.data)\n                callback(res.data);\n            })\n            .catch(console.log);\n    };\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,kBAAA;AAE1B,SAASC,MAAM;AAGf,MAAMC,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAElC,MAAMC,MAAM,GAAG,oDAAoD;AAEnE,MAAMC,IAAI,GAAG;EACXC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;AACpC,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAACC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,KAAK;EAC5F,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE,qBAAqB;IACrC,6BAA6B,EAAE,GAAG;IAClC,8BAA8B,EAAE;EAClC,CAAC;EAID,OAAOC,QAAQ,IAAI;IACftB,KAAK,CACAuB,IAAI,CACA,GAAErB,MAAO,WAAU,EAEpB;MACIa,UAAU;MACVC,UAAU;MACVC,WAAW;MACXC,QAAQ;MACRC;IACJ,CACJ,CAAC,CACAK,IAAI,CAACC,GAAG,IAAI;MAITL,QAAQ,CAACK,GAAG,CAACnB,IAAI,CAAC;IACtB,CAAC,CAAC,CACDoB,KAAK,CACFC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAClC,CAAC;EACT,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIX,QAAQ,IAAK;EAInC,OAAOE,QAAQ,IAAI;IACftB,KAAK,CACAgC,GAAG,CAAE,GAAE9B,MAAO,aAAY,EAAE,CAC7B,CAAC,CAAC,CACDsB,IAAI,CAACC,GAAG,IAAI;MAITL,QAAQ,CAACK,GAAG,CAACnB,IAAI,CAAC;IACtB,CAAC,CAAC,CACDoB,KAAK,CAACE,OAAO,CAACC,GAAG,CAAC;EAC3B,CAAC;AACL,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAIb,QAAQ,IAAK;EAIlC,OAAOE,QAAQ,IAAI;IACftB,KAAK,CACAgC,GAAG,CAAE,GAAE9B,MAAO,eAAc,EAAE,CAC/B,CAAC,CAAC,CACDsB,IAAI,CAACC,GAAG,IAAI;MAITL,QAAQ,CAACK,GAAG,CAACnB,IAAI,CAAC;IACtB,CAAC,CAAC,CACDoB,KAAK,CAACE,OAAO,CAACC,GAAG,CAAC;EAC3B,CAAC;AACL,CAAC"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}