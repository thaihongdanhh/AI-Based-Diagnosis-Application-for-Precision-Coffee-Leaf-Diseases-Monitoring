{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport _assign from 'lodash/assign';\nimport _differenceWith from 'lodash/differenceWith';\nimport _get from 'lodash/get';\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useDetectDevice } from \"../../toolkits\";\nimport { useDeviceOrientation } from \"../../useDeviceOrientation\";\nimport CInput from \"../TextInput\";\nimport { styles } from \"./styles\";\nconst {\n  isTablet\n} = useDetectDevice;\nconst ic_down = require(\"../../assets/down.png\");\nconst statusBarHeight = StatusBar.currentHeight || 0;\nconst MultiSelectComponent = React.forwardRef((props, currentRef) => {\n  const orientation = useDeviceOrientation();\n  const {\n    testID,\n    itemTestIDField,\n    onChange,\n    data = [],\n    value,\n    style = {},\n    labelField,\n    valueField,\n    searchField,\n    selectedStyle,\n    selectedTextStyle,\n    itemContainerStyle,\n    itemTextStyle,\n    iconStyle,\n    selectedTextProps = {},\n    activeColor = '#F6F7F8',\n    containerStyle,\n    fontFamily,\n    placeholderStyle,\n    iconColor = 'gray',\n    inputSearchStyle,\n    searchPlaceholder,\n    searchPlaceholderTextColor = 'gray',\n    placeholder = 'Select item',\n    search = false,\n    maxHeight = 340,\n    minHeight = 0,\n    maxSelect,\n    disable = false,\n    keyboardAvoiding = true,\n    inside = false,\n    inverted = true,\n    renderItem,\n    renderLeftIcon,\n    renderRightIcon,\n    renderSelectedItem,\n    renderInputSearch,\n    onFocus,\n    onBlur,\n    showsVerticalScrollIndicator = true,\n    dropdownPosition = 'auto',\n    flatListProps,\n    alwaysRenderSelectedItem = false,\n    searchQuery,\n    backgroundColor,\n    onChangeText,\n    confirmSelectItem,\n    confirmUnSelectItem,\n    onConfirmSelectItem,\n    accessibilityLabel,\n    itemAccessibilityLabelField,\n    visibleSelectedItem = true,\n    mode = 'default',\n    excludeItems = [],\n    excludeSearchItems = []\n  } = props;\n  const ref = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const [currentValue, setCurrentValue] = useState([]);\n  const [listData, setListData] = useState(data);\n  const [, setKey] = useState(Math.random());\n  const [position, setPosition] = useState();\n  const [keyboardHeight, setKeyboardHeight] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const {\n    width: W,\n    height: H\n  } = Dimensions.get('window');\n  const styleContainerVertical = useMemo(() => {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  const styleHorizontal = useMemo(() => {\n    return {\n      width: orientation === 'LANDSCAPE' ? W / 2 : '100%',\n      alignSelf: 'center'\n    };\n  }, [W, orientation]);\n  useImperativeHandle(currentRef, () => {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(() => {\n    return eventClose;\n  }, []);\n  const excludeData = useCallback(data => {\n    if (excludeItems.length > 0) {\n      const getData = _differenceWith(data, excludeItems, (obj1, obj2) => _get(obj1, valueField) === _get(obj2, valueField));\n      return getData || [];\n    } else {\n      return data || [];\n    }\n  }, [excludeItems, valueField]);\n  useEffect(() => {\n    if (data && searchText.length === 0) {\n      const filterData = excludeData(data);\n      setListData([...filterData]);\n    }\n    if (searchText) {\n      onSearch(searchText);\n    }\n  }, [data, searchText]);\n  const eventOpen = () => {\n    if (!disable) {\n      _measure();\n      setVisible(true);\n      if (onFocus) {\n        onFocus();\n      }\n      if (searchText.length > 0) {\n        onSearch(searchText);\n      }\n    }\n  };\n  const eventClose = () => {\n    if (!disable) {\n      setVisible(false);\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  };\n  const font = useCallback(() => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n  const getValue = useCallback(() => {\n    setCurrentValue(value ? [...value] : []);\n  }, [value]);\n  const _measure = useCallback(() => {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measureInWindow((pageX, pageY, width, height) => {\n        let isFull = isTablet ? false : mode === 'modal' || orientation === 'LANDSCAPE';\n        if (mode === 'auto') {\n          isFull = false;\n        }\n        const top = isFull ? 20 : height + pageY + 2;\n        const bottom = H - top + height;\n        const left = I18nManager.isRTL ? W - width - pageX : pageX;\n        setPosition({\n          isFull,\n          width: Math.floor(width),\n          top: Math.floor(top + statusBarHeight),\n          bottom: Math.floor(bottom - statusBarHeight),\n          left: Math.floor(left),\n          height: Math.floor(height)\n        });\n      });\n    }\n  }, [H, W, orientation, mode]);\n  const onKeyboardDidShow = useCallback(e => {\n    _measure();\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n  const onKeyboardDidHide = useCallback(() => {\n    setKeyboardHeight(0);\n    _measure();\n  }, [_measure]);\n  useEffect(() => {\n    const susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    const susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return () => {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      }\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      }\n    };\n  }, [onKeyboardDidHide, onKeyboardDidShow]);\n  useEffect(() => {\n    getValue();\n  }, [getValue, value]);\n  const showOrClose = useCallback(() => {\n    if (!disable) {\n      const visibleStatus = !visible;\n      if (keyboardHeight > 0 && !visibleStatus) {\n        return Keyboard.dismiss();\n      }\n      _measure();\n      setVisible(visibleStatus);\n      if (data) {\n        const filterData = excludeData(data);\n        setListData(filterData);\n      }\n      if (visibleStatus) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n      if (searchText.length > 0) {\n        onSearch(searchText);\n      }\n    }\n  }, [disable, keyboardHeight, visible, _measure, data, searchText, onFocus, onBlur]);\n  const onSearch = useCallback(text => {\n    if (text.length > 0) {\n      const defaultFilterFunction = e => {\n        var _get2;\n        const item = (_get2 = _get(e, searchField || labelField)) === null || _get2 === void 0 ? void 0 : _get2.toLowerCase().replace(/\\s/g, '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        const key = text.toLowerCase().replace(/\\s/g, '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n      const propSearchFunction = e => {\n        const labelText = _get(e, searchField || labelField);\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n      const dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      if (excludeSearchItems.length > 0 || excludeItems.length > 0) {\n        const excludeSearchData = _differenceWith(dataSearch, excludeSearchItems, (obj1, obj2) => _get(obj1, valueField) === _get(obj2, valueField));\n        const filterData = excludeData(excludeSearchData);\n        setListData(filterData);\n      } else {\n        setListData(dataSearch);\n      }\n    } else {\n      const filterData = excludeData(data);\n      setListData(filterData);\n    }\n  }, [data, searchQuery, excludeSearchItems, excludeItems, searchField, labelField, valueField, excludeData]);\n  const onSelect = useCallback(item => {\n    const newCurrentValue = [...currentValue];\n    const index = newCurrentValue.findIndex(e => e === _get(item, valueField));\n    if (index > -1) {\n      newCurrentValue.splice(index, 1);\n    } else {\n      if (maxSelect) {\n        if (newCurrentValue.length < maxSelect) {\n          newCurrentValue.push(_get(item, valueField));\n        }\n      } else {\n        newCurrentValue.push(_get(item, valueField));\n      }\n    }\n    if (onConfirmSelectItem) {\n      if (index > -1) {\n        if (confirmUnSelectItem) {\n          onConfirmSelectItem(newCurrentValue);\n        } else {\n          onChange(newCurrentValue);\n        }\n      } else {\n        if (confirmSelectItem) {\n          onConfirmSelectItem(newCurrentValue);\n        } else {\n          onChange(newCurrentValue);\n        }\n      }\n    } else {\n      onChange(newCurrentValue);\n    }\n    setKey(Math.random());\n  }, [confirmSelectItem, confirmUnSelectItem, currentValue, maxSelect, onChange, onConfirmSelectItem, valueField]);\n  const _renderDropdown = () => {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: accessibilityLabel,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(visible), React.createElement(Text, _extends({\n      style: StyleSheet.flatten([styles.textItem, placeholderStyle, font()])\n    }, selectedTextProps), placeholder), renderRightIcon ? renderRightIcon(visible) : React.createElement(Image, {\n      source: ic_down,\n      style: StyleSheet.flatten([styles.icon, {\n        tintColor: iconColor\n      }, iconStyle])\n    })));\n  };\n  const checkSelected = useCallback(item => {\n    const index = currentValue.findIndex(e => e === _get(item, valueField));\n    return index > -1;\n  }, [currentValue, valueField]);\n  const _renderItem = useCallback(_ref => {\n    let {\n      item,\n      index\n    } = _ref;\n    const selected = checkSelected(item);\n    _assign(item, {\n      _index: index\n    });\n    return React.createElement(TouchableHighlight, {\n      key: index.toString(),\n      testID: _get(item, itemTestIDField || labelField),\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: _get(item, itemAccessibilityLabelField || labelField),\n      underlayColor: activeColor,\n      onPress: () => onSelect(item)\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([itemContainerStyle, selected && Object.assign({\n        backgroundColor: activeColor\n      }, styles.wrapItem)])\n    }, renderItem ? renderItem(item, selected) : React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, itemTextStyle, font()])\n    }, _get(item, labelField)))));\n  }, [accessibilityLabel, activeColor, checkSelected, font, itemAccessibilityLabelField, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem]);\n  const renderSearch = useCallback(() => {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(text => {\n          if (onChangeText) {\n            setSearchText(text);\n            onChangeText(text);\n          }\n          onSearch(text);\n        });\n      } else {\n        return React.createElement(CInput, {\n          testID: testID + ' input',\n          accessibilityLabel: accessibilityLabel + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          placeholder: searchPlaceholder,\n          onChangeText: e => {\n            if (onChangeText) {\n              setSearchText(e);\n              onChangeText(e);\n            }\n            onSearch(e);\n          },\n          showIcon: true,\n          placeholderTextColor: searchPlaceholderTextColor,\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle]\n        });\n      }\n    }\n    return null;\n  }, [accessibilityLabel, font, iconColor, iconStyle, inputSearchStyle, onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, searchPlaceholderTextColor, testID]);\n  const _renderList = useCallback(isTopPosition => {\n    const isInverted = !inverted ? false : isTopPosition;\n    const _renderListHelper = () => {\n      return React.createElement(FlatList, _extends({\n        testID: testID + ' flatlist',\n        accessibilityLabel: accessibilityLabel + ' flatlist'\n      }, flatListProps, {\n        keyboardShouldPersistTaps: \"handled\",\n        data: listData,\n        inverted: isTopPosition ? inverted : false,\n        renderItem: _renderItem,\n        keyExtractor: (_item, index) => index.toString(),\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator\n      }));\n    };\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, isInverted && _renderListHelper(), renderSearch(), !isInverted && _renderListHelper()));\n  }, [_renderItem, accessibilityLabel, flatListProps, listData, inverted, renderSearch, showsVerticalScrollIndicator, testID]);\n  const _renderModal = useCallback(() => {\n    if (visible && position) {\n      const {\n        isFull,\n        width,\n        height,\n        top,\n        bottom,\n        left\n      } = position;\n      const onAutoPosition = () => {\n        if (keyboardHeight > 0) {\n          return bottom < keyboardHeight + height;\n        }\n        return bottom < (search ? 150 : 100);\n      };\n      if (width && top && bottom) {\n        const styleVertical = {\n          left: left,\n          maxHeight: maxHeight,\n          minHeight: minHeight\n        };\n        const isTopPosition = dropdownPosition === 'auto' ? onAutoPosition() : dropdownPosition === 'top';\n        let keyboardStyle = {};\n        let extendHeight = !isTopPosition ? top : bottom;\n        if (keyboardAvoiding && keyboardHeight > 0 && isTopPosition && dropdownPosition === 'auto') {\n          extendHeight = keyboardHeight;\n        }\n        return React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: true,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle])\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.flex1, !isTopPosition ? {\n            paddingTop: extendHeight\n          } : {\n            justifyContent: 'flex-end',\n            paddingBottom: extendHeight\n          }, isFull && styles.fullScreen])\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.container, isFull ? styleHorizontal : styleVertical, {\n            width\n          }, containerStyle])\n        }, _renderList(isTopPosition))))));\n      }\n      return null;\n    }\n    return null;\n  }, [visible, search, position, keyboardHeight, maxHeight, minHeight, dropdownPosition, keyboardAvoiding, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderList]);\n  const unSelect = item => {\n    if (!disable) {\n      onSelect(item);\n    }\n  };\n  const _renderItemSelected = inside => {\n    const list = data.filter(e => {\n      const check = value === null || value === void 0 ? void 0 : value.indexOf(_get(e, valueField));\n      if (check !== -1) {\n        return e;\n      }\n    });\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.rowSelectedItem, inside && styles.flex1])\n    }, list.map(e => {\n      if (renderSelectedItem) {\n        return React.createElement(TouchableWithoutFeedback, {\n          testID: _get(e, itemTestIDField || labelField),\n          accessible: !!accessibilityLabel,\n          accessibilityLabel: _get(e, itemAccessibilityLabelField || labelField),\n          key: _get(e, labelField),\n          onPress: () => unSelect(e)\n        }, renderSelectedItem(e, () => {\n          unSelect(e);\n        }));\n      } else {\n        return React.createElement(TouchableWithoutFeedback, {\n          testID: _get(e, itemTestIDField || labelField),\n          accessible: !!accessibilityLabel,\n          accessibilityLabel: _get(e, itemAccessibilityLabelField || labelField),\n          key: _get(e, labelField),\n          onPress: () => unSelect(e)\n        }, React.createElement(View, {\n          style: StyleSheet.flatten([styles.selectedItem, selectedStyle])\n        }, React.createElement(Text, {\n          style: StyleSheet.flatten([styles.selectedTextLeftItem, selectedTextStyle, font()])\n        }, _get(e, labelField)), React.createElement(Text, {\n          style: StyleSheet.flatten([styles.selectedTextItem, selectedTextStyle])\n        }, \"\\u24E7\")));\n      }\n    }));\n  };\n  const _renderInside = () => {\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.mainWrap, style]),\n      ref: ref,\n      onLayout: _measure\n    }, _renderDropdownInside(), _renderModal());\n  };\n  const _renderDropdownInside = () => {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: accessibilityLabel,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdownInside\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), value && (value === null || value === void 0 ? void 0 : value.length) > 0 ? _renderItemSelected(true) : React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, placeholderStyle, font()])\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: StyleSheet.flatten([styles.icon, {\n        tintColor: iconColor\n      }, iconStyle])\n    })));\n  };\n  if (inside) {\n    return _renderInside();\n  }\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: StyleSheet.flatten([styles.mainWrap, style]),\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal()), (!visible || alwaysRenderSelectedItem) && visibleSelectedItem && _renderItemSelected(false));\n});\nexport default MultiSelectComponent;","map":{"version":3,"names":["_assign","_differenceWith","_get","React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","Dimensions","FlatList","I18nManager","Image","Keyboard","Modal","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","StatusBar","useDetectDevice","useDeviceOrientation","CInput","styles","isTablet","ic_down","require","statusBarHeight","currentHeight","MultiSelectComponent","forwardRef","props","currentRef","orientation","testID","itemTestIDField","onChange","data","value","style","labelField","valueField","searchField","selectedStyle","selectedTextStyle","itemContainerStyle","itemTextStyle","iconStyle","selectedTextProps","activeColor","containerStyle","fontFamily","placeholderStyle","iconColor","inputSearchStyle","searchPlaceholder","searchPlaceholderTextColor","placeholder","search","maxHeight","minHeight","maxSelect","disable","keyboardAvoiding","inside","inverted","renderItem","renderLeftIcon","renderRightIcon","renderSelectedItem","renderInputSearch","onFocus","onBlur","showsVerticalScrollIndicator","dropdownPosition","flatListProps","alwaysRenderSelectedItem","searchQuery","backgroundColor","onChangeText","confirmSelectItem","confirmUnSelectItem","onConfirmSelectItem","accessibilityLabel","itemAccessibilityLabelField","visibleSelectedItem","mode","excludeItems","excludeSearchItems","ref","visible","setVisible","currentValue","setCurrentValue","listData","setListData","setKey","Math","random","position","setPosition","keyboardHeight","setKeyboardHeight","searchText","setSearchText","width","W","height","H","get","styleContainerVertical","alignItems","styleHorizontal","alignSelf","open","eventOpen","close","eventClose","excludeData","length","getData","obj1","obj2","filterData","onSearch","_measure","font","getValue","current","measureInWindow","pageX","pageY","isFull","top","bottom","left","isRTL","floor","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","addListener","susbcriptionKeyboardDidHide","remove","showOrClose","visibleStatus","dismiss","text","defaultFilterFunction","_get2","item","toLowerCase","replace","normalize","key","indexOf","propSearchFunction","labelText","dataSearch","filter","excludeSearchData","onSelect","newCurrentValue","index","findIndex","splice","push","_renderDropdown","createElement","accessible","onPress","dropdown","_extends","flatten","textItem","source","icon","tintColor","checkSelected","_renderItem","_ref","selected","_index","toString","underlayColor","Object","assign","wrapItem","renderSearch","input","inputStyle","autoCorrect","showIcon","placeholderTextColor","_renderList","isTopPosition","isInverted","_renderListHelper","keyboardShouldPersistTaps","keyExtractor","_item","flexShrink","_renderModal","onAutoPosition","styleVertical","keyboardStyle","extendHeight","transparent","statusBarTranslucent","supportedOrientations","onRequestClose","flex1","paddingTop","justifyContent","paddingBottom","fullScreen","container","unSelect","_renderItemSelected","list","check","rowSelectedItem","map","selectedItem","selectedTextLeftItem","selectedTextItem","_renderInside","mainWrap","onLayout","_renderDropdownInside","dropdownInside","Fragment"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-element-dropdown/src/components/MultiSelect/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport _assign from 'lodash/assign';\nimport _differenceWith from 'lodash/differenceWith';\nimport _get from 'lodash/get';\nimport React, {\n  JSXElementConstructor,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  I18nManager,\n  Image,\n  Keyboard,\n  KeyboardEvent,\n  Modal,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  StatusBar,\n} from 'react-native';\nimport { useDetectDevice } from '../../toolkits';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport CInput from '../TextInput';\nimport { MultiSelectProps } from './model';\nimport { styles } from './styles';\n\nconst { isTablet } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\nconst statusBarHeight: number = StatusBar.currentHeight || 0;\n\nconst MultiSelectComponent: <T>(\n  props: MultiSelectProps<T>\n) => ReactElement<any, string | JSXElementConstructor<any>> | null =\n  React.forwardRef((props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      data = [],\n      value,\n      style = {},\n      labelField,\n      valueField,\n      searchField,\n      selectedStyle,\n      selectedTextStyle,\n      itemContainerStyle,\n      itemTextStyle,\n      iconStyle,\n      selectedTextProps = {},\n      activeColor = '#F6F7F8',\n      containerStyle,\n      fontFamily,\n      placeholderStyle,\n      iconColor = 'gray',\n      inputSearchStyle,\n      searchPlaceholder,\n      searchPlaceholderTextColor = 'gray',\n      placeholder = 'Select item',\n      search = false,\n      maxHeight = 340,\n      minHeight = 0,\n      maxSelect,\n      disable = false,\n      keyboardAvoiding = true,\n      inside = false,\n      inverted = true,\n      renderItem,\n      renderLeftIcon,\n      renderRightIcon,\n      renderSelectedItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      alwaysRenderSelectedItem = false,\n      searchQuery,\n      backgroundColor,\n      onChangeText,\n      confirmSelectItem,\n      confirmUnSelectItem,\n      onConfirmSelectItem,\n      accessibilityLabel,\n      itemAccessibilityLabelField,\n      visibleSelectedItem = true,\n      mode = 'default',\n      excludeItems = [],\n      excludeSearchItems = [],\n    } = props;\n\n    const ref = useRef<View>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any[]>([]);\n    const [listData, setListData] = useState<any[]>(data);\n    const [, setKey] = useState<number>(Math.random());\n    const [position, setPosition] = useState<any>();\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const [searchText, setSearchText] = useState('');\n\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return {\n        width: orientation === 'LANDSCAPE' ? W / 2 : '100%',\n        alignSelf: 'center',\n      };\n    }, [W, orientation]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      return eventClose;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const excludeData = useCallback(\n      (data: any[]) => {\n        if (excludeItems.length > 0) {\n          const getData = _differenceWith(\n            data,\n            excludeItems,\n            (obj1, obj2) => _get(obj1, valueField) === _get(obj2, valueField)\n          );\n          return getData || [];\n        } else {\n          return data || [];\n        }\n      },\n      [excludeItems, valueField]\n    );\n\n    useEffect(() => {\n      if (data && searchText.length === 0) {\n        const filterData = excludeData(data);\n        setListData([...filterData]);\n      }\n\n      if (searchText) {\n        onSearch(searchText);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, searchText]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        _measure();\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n\n        if (searchText.length > 0) {\n          onSearch(searchText);\n        }\n      }\n    };\n\n    const eventClose = () => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    };\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const getValue = useCallback(() => {\n      setCurrentValue(value ? [...value] : []);\n    }, [value]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measureInWindow((pageX, pageY, width, height) => {\n          let isFull = isTablet\n            ? false\n            : mode === 'modal' || orientation === 'LANDSCAPE';\n\n          if (mode === 'auto') {\n            isFull = false;\n          }\n\n          const top = isFull ? 20 : height + pageY + 2;\n          const bottom = H - top + height;\n          const left = I18nManager.isRTL ? W - width - pageX : pageX;\n\n          setPosition({\n            isFull,\n            width: Math.floor(width),\n            top: Math.floor(top + statusBarHeight),\n            bottom: Math.floor(bottom - statusBarHeight),\n            left: Math.floor(left),\n            height: Math.floor(height),\n          });\n        });\n      }\n    }, [H, W, orientation, mode]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = useCallback(() => {\n      setKeyboardHeight(0);\n      _measure();\n    }, [_measure]);\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        }\n      };\n    }, [onKeyboardDidHide, onKeyboardDidShow]);\n\n    useEffect(() => {\n      getValue();\n    }, [getValue, value]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        const visibleStatus = !visible;\n\n        if (keyboardHeight > 0 && !visibleStatus) {\n          return Keyboard.dismiss();\n        }\n\n        _measure();\n        setVisible(visibleStatus);\n\n        if (data) {\n          const filterData = excludeData(data);\n          setListData(filterData);\n        }\n\n        if (visibleStatus) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n\n        if (searchText.length > 0) {\n          onSearch(searchText);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n      disable,\n      keyboardHeight,\n      visible,\n      _measure,\n      data,\n      searchText,\n      onFocus,\n      onBlur,\n    ]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _get(e, searchField || labelField)\n              ?.toLowerCase()\n              .replace(/\\s/g, '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(/\\s/g, '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _get(e, searchField || labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n\n          if (excludeSearchItems.length > 0 || excludeItems.length > 0) {\n            const excludeSearchData = _differenceWith(\n              dataSearch,\n              excludeSearchItems,\n              (obj1, obj2) => _get(obj1, valueField) === _get(obj2, valueField)\n            );\n\n            const filterData = excludeData(excludeSearchData);\n            setListData(filterData);\n          } else {\n            setListData(dataSearch);\n          }\n        } else {\n          const filterData = excludeData(data);\n          setListData(filterData);\n        }\n      },\n      [\n        data,\n        searchQuery,\n        excludeSearchItems,\n        excludeItems,\n        searchField,\n        labelField,\n        valueField,\n        excludeData,\n      ]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        const newCurrentValue = [...currentValue];\n        const index = newCurrentValue.findIndex(\n          (e) => e === _get(item, valueField)\n        );\n        if (index > -1) {\n          newCurrentValue.splice(index, 1);\n        } else {\n          if (maxSelect) {\n            if (newCurrentValue.length < maxSelect) {\n              newCurrentValue.push(_get(item, valueField));\n            }\n          } else {\n            newCurrentValue.push(_get(item, valueField));\n          }\n        }\n\n        if (onConfirmSelectItem) {\n          if (index > -1) {\n            if (confirmUnSelectItem) {\n              onConfirmSelectItem(newCurrentValue);\n            } else {\n              onChange(newCurrentValue);\n            }\n          } else {\n            if (confirmSelectItem) {\n              onConfirmSelectItem(newCurrentValue);\n            } else {\n              onChange(newCurrentValue);\n            }\n          }\n        } else {\n          onChange(newCurrentValue);\n        }\n\n        setKey(Math.random());\n      },\n      [\n        confirmSelectItem,\n        confirmUnSelectItem,\n        currentValue,\n        maxSelect,\n        onChange,\n        onConfirmSelectItem,\n        valueField,\n      ]\n    );\n\n    const _renderDropdown = () => {\n      return (\n        <TouchableWithoutFeedback\n          testID={testID}\n          accessible={!!accessibilityLabel}\n          accessibilityLabel={accessibilityLabel}\n          onPress={showOrClose}\n        >\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.(visible)}\n            <Text\n              style={StyleSheet.flatten([\n                styles.textItem,\n                placeholderStyle,\n                font(),\n              ])}\n              {...selectedTextProps}\n            >\n              {placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon(visible)\n            ) : (\n              <Image\n                source={ic_down}\n                style={StyleSheet.flatten([\n                  styles.icon,\n                  { tintColor: iconColor },\n                  iconStyle,\n                ])}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const checkSelected = useCallback(\n      (item: any) => {\n        const index = currentValue.findIndex(\n          (e) => e === _get(item, valueField)\n        );\n        return index > -1;\n      },\n      [currentValue, valueField]\n    );\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const selected = checkSelected(item);\n        _assign(item, { _index: index });\n        return (\n          <TouchableHighlight\n            key={index.toString()}\n            testID={_get(item, itemTestIDField || labelField)}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={_get(\n              item,\n              itemAccessibilityLabelField || labelField\n            )}\n            underlayColor={activeColor}\n            onPress={() => onSelect(item)}\n          >\n            <View\n              style={StyleSheet.flatten([\n                itemContainerStyle,\n                selected && {\n                  backgroundColor: activeColor,\n                  ...styles.wrapItem,\n                },\n              ])}\n            >\n              {renderItem ? (\n                renderItem(item, selected)\n              ) : (\n                <View style={styles.item}>\n                  <Text\n                    style={StyleSheet.flatten([\n                      styles.textItem,\n                      itemTextStyle,\n                      font(),\n                    ])}\n                  >\n                    {_get(item, labelField)}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableHighlight>\n        );\n      },\n      [\n        accessibilityLabel,\n        activeColor,\n        checkSelected,\n        font,\n        itemAccessibilityLabelField,\n        itemContainerStyle,\n        itemTestIDField,\n        itemTextStyle,\n        labelField,\n        onSelect,\n        renderItem,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            if (onChangeText) {\n              setSearchText(text);\n              onChangeText(text);\n            }\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              accessibilityLabel={accessibilityLabel + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              autoCorrect={false}\n              placeholder={searchPlaceholder}\n              onChangeText={(e) => {\n                if (onChangeText) {\n                  setSearchText(e);\n                  onChangeText(e);\n                }\n                onSearch(e);\n              }}\n              showIcon\n              placeholderTextColor={searchPlaceholderTextColor}\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      accessibilityLabel,\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onChangeText,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      searchPlaceholderTextColor,\n      testID,\n    ]);\n\n    const _renderList = useCallback(\n      (isTopPosition: boolean) => {\n        const isInverted = !inverted ? false : isTopPosition;\n\n        const _renderListHelper = () => {\n          return (\n            <FlatList\n              testID={testID + ' flatlist'}\n              accessibilityLabel={accessibilityLabel + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              inverted={isTopPosition ? inverted : false}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          );\n        };\n\n        return (\n          <TouchableWithoutFeedback>\n            <View style={styles.flexShrink}>\n              {isInverted && _renderListHelper()}\n              {renderSearch()}\n              {!isInverted && _renderListHelper()}\n            </View>\n          </TouchableWithoutFeedback>\n        );\n      },\n      [\n        _renderItem,\n        accessibilityLabel,\n        flatListProps,\n        listData,\n        inverted,\n        renderSearch,\n        showsVerticalScrollIndicator,\n        testID,\n      ]\n    );\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, width, height, top, bottom, left } = position;\n\n        const onAutoPosition = () => {\n          if (keyboardHeight > 0) {\n            return bottom < keyboardHeight + height;\n          }\n\n          return bottom < (search ? 150 : 100);\n        };\n\n        if (width && top && bottom) {\n          const styleVertical: ViewStyle = {\n            left: left,\n            maxHeight: maxHeight,\n            minHeight: minHeight,\n          };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? onAutoPosition()\n              : dropdownPosition === 'top';\n\n          let keyboardStyle: ViewStyle = {};\n\n          let extendHeight = !isTopPosition ? top : bottom;\n          if (\n            keyboardAvoiding &&\n            keyboardHeight > 0 &&\n            isTopPosition &&\n            dropdownPosition === 'auto'\n          ) {\n            extendHeight = keyboardHeight;\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={StyleSheet.flatten([\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ])}\n                >\n                  <View\n                    style={StyleSheet.flatten([\n                      styles.flex1,\n                      !isTopPosition\n                        ? { paddingTop: extendHeight }\n                        : {\n                            justifyContent: 'flex-end',\n                            paddingBottom: extendHeight,\n                          },\n                      isFull && styles.fullScreen,\n                    ])}\n                  >\n                    <View\n                      style={StyleSheet.flatten([\n                        styles.container,\n                        isFull ? styleHorizontal : styleVertical,\n                        {\n                          width,\n                        },\n                        containerStyle,\n                      ])}\n                    >\n                      {_renderList(isTopPosition)}\n                    </View>\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      search,\n      position,\n      keyboardHeight,\n      maxHeight,\n      minHeight,\n      dropdownPosition,\n      keyboardAvoiding,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderList,\n    ]);\n\n    const unSelect = (item: any) => {\n      if (!disable) {\n        onSelect(item);\n      }\n    };\n\n    const _renderItemSelected = (inside: boolean) => {\n      const list = data.filter((e: any) => {\n        const check = value?.indexOf(_get(e, valueField));\n        if (check !== -1) {\n          return e;\n        }\n      });\n\n      return (\n        <View\n          style={StyleSheet.flatten([\n            styles.rowSelectedItem,\n            inside && styles.flex1,\n          ])}\n        >\n          {list.map((e) => {\n            if (renderSelectedItem) {\n              return (\n                <TouchableWithoutFeedback\n                  testID={_get(e, itemTestIDField || labelField)}\n                  accessible={!!accessibilityLabel}\n                  accessibilityLabel={_get(\n                    e,\n                    itemAccessibilityLabelField || labelField\n                  )}\n                  key={_get(e, labelField)}\n                  onPress={() => unSelect(e)}\n                >\n                  {renderSelectedItem(e, () => {\n                    unSelect(e);\n                  })}\n                </TouchableWithoutFeedback>\n              );\n            } else {\n              return (\n                <TouchableWithoutFeedback\n                  testID={_get(e, itemTestIDField || labelField)}\n                  accessible={!!accessibilityLabel}\n                  accessibilityLabel={_get(\n                    e,\n                    itemAccessibilityLabelField || labelField\n                  )}\n                  key={_get(e, labelField)}\n                  onPress={() => unSelect(e)}\n                >\n                  <View\n                    style={StyleSheet.flatten([\n                      styles.selectedItem,\n                      selectedStyle,\n                    ])}\n                  >\n                    <Text\n                      style={StyleSheet.flatten([\n                        styles.selectedTextLeftItem,\n                        selectedTextStyle,\n                        font(),\n                      ])}\n                    >\n                      {_get(e, labelField)}\n                    </Text>\n                    <Text\n                      style={StyleSheet.flatten([\n                        styles.selectedTextItem,\n                        selectedTextStyle,\n                      ])}\n                    >\n                      ⓧ\n                    </Text>\n                  </View>\n                </TouchableWithoutFeedback>\n              );\n            }\n          })}\n        </View>\n      );\n    };\n\n    const _renderInside = () => {\n      return (\n        <View\n          style={StyleSheet.flatten([styles.mainWrap, style])}\n          ref={ref}\n          onLayout={_measure}\n        >\n          {_renderDropdownInside()}\n          {_renderModal()}\n        </View>\n      );\n    };\n\n    const _renderDropdownInside = () => {\n      return (\n        <TouchableWithoutFeedback\n          testID={testID}\n          accessible={!!accessibilityLabel}\n          accessibilityLabel={accessibilityLabel}\n          onPress={showOrClose}\n        >\n          <View style={styles.dropdownInside}>\n            {renderLeftIcon?.()}\n            {value && value?.length > 0 ? (\n              _renderItemSelected(true)\n            ) : (\n              <Text\n                style={StyleSheet.flatten([\n                  styles.textItem,\n                  placeholderStyle,\n                  font(),\n                ])}\n              >\n                {placeholder}\n              </Text>\n            )}\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={StyleSheet.flatten([\n                  styles.icon,\n                  { tintColor: iconColor },\n                  iconStyle,\n                ])}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    if (inside) {\n      return _renderInside();\n    }\n\n    return (\n      <>\n        <View\n          style={StyleSheet.flatten([styles.mainWrap, style])}\n          ref={ref}\n          onLayout={_measure}\n        >\n          {_renderDropdown()}\n          {_renderModal()}\n        </View>\n        {(!visible || alwaysRenderSelectedItem) &&\n          visibleSelectedItem &&\n          _renderItemSelected(false)}\n      </>\n    );\n  });\n\nexport default MultiSelectComponent;\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}