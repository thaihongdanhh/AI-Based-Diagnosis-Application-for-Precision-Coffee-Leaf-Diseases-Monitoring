{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\nimport Animated, { interpolate, runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from 'react-native-reanimated';\nimport DrawerProgressContext from \"../../utils/DrawerProgressContext\";\nimport Overlay from \"./Overlay\";\nconst SWIPE_DISTANCE_MINIMUM = 5;\nconst DEFAULT_DRAWER_WIDTH = '80%';\nconst _worklet_2769030569286_init_data = {\n  code: \"function reactNavigation_DrawerJs1(value,start,end){return Math.min(Math.max(value,start),end);}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs1\\\",\\\"value\\\",\\\"start\\\",\\\"end\\\",\\\"Math\\\",\\\"min\\\",\\\"max\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AASe,QAAC,CAAAA,yBAAsBA,CAAAC,KAAA,CAAAC,KAAA,CAAAC,GAAA,EAGpC,MAAO,CAAAC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACL,KAAK,CAAEC,KAAK,CAAC,CAAEC,GAAG,CAAC,CAC9C\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst minmax = function () {\n  const _e = [new global.Error(), 1, -27];\n  const reactNavigation_DrawerJs1 = function (value, start, end) {\n    return Math.min(Math.max(value, start), end);\n  };\n  reactNavigation_DrawerJs1.__closure = {};\n  reactNavigation_DrawerJs1.__workletHash = 2769030569286;\n  reactNavigation_DrawerJs1.__initData = _worklet_2769030569286_init_data;\n  reactNavigation_DrawerJs1.__stackDetails = _e;\n  return reactNavigation_DrawerJs1;\n}();\nconst _worklet_5445475024156_init_data = {\n  code: \"function reactNavigation_DrawerJs2(open){const{drawerPosition,drawerWidth}=this.__closure;if(drawerPosition==='left'){return open?0:-drawerWidth;}return open?0:drawerWidth;}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs2\\\",\\\"open\\\",\\\"drawerPosition\\\",\\\"drawerWidth\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AAoDkD,SAAAA,yBAAQA,CAAAC,IAAA,QAAAC,cAAA,CAAAC,WAAA,OAAAC,SAAA,CAGtD,GAAIF,cAAc,GAAK,MAAM,CAAE,CAC7B,MAAO,CAAAD,IAAI,CAAG,CAAC,CAAG,CAACE,WAAW,CAChC,CACA,MAAO,CAAAF,IAAI,CAAG,CAAC,CAAGE,WAAW,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_1027549555642_init_data = {\n  code: \"function reactNavigation_DrawerJs3(_ref2){const{getDrawerTranslationX,touchStartX,touchX,translationX,withSpring,runOnJS,onOpen,onClose}=this.__closure;let{open:open,isUserInitiated:isUserInitiated,velocity:velocity}=_ref2;const translateX=getDrawerTranslationX(open);touchStartX.value=0;touchX.value=0;translationX.value=withSpring(translateX,{velocity:velocity,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01});if(!isUserInitiated){return;}if(open){runOnJS(onOpen)();}else{runOnJS(onClose)();}}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs3\\\",\\\"_ref2\\\",\\\"getDrawerTranslationX\\\",\\\"touchStartX\\\",\\\"touchX\\\",\\\"translationX\\\",\\\"withSpring\\\",\\\"runOnJS\\\",\\\"onOpen\\\",\\\"onClose\\\",\\\"__closure\\\",\\\"open\\\",\\\"isUserInitiated\\\",\\\"velocity\\\",\\\"translateX\\\",\\\"value\\\",\\\"stiffness\\\",\\\"damping\\\",\\\"mass\\\",\\\"overshootClamping\\\",\\\"restDisplacementThreshold\\\",\\\"restSpeedThreshold\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AA6GyC,SAAAA,yBAASA,CAAAC,KAAA,QAAAC,qBAAA,CAAAC,WAAA,CAAAC,MAAA,CAAAC,YAAA,CAAAC,UAAA,CAAAC,OAAA,CAAAC,MAAA,CAAAC,OAAA,OAAAC,SAAA,CAG9C,GAAI,CACFC,IAAI,CAAJA,IAAI,CACJC,eAAe,CAAfA,eAAe,CACfC,QAAA,CAAAA,QACF,CAAC,CAAGZ,KAAK,CACT,KAAM,CAAAa,UAAU,CAAGZ,qBAAqB,CAACS,IAAI,CAAC,CAC9CR,WAAW,CAACY,KAAK,CAAG,CAAC,CACrBX,MAAM,CAACW,KAAK,CAAG,CAAC,CAChBV,YAAY,CAACU,KAAK,CAAGT,UAAU,CAACQ,UAAU,CAAE,CAC1CD,QAAQ,CAARA,QAAQ,CACRG,SAAS,CAAE,IAAI,CACfC,OAAO,CAAE,GAAG,CACZC,IAAI,CAAE,CAAC,CACPC,iBAAiB,CAAE,IAAI,CACvBC,yBAAyB,CAAE,IAAI,CAC/BC,kBAAkB,CAAE,IACtB,CAAC,CAAC,CACF,GAAI,CAACT,eAAe,CAAE,CACpB,OACF,CACA,GAAID,IAAI,CAAE,CACRJ,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CACnB,CAAC,IAAM,CACLD,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CACpB,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_16197584431784_init_data = {\n  code: \"function reactNavigation_DrawerJs4(event,ctx){const{translationX,gestureState,touchStartX}=this.__closure;ctx.hasCalledOnStart=false;ctx.startX=translationX.value;gestureState.value=event.state;touchStartX.value=event.x;}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs4\\\",\\\"event\\\",\\\"ctx\\\",\\\"translationX\\\",\\\"gestureState\\\",\\\"touchStartX\\\",\\\"__closure\\\",\\\"hasCalledOnStart\\\",\\\"startX\\\",\\\"value\\\",\\\"state\\\",\\\"x\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AA+Ia,QAAC,CAAAA,yBAAeA,CAAAC,KAAA,CAAAC,GAAA,QAAAC,YAAA,CAAAC,YAAA,CAAAC,WAAA,OAAAC,SAAA,CACvBJ,GAAG,CAACK,gBAAgB,CAAG,KAAK,CAC5BL,GAAG,CAACM,MAAM,CAAGL,YAAY,CAACM,KAAK,CAC/BL,YAAY,CAACK,KAAK,CAAGR,KAAK,CAACS,KAAK,CAChCL,WAAW,CAACI,KAAK,CAAGR,KAAK,CAACU,CAAC,CAC7B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_5533027387283_init_data = {\n  code: \"function reactNavigation_DrawerJs5(event,ctx){const{touchX,translationX,gestureState,runOnJS,onGestureStart}=this.__closure;touchX.value=event.x;translationX.value=ctx.startX+event.translationX;gestureState.value=event.state;if(!ctx.hasCalledOnStart){ctx.hasCalledOnStart=true;runOnJS(onGestureStart)();}}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs5\\\",\\\"event\\\",\\\"ctx\\\",\\\"touchX\\\",\\\"translationX\\\",\\\"gestureState\\\",\\\"runOnJS\\\",\\\"onGestureStart\\\",\\\"__closure\\\",\\\"value\\\",\\\"x\\\",\\\"startX\\\",\\\"state\\\",\\\"hasCalledOnStart\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AAqJc,QAAC,CAAAA,yBAAeA,CAAAC,KAAA,CAAAC,GAAA,QAAAC,MAAA,CAAAC,YAAA,CAAAC,YAAA,CAAAC,OAAA,CAAAC,cAAA,OAAAC,SAAA,CACxBL,MAAM,CAACM,KAAK,CAAGR,KAAK,CAACS,CAAC,CACtBN,YAAY,CAACK,KAAK,CAAGP,GAAG,CAACS,MAAM,CAAGV,KAAK,CAACG,YAAY,CACpDC,YAAY,CAACI,KAAK,CAAGR,KAAK,CAACW,KAAK,CAKhC,GAAI,CAACV,GAAG,CAACW,gBAAgB,CAAE,CACzBX,GAAG,CAACW,gBAAgB,CAAG,IAAI,CAC3BP,OAAO,CAACC,cAAc,CAAC,CAAC,CAAC,CAC3B,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_9689627174109_init_data = {\n  code: \"function reactNavigation_DrawerJs6(event){const{gestureState,SWIPE_DISTANCE_MINIMUM,swipeVelocityThreshold,swipeDistanceThreshold,drawerPosition,open,toggleDrawer}=this.__closure;gestureState.value=event.state;const nextOpen=Math.abs(event.translationX)>SWIPE_DISTANCE_MINIMUM&&Math.abs(event.translationX)>swipeVelocityThreshold||Math.abs(event.translationX)>swipeDistanceThreshold?drawerPosition==='left'?(event.velocityX===0?event.translationX:event.velocityX)>0:(event.velocityX===0?event.translationX:event.velocityX)<0:open;toggleDrawer({open:nextOpen,isUserInitiated:true,velocity:event.velocityX});}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs6\\\",\\\"event\\\",\\\"gestureState\\\",\\\"SWIPE_DISTANCE_MINIMUM\\\",\\\"swipeVelocityThreshold\\\",\\\"swipeDistanceThreshold\\\",\\\"drawerPosition\\\",\\\"open\\\",\\\"toggleDrawer\\\",\\\"__closure\\\",\\\"value\\\",\\\"state\\\",\\\"nextOpen\\\",\\\"Math\\\",\\\"abs\\\",\\\"translationX\\\",\\\"velocityX\\\",\\\"isUserInitiated\\\",\\\"velocity\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AAkKW,SAAAA,yBAASA,CAAAC,KAAA,QAAAC,YAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,OAAAC,SAAA,CACdP,YAAY,CAACQ,KAAK,CAAGT,KAAK,CAACU,KAAK,CAChC,KAAM,CAAAC,QAAQ,CAAGC,IAAI,CAACC,GAAG,CAACb,KAAK,CAACc,YAAY,CAAC,CAAGZ,sBAAsB,EAAIU,IAAI,CAACC,GAAG,CAACb,KAAK,CAACc,YAAY,CAAC,CAAGX,sBAAsB,EAAIS,IAAI,CAACC,GAAG,CAACb,KAAK,CAACc,YAAY,CAAC,CAAGV,sBAAsB,CAAGC,cAAc,GAAK,MAAM,CAEpN,CAACL,KAAK,CAACe,SAAS,GAAK,CAAC,CAAGf,KAAK,CAACc,YAAY,CAAGd,KAAK,CAACe,SAAS,EAAI,CAAC,CAElE,CAACf,KAAK,CAACe,SAAS,GAAK,CAAC,CAAGf,KAAK,CAACc,YAAY,CAAGd,KAAK,CAACe,SAAS,EAAI,CAAC,CAAGT,IAAI,CACzEC,YAAY,CAAC,CACXD,IAAI,CAAEK,QAAQ,CACdK,eAAe,CAAE,IAAI,CACrBC,QAAQ,CAAEjB,KAAK,CAACe,SAClB,CAAC,CAAC,CACJ\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_13608440897220_init_data = {\n  code: \"function reactNavigation_DrawerJs7(){const{runOnJS,onGestureFinish}=this.__closure;runOnJS(onGestureFinish)();}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs7\\\",\\\"runOnJS\\\",\\\"onGestureFinish\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AA+Kc,SAAAA,yBAAMA,CAAA,QAAAC,OAAA,CAAAC,eAAA,OAAAC,SAAA,CACdF,OAAO,CAACC,eAAe,CAAC,CAAC,CAAC,CAC5B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_17035070311485_init_data = {\n  code: \"function reactNavigation_DrawerJs8(){const{drawerType,gestureState,GestureState,minmax,drawerPosition,touchStartX,drawerWidth,dimensions,translationX}=this.__closure;const touchDistance=drawerType==='front'&&gestureState.value===GestureState.ACTIVE?minmax(drawerPosition==='left'?touchStartX.value-drawerWidth:dimensions.width-drawerWidth-touchStartX.value,0,dimensions.width):0;const translateX=drawerPosition==='left'?minmax(translationX.value+touchDistance,-drawerWidth,0):minmax(translationX.value-touchDistance,0,drawerWidth);return translateX;}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs8\\\",\\\"drawerType\\\",\\\"gestureState\\\",\\\"GestureState\\\",\\\"minmax\\\",\\\"drawerPosition\\\",\\\"touchStartX\\\",\\\"drawerWidth\\\",\\\"dimensions\\\",\\\"translationX\\\",\\\"__closure\\\",\\\"touchDistance\\\",\\\"value\\\",\\\"ACTIVE\\\",\\\"width\\\",\\\"translateX\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AAmLqC,SAAAA,yBAAMA,CAAA,QAAAC,UAAA,CAAAC,YAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAC,cAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,UAAA,CAAAC,YAAA,OAAAC,SAAA,CA0BvC,KAAM,CAAAC,aAAa,CAAGV,UAAU,GAAK,OAAO,EAAIC,YAAY,CAACU,KAAK,GAAKT,YAAY,CAACU,MAAM,CAAGT,MAAM,CAACC,cAAc,GAAK,MAAM,CAAGC,WAAW,CAACM,KAAK,CAAGL,WAAW,CAAGC,UAAU,CAACM,KAAK,CAAGP,WAAW,CAAGD,WAAW,CAACM,KAAK,CAAE,CAAC,CAAEJ,UAAU,CAACM,KAAK,CAAC,CAAG,CAAC,CAC9O,KAAM,CAAAC,UAAU,CAAGV,cAAc,GAAK,MAAM,CAAGD,MAAM,CAACK,YAAY,CAACG,KAAK,CAAGD,aAAa,CAAE,CAACJ,WAAW,CAAE,CAAC,CAAC,CAAGH,MAAM,CAACK,YAAY,CAACG,KAAK,CAAGD,aAAa,CAAE,CAAC,CAAEJ,WAAW,CAAC,CACvK,MAAO,CAAAQ,UAAU,CACnB\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_4199598167100_init_data = {\n  code: \"function reactNavigation_DrawerJs9(){const{dimensions,drawerWidth,drawerType,translateX,drawerPosition,isRTL}=this.__closure;const distanceFromEdge=dimensions.width-drawerWidth;return{transform:drawerType==='permanent'?[]:[{translateX:(drawerType==='back'?0:translateX.value)+(drawerPosition==='left'?isRTL?-distanceFromEdge:0:isRTL?0:distanceFromEdge)}]};}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs9\\\",\\\"dimensions\\\",\\\"drawerWidth\\\",\\\"drawerType\\\",\\\"translateX\\\",\\\"drawerPosition\\\",\\\"isRTL\\\",\\\"__closure\\\",\\\"distanceFromEdge\\\",\\\"width\\\",\\\"transform\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AAkN+C,SAAAA,yBAAMA,CAAA,QAAAC,UAAA,CAAAC,WAAA,CAAAC,UAAA,CAAAC,UAAA,CAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA,CACjD,KAAM,CAAAC,gBAAgB,CAAGP,UAAU,CAACQ,KAAK,CAAGP,WAAW,CACvD,MAAO,CACLQ,SAAS,CAAEP,UAAU,GAAK,WAAW,CAGrC,EAAE,CAAG,CAAC,CACJC,UAAU,CAEV,CAACD,UAAU,GAAK,MAAM,CAAG,CAAC,CAAGC,UAAU,CAACO,KAAK,GAAKN,cAAc,GAAK,MAAM,CAAGC,KAAK,CAAG,CAACE,gBAAgB,CAAG,CAAC,CAAGF,KAAK,CAAG,CAAC,CAAGE,gBAAgB,CAC5I,CAAC,CACH,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_2918097545253_init_data = {\n  code: \"function reactNavigation_DrawerJs10(){const{drawerType,translateX,drawerWidth,drawerPosition}=this.__closure;return{transform:drawerType==='permanent'?[]:[{translateX:drawerType==='front'?0:translateX.value+drawerWidth*(drawerPosition==='left'?1:-1)}]};}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs10\\\",\\\"drawerType\\\",\\\"translateX\\\",\\\"drawerWidth\\\",\\\"drawerPosition\\\",\\\"__closure\\\",\\\"transform\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AA+NgD,SAAAA,0BAAMA,CAAA,QAAAC,UAAA,CAAAC,UAAA,CAAAC,WAAA,CAAAC,cAAA,OAAAC,SAAA,CAClD,MAAO,CACLC,SAAS,CAAEL,UAAU,GAAK,WAAW,CAGrC,EAAE,CAAG,CAAC,CACJC,UAAU,CAEVD,UAAU,GAAK,OAAO,CAAG,CAAC,CAAGC,UAAU,CAACK,KAAK,CAAGJ,WAAW,EAAIC,cAAc,GAAK,MAAM,CAAG,CAAC,CAAG,CAAC,CAAC,CACnG,CAAC,CACH,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nconst _worklet_9956515678806_init_data = {\n  code: \"function reactNavigation_DrawerJs11(){const{drawerType,interpolate,translateX,getDrawerTranslationX}=this.__closure;return drawerType==='permanent'?1:interpolate(translateX.value,[getDrawerTranslationX(false),getDrawerTranslationX(true)],[0,1]);}\",\n  location: \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNavigation_DrawerJs11\\\",\\\"drawerType\\\",\\\"interpolate\\\",\\\"translateX\\\",\\\"getDrawerTranslationX\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/lib/module/views/modern/Drawer.js\\\"],\\\"mappings\\\":\\\"AA2OmC,SAAAA,0BAAMA,CAAA,QAAAC,UAAA,CAAAC,WAAA,CAAAC,UAAA,CAAAC,qBAAA,OAAAC,SAAA,CACrC,MAAO,CAAAJ,UAAU,GAAK,WAAW,CAAG,CAAC,CAAGC,WAAW,CAACC,UAAU,CAACG,KAAK,CAAE,CAACF,qBAAqB,CAAC,KAAK,CAAC,CAAEA,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC5I\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.1\"\n};\nexport default function Drawer(_ref) {\n  let {\n    dimensions,\n    drawerPosition,\n    drawerStyle,\n    drawerType,\n    gestureHandlerProps,\n    hideStatusBarOnOpen,\n    keyboardDismissMode,\n    onClose,\n    onOpen,\n    open,\n    overlayStyle,\n    renderDrawerContent,\n    renderSceneContent,\n    statusBarAnimation,\n    swipeDistanceThreshold,\n    swipeEdgeWidth,\n    swipeEnabled,\n    swipeVelocityThreshold,\n    overlayAccessibilityLabel\n  } = _ref;\n  const getDrawerWidth = () => {\n    const {\n      width = DEFAULT_DRAWER_WIDTH\n    } = StyleSheet.flatten(drawerStyle) || {};\n    if (typeof width === 'string' && width.endsWith('%')) {\n      const percentage = Number(width.replace(/%$/, ''));\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n    return typeof width === 'number' ? width : 0;\n  };\n  const drawerWidth = getDrawerWidth();\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n  const getDrawerTranslationX = React.useCallback(function () {\n    const _e = [new global.Error(), -3, -27];\n    const reactNavigation_DrawerJs2 = function (open) {\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n      return open ? 0 : drawerWidth;\n    };\n    reactNavigation_DrawerJs2.__closure = {\n      drawerPosition,\n      drawerWidth\n    };\n    reactNavigation_DrawerJs2.__workletHash = 5445475024156;\n    reactNavigation_DrawerJs2.__initData = _worklet_5445475024156_init_data;\n    reactNavigation_DrawerJs2.__stackDetails = _e;\n    return reactNavigation_DrawerJs2;\n  }(), [drawerPosition, drawerWidth]);\n  const hideStatusBar = React.useCallback(hide => {\n    if (hideStatusBarOnOpen) {\n      StatusBar.setHidden(hide, statusBarAnimation);\n    }\n  }, [hideStatusBarOnOpen, statusBarAnimation]);\n  React.useEffect(() => {\n    hideStatusBar(isOpen);\n    return () => hideStatusBar(false);\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n  const interactionHandleRef = React.useRef(null);\n  const startInteraction = () => {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n  const endInteraction = () => {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n  const hideKeyboard = () => {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n  const onGestureStart = () => {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n  const onGestureFinish = () => {\n    endInteraction();\n  };\n  const hitSlop = isRight ? {\n    right: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  } : {\n    left: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  };\n  const touchStartX = useSharedValue(0);\n  const touchX = useSharedValue(0);\n  const translationX = useSharedValue(getDrawerTranslationX(open));\n  const gestureState = useSharedValue(GestureState.UNDETERMINED);\n  const toggleDrawer = React.useCallback(function () {\n    const _e = [new global.Error(), -9, -27];\n    const reactNavigation_DrawerJs3 = function (_ref2) {\n      let {\n        open,\n        isUserInitiated,\n        velocity\n      } = _ref2;\n      const translateX = getDrawerTranslationX(open);\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01\n      });\n      if (!isUserInitiated) {\n        return;\n      }\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    };\n    reactNavigation_DrawerJs3.__closure = {\n      getDrawerTranslationX,\n      touchStartX,\n      touchX,\n      translationX,\n      withSpring,\n      runOnJS,\n      onOpen,\n      onClose\n    };\n    reactNavigation_DrawerJs3.__workletHash = 1027549555642;\n    reactNavigation_DrawerJs3.__initData = _worklet_1027549555642_init_data;\n    reactNavigation_DrawerJs3.__stackDetails = _e;\n    return reactNavigation_DrawerJs3;\n  }(), [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n  React.useEffect(() => toggleDrawer({\n    open,\n    isUserInitiated: false\n  }), [open, toggleDrawer]);\n  const onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      const _e = [new global.Error(), -4, -27];\n      const reactNavigation_DrawerJs4 = function (event, ctx) {\n        ctx.hasCalledOnStart = false;\n        ctx.startX = translationX.value;\n        gestureState.value = event.state;\n        touchStartX.value = event.x;\n      };\n      reactNavigation_DrawerJs4.__closure = {\n        translationX,\n        gestureState,\n        touchStartX\n      };\n      reactNavigation_DrawerJs4.__workletHash = 16197584431784;\n      reactNavigation_DrawerJs4.__initData = _worklet_16197584431784_init_data;\n      reactNavigation_DrawerJs4.__stackDetails = _e;\n      return reactNavigation_DrawerJs4;\n    }(),\n    onActive: function () {\n      const _e = [new global.Error(), -6, -27];\n      const reactNavigation_DrawerJs5 = function (event, ctx) {\n        touchX.value = event.x;\n        translationX.value = ctx.startX + event.translationX;\n        gestureState.value = event.state;\n        if (!ctx.hasCalledOnStart) {\n          ctx.hasCalledOnStart = true;\n          runOnJS(onGestureStart)();\n        }\n      };\n      reactNavigation_DrawerJs5.__closure = {\n        touchX,\n        translationX,\n        gestureState,\n        runOnJS,\n        onGestureStart\n      };\n      reactNavigation_DrawerJs5.__workletHash = 5533027387283;\n      reactNavigation_DrawerJs5.__initData = _worklet_5533027387283_init_data;\n      reactNavigation_DrawerJs5.__stackDetails = _e;\n      return reactNavigation_DrawerJs5;\n    }(),\n    onEnd: function () {\n      const _e = [new global.Error(), -8, -27];\n      const reactNavigation_DrawerJs6 = function (event) {\n        gestureState.value = event.state;\n        const nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ? (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 : (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n        toggleDrawer({\n          open: nextOpen,\n          isUserInitiated: true,\n          velocity: event.velocityX\n        });\n      };\n      reactNavigation_DrawerJs6.__closure = {\n        gestureState,\n        SWIPE_DISTANCE_MINIMUM,\n        swipeVelocityThreshold,\n        swipeDistanceThreshold,\n        drawerPosition,\n        open,\n        toggleDrawer\n      };\n      reactNavigation_DrawerJs6.__workletHash = 9689627174109;\n      reactNavigation_DrawerJs6.__initData = _worklet_9689627174109_init_data;\n      reactNavigation_DrawerJs6.__stackDetails = _e;\n      return reactNavigation_DrawerJs6;\n    }(),\n    onFinish: function () {\n      const _e = [new global.Error(), -3, -27];\n      const reactNavigation_DrawerJs7 = function () {\n        runOnJS(onGestureFinish)();\n      };\n      reactNavigation_DrawerJs7.__closure = {\n        runOnJS,\n        onGestureFinish\n      };\n      reactNavigation_DrawerJs7.__workletHash = 13608440897220;\n      reactNavigation_DrawerJs7.__initData = _worklet_13608440897220_init_data;\n      reactNavigation_DrawerJs7.__stackDetails = _e;\n      return reactNavigation_DrawerJs7;\n    }()\n  });\n  const translateX = useDerivedValue(function () {\n    const _e = [new global.Error(), -10, -27];\n    const reactNavigation_DrawerJs8 = function () {\n      const touchDistance = drawerType === 'front' && gestureState.value === GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n      const translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n      return translateX;\n    };\n    reactNavigation_DrawerJs8.__closure = {\n      drawerType,\n      gestureState,\n      GestureState,\n      minmax,\n      drawerPosition,\n      touchStartX,\n      drawerWidth,\n      dimensions,\n      translationX\n    };\n    reactNavigation_DrawerJs8.__workletHash = 17035070311485;\n    reactNavigation_DrawerJs8.__initData = _worklet_17035070311485_init_data;\n    reactNavigation_DrawerJs8.__stackDetails = _e;\n    return reactNavigation_DrawerJs8;\n  }());\n  const isRTL = I18nManager.getConstants().isRTL;\n  const drawerAnimatedStyle = useAnimatedStyle(function () {\n    const _e = [new global.Error(), -7, -27];\n    const reactNavigation_DrawerJs9 = function () {\n      const distanceFromEdge = dimensions.width - drawerWidth;\n      return {\n        transform: drawerType === 'permanent' ? [] : [{\n          translateX: (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n        }]\n      };\n    };\n    reactNavigation_DrawerJs9.__closure = {\n      dimensions,\n      drawerWidth,\n      drawerType,\n      translateX,\n      drawerPosition,\n      isRTL\n    };\n    reactNavigation_DrawerJs9.__workletHash = 4199598167100;\n    reactNavigation_DrawerJs9.__initData = _worklet_4199598167100_init_data;\n    reactNavigation_DrawerJs9.__stackDetails = _e;\n    return reactNavigation_DrawerJs9;\n  }());\n  const contentAnimatedStyle = useAnimatedStyle(function () {\n    const _e = [new global.Error(), -5, -27];\n    const reactNavigation_DrawerJs10 = function () {\n      return {\n        transform: drawerType === 'permanent' ? [] : [{\n          translateX: drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n        }]\n      };\n    };\n    reactNavigation_DrawerJs10.__closure = {\n      drawerType,\n      translateX,\n      drawerWidth,\n      drawerPosition\n    };\n    reactNavigation_DrawerJs10.__workletHash = 2918097545253;\n    reactNavigation_DrawerJs10.__initData = _worklet_2918097545253_init_data;\n    reactNavigation_DrawerJs10.__stackDetails = _e;\n    return reactNavigation_DrawerJs10;\n  }());\n  const progress = useDerivedValue(function () {\n    const _e = [new global.Error(), -5, -27];\n    const reactNavigation_DrawerJs11 = function () {\n      return drawerType === 'permanent' ? 1 : interpolate(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n    };\n    reactNavigation_DrawerJs11.__closure = {\n      drawerType,\n      interpolate,\n      translateX,\n      getDrawerTranslationX\n    };\n    reactNavigation_DrawerJs11.__workletHash = 9956515678806;\n    reactNavigation_DrawerJs11.__initData = _worklet_9956515678806_init_data;\n    reactNavigation_DrawerJs11.__stackDetails = _e;\n    return reactNavigation_DrawerJs11;\n  }());\n  return React.createElement(DrawerProgressContext.Provider, {\n    value: progress\n  }, React.createElement(PanGestureHandler, _extends({\n    activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    hitSlop: hitSlop,\n    enabled: drawerType !== 'permanent' && swipeEnabled,\n    onGestureEvent: onGestureEvent\n  }, gestureHandlerProps), React.createElement(Animated.View, {\n    style: [styles.main, {\n      flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n    }]\n  }, React.createElement(Animated.View, {\n    style: [styles.content, contentAnimatedStyle]\n  }, React.createElement(View, {\n    accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n    importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n    style: styles.content\n  }, renderSceneContent()), drawerType !== 'permanent' ? React.createElement(Overlay, {\n    progress: progress,\n    onPress: () => toggleDrawer({\n      open: false,\n      isUserInitiated: true\n    }),\n    style: overlayStyle,\n    accessibilityLabel: overlayAccessibilityLabel\n  }) : null), React.createElement(Animated.View, {\n    removeClippedSubviews: Platform.OS !== 'ios',\n    style: [styles.container, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 0\n    }, drawerAnimatedStyle, drawerStyle]\n  }, renderDrawerContent()))));\n}\nconst styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: Object.assign({\n    flex: 1\n  }, Platform.select({\n    web: null,\n    default: {\n      overflow: 'hidden'\n    }\n  }))\n});","map":{"version":3,"names":["React","I18nManager","InteractionManager","Keyboard","Platform","StatusBar","StyleSheet","View","PanGestureHandler","State","GestureState","Animated","interpolate","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","DrawerProgressContext","Overlay","SWIPE_DISTANCE_MINIMUM","DEFAULT_DRAWER_WIDTH","_worklet_2769030569286_init_data","code","location","sourceMap","version","minmax","_e","global","Error","reactNavigation_DrawerJs1","value","start","end","Math","min","max","__closure","__workletHash","__initData","__stackDetails","_worklet_5445475024156_init_data","_worklet_1027549555642_init_data","_worklet_16197584431784_init_data","_worklet_5533027387283_init_data","_worklet_9689627174109_init_data","_worklet_13608440897220_init_data","_worklet_17035070311485_init_data","_worklet_4199598167100_init_data","_worklet_2918097545253_init_data","_worklet_9956515678806_init_data","Drawer","_ref","dimensions","drawerPosition","drawerStyle","drawerType","gestureHandlerProps","hideStatusBarOnOpen","keyboardDismissMode","onClose","onOpen","open","overlayStyle","renderDrawerContent","renderSceneContent","statusBarAnimation","swipeDistanceThreshold","swipeEdgeWidth","swipeEnabled","swipeVelocityThreshold","overlayAccessibilityLabel","getDrawerWidth","width","flatten","endsWith","percentage","Number","replace","isFinite","drawerWidth","isOpen","isRight","getDrawerTranslationX","useCallback","reactNavigation_DrawerJs2","hideStatusBar","hide","setHidden","useEffect","interactionHandleRef","useRef","startInteraction","current","createInteractionHandle","endInteraction","clearInteractionHandle","hideKeyboard","dismiss","onGestureStart","onGestureFinish","hitSlop","right","undefined","left","touchStartX","touchX","translationX","gestureState","UNDETERMINED","toggleDrawer","reactNavigation_DrawerJs3","_ref2","isUserInitiated","velocity","translateX","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","onGestureEvent","onStart","reactNavigation_DrawerJs4","event","ctx","hasCalledOnStart","startX","state","x","onActive","reactNavigation_DrawerJs5","onEnd","reactNavigation_DrawerJs6","nextOpen","abs","velocityX","onFinish","reactNavigation_DrawerJs7","reactNavigation_DrawerJs8","touchDistance","ACTIVE","isRTL","getConstants","drawerAnimatedStyle","reactNavigation_DrawerJs9","distanceFromEdge","transform","contentAnimatedStyle","reactNavigation_DrawerJs10","progress","reactNavigation_DrawerJs11","createElement","Provider","_extends","activeOffsetX","failOffsetY","enabled","style","styles","main","flexDirection","content","accessibilityElementsHidden","importantForAccessibility","onPress","accessibilityLabel","removeClippedSubviews","OS","container","position","zIndex","create","top","bottom","maxWidth","flex","Object","assign","select","web","default","overflow"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/@react-navigation/drawer/src/views/modern/Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  InteractionManager,\n  Keyboard,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n  State as GestureState,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nimport type { DrawerProps } from '../../types';\nimport DrawerProgressContext from '../../utils/DrawerProgressContext';\nimport Overlay from './Overlay';\n\nconst SWIPE_DISTANCE_MINIMUM = 5;\nconst DEFAULT_DRAWER_WIDTH = '80%';\n\ntype ToggleOptions = {\n  open: boolean;\n  isUserInitiated: boolean;\n  velocity?: number;\n};\n\nconst minmax = (value: number, start: number, end: number) => {\n  'worklet';\n\n  return Math.min(Math.max(value, start), end);\n};\n\nexport default function Drawer({\n  dimensions,\n  drawerPosition,\n  drawerStyle,\n  drawerType,\n  gestureHandlerProps,\n  hideStatusBarOnOpen,\n  keyboardDismissMode,\n  onClose,\n  onOpen,\n  open,\n  overlayStyle,\n  renderDrawerContent,\n  renderSceneContent,\n  statusBarAnimation,\n  swipeDistanceThreshold,\n  swipeEdgeWidth,\n  swipeEnabled,\n  swipeVelocityThreshold,\n  overlayAccessibilityLabel,\n}: DrawerProps) {\n  const getDrawerWidth = (): number => {\n    const { width = DEFAULT_DRAWER_WIDTH } =\n      StyleSheet.flatten(drawerStyle) || {};\n\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n\n    return typeof width === 'number' ? width : 0;\n  };\n\n  const drawerWidth = getDrawerWidth();\n\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n\n  const getDrawerTranslationX = React.useCallback(\n    (open: boolean) => {\n      'worklet';\n\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n\n      return open ? 0 : drawerWidth;\n    },\n    [drawerPosition, drawerWidth]\n  );\n\n  const hideStatusBar = React.useCallback(\n    (hide: boolean) => {\n      if (hideStatusBarOnOpen) {\n        StatusBar.setHidden(hide, statusBarAnimation);\n      }\n    },\n    [hideStatusBarOnOpen, statusBarAnimation]\n  );\n\n  React.useEffect(() => {\n    hideStatusBar(isOpen);\n\n    return () => hideStatusBar(false);\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n\n  const interactionHandleRef = React.useRef<number | null>(null);\n\n  const startInteraction = () => {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n\n  const endInteraction = () => {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n\n  const hideKeyboard = () => {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n\n  const onGestureStart = () => {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n\n  const onGestureFinish = () => {\n    endInteraction();\n  };\n\n  // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n  // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n  const hitSlop = isRight\n    ? // Extend hitSlop to the side of the screen when drawer is closed\n      // This lets the user drag the drawer from the side of the screen\n      { right: 0, width: isOpen ? undefined : swipeEdgeWidth }\n    : { left: 0, width: isOpen ? undefined : swipeEdgeWidth };\n\n  const touchStartX = useSharedValue(0);\n  const touchX = useSharedValue(0);\n  const translationX = useSharedValue(getDrawerTranslationX(open));\n  const gestureState = useSharedValue<GestureState>(GestureState.UNDETERMINED);\n\n  const toggleDrawer = React.useCallback(\n    ({ open, isUserInitiated, velocity }: ToggleOptions) => {\n      'worklet';\n\n      const translateX = getDrawerTranslationX(open);\n\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n      });\n\n      if (!isUserInitiated) {\n        return;\n      }\n\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    },\n    [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]\n  );\n\n  React.useEffect(\n    () => toggleDrawer({ open, isUserInitiated: false }),\n    [open, toggleDrawer]\n  );\n\n  const onGestureEvent = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    { startX: number; hasCalledOnStart: boolean }\n  >({\n    onStart: (event, ctx) => {\n      ctx.hasCalledOnStart = false;\n      ctx.startX = translationX.value;\n      gestureState.value = event.state;\n      touchStartX.value = event.x;\n    },\n    onActive: (event, ctx) => {\n      touchX.value = event.x;\n      translationX.value = ctx.startX + event.translationX;\n      gestureState.value = event.state;\n\n      // onStart will _always_ be called, even when the activation\n      // criteria isn't met yet. This makes sure onGestureStart is only\n      // called when the criteria is really met.\n      if (!ctx.hasCalledOnStart) {\n        ctx.hasCalledOnStart = true;\n        runOnJS(onGestureStart)();\n      }\n    },\n    onEnd: (event) => {\n      gestureState.value = event.state;\n\n      const nextOpen =\n        (Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM &&\n          Math.abs(event.translationX) > swipeVelocityThreshold) ||\n        Math.abs(event.translationX) > swipeDistanceThreshold\n          ? drawerPosition === 'left'\n            ? // If swiped to right, open the drawer, otherwise close it\n              (event.velocityX === 0 ? event.translationX : event.velocityX) > 0\n            : // If swiped to left, open the drawer, otherwise close it\n              (event.velocityX === 0 ? event.translationX : event.velocityX) < 0\n          : open;\n\n      toggleDrawer({\n        open: nextOpen,\n        isUserInitiated: true,\n        velocity: event.velocityX,\n      });\n    },\n    onFinish: () => {\n      runOnJS(onGestureFinish)();\n    },\n  });\n\n  const translateX = useDerivedValue(() => {\n    // Comment stolen from react-native-gesture-handler/DrawerLayout\n    //\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the translationX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    const touchDistance =\n      drawerType === 'front' && gestureState.value === GestureState.ACTIVE\n        ? minmax(\n            drawerPosition === 'left'\n              ? touchStartX.value - drawerWidth\n              : dimensions.width - drawerWidth - touchStartX.value,\n            0,\n            dimensions.width\n          )\n        : 0;\n\n    const translateX =\n      drawerPosition === 'left'\n        ? minmax(translationX.value + touchDistance, -drawerWidth, 0)\n        : minmax(translationX.value - touchDistance, 0, drawerWidth);\n\n    return translateX;\n  });\n\n  const isRTL = I18nManager.getConstants().isRTL;\n  const drawerAnimatedStyle = useAnimatedStyle(() => {\n    const distanceFromEdge = dimensions.width - drawerWidth;\n\n    return {\n      transform:\n        drawerType === 'permanent'\n          ? // Reanimated needs the property to be present, but it results in Browser bug\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n            []\n          : [\n              {\n                translateX:\n                  // The drawer stays in place when `drawerType` is `back`\n                  (drawerType === 'back' ? 0 : translateX.value) +\n                  (drawerPosition === 'left'\n                    ? isRTL\n                      ? -distanceFromEdge\n                      : 0\n                    : isRTL\n                    ? 0\n                    : distanceFromEdge),\n              },\n            ],\n    };\n  });\n\n  const contentAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform:\n        drawerType === 'permanent'\n          ? // Reanimated needs the property to be present, but it results in Browser bug\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n            []\n          : [\n              {\n                translateX:\n                  // The screen content stays in place when `drawerType` is `front`\n                  drawerType === 'front'\n                    ? 0\n                    : translateX.value +\n                      drawerWidth * (drawerPosition === 'left' ? 1 : -1),\n              },\n            ],\n    };\n  });\n\n  const progress = useDerivedValue(() => {\n    return drawerType === 'permanent'\n      ? 1\n      : interpolate(\n          translateX.value,\n          [getDrawerTranslationX(false), getDrawerTranslationX(true)],\n          [0, 1]\n        );\n  });\n\n  return (\n    <DrawerProgressContext.Provider value={progress}>\n      <PanGestureHandler\n        activeOffsetX={[-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM]}\n        failOffsetY={[-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM]}\n        hitSlop={hitSlop}\n        enabled={drawerType !== 'permanent' && swipeEnabled}\n        onGestureEvent={onGestureEvent}\n        {...gestureHandlerProps}\n      >\n        {/* Immediate child of gesture handler needs to be an Animated.View */}\n        <Animated.View\n          style={[\n            styles.main,\n            {\n              flexDirection:\n                drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row',\n            },\n          ]}\n        >\n          <Animated.View style={[styles.content, contentAnimatedStyle]}>\n            <View\n              accessibilityElementsHidden={isOpen && drawerType !== 'permanent'}\n              importantForAccessibility={\n                isOpen && drawerType !== 'permanent'\n                  ? 'no-hide-descendants'\n                  : 'auto'\n              }\n              style={styles.content}\n            >\n              {renderSceneContent()}\n            </View>\n            {drawerType !== 'permanent' ? (\n              <Overlay\n                progress={progress}\n                onPress={() =>\n                  toggleDrawer({ open: false, isUserInitiated: true })\n                }\n                style={overlayStyle}\n                accessibilityLabel={overlayAccessibilityLabel}\n              />\n            ) : null}\n          </Animated.View>\n          <Animated.View\n            removeClippedSubviews={Platform.OS !== 'ios'}\n            style={[\n              styles.container,\n              {\n                position: drawerType === 'permanent' ? 'relative' : 'absolute',\n                zIndex: drawerType === 'back' ? -1 : 0,\n              },\n              drawerAnimatedStyle,\n              drawerStyle as any,\n            ]}\n          >\n            {renderDrawerContent()}\n          </Animated.View>\n        </Animated.View>\n      </PanGestureHandler>\n    </DrawerProgressContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH,\n  },\n  content: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: { overflow: 'hidden' },\n    }),\n  },\n});\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}