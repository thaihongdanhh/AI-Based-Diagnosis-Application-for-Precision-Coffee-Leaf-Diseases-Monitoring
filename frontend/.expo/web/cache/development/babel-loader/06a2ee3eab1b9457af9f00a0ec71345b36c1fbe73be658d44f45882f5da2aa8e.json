{"ast":null,"code":"'use strict';\n\nimport { useEffect } from 'react';\nimport { ReduceMotion } from \"../commonTypes.js\";\nimport { ReducedMotionManager, isReducedMotionEnabledInSystem } from \"../ReducedMotion.js\";\nimport { logger } from \"../logger/index.js\";\nexport function ReducedMotionConfig({\n  mode\n}) {\n  useEffect(() => {\n    if (!__DEV__) {\n      return;\n    }\n    logger.warn(`Reduced motion setting is overwritten with mode '${mode}'.`);\n  }, []);\n  useEffect(() => {\n    const wasEnabled = ReducedMotionManager.jsValue;\n    switch (mode) {\n      case ReduceMotion.System:\n        ReducedMotionManager.setEnabled(isReducedMotionEnabledInSystem());\n        break;\n      case ReduceMotion.Always:\n        ReducedMotionManager.setEnabled(true);\n        break;\n      case ReduceMotion.Never:\n        ReducedMotionManager.setEnabled(false);\n        break;\n    }\n    return () => {\n      ReducedMotionManager.setEnabled(wasEnabled);\n    };\n  }, [mode]);\n  return null;\n}","map":{"version":3,"names":["useEffect","ReduceMotion","ReducedMotionManager","isReducedMotionEnabledInSystem","logger","ReducedMotionConfig","mode","__DEV__","warn","wasEnabled","jsValue","System","setEnabled","Always","Never"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-reanimated/src/component/ReducedMotionConfig.tsx"],"sourcesContent":["'use strict';\nimport { useEffect } from 'react';\nimport { ReduceMotion } from '../commonTypes';\nimport {\n  ReducedMotionManager,\n  isReducedMotionEnabledInSystem,\n} from '../ReducedMotion';\nimport { logger } from '../logger';\n\n/**\n * A component that lets you overwrite default reduce motion behavior globally\n * in your application.\n *\n * @param mode - Determines default reduce motion behavior globally in your\n *   application. Configured with {@link ReduceMotion} enum.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/components/ReducedMotionConfig\n */\nexport function ReducedMotionConfig({ mode }: { mode: ReduceMotion }) {\n  useEffect(() => {\n    if (!__DEV__) {\n      return;\n    }\n    logger.warn(`Reduced motion setting is overwritten with mode '${mode}'.`);\n  }, []);\n\n  useEffect(() => {\n    const wasEnabled = ReducedMotionManager.jsValue;\n    switch (mode) {\n      case ReduceMotion.System:\n        ReducedMotionManager.setEnabled(isReducedMotionEnabledInSystem());\n        break;\n      case ReduceMotion.Always:\n        ReducedMotionManager.setEnabled(true);\n        break;\n      case ReduceMotion.Never:\n        ReducedMotionManager.setEnabled(false);\n        break;\n    }\n    return () => {\n      ReducedMotionManager.setEnabled(wasEnabled);\n    };\n  }, [mode]);\n\n  return null;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY;AACrB,SACEC,oBAAoB,EACpBC,8BAA8B;AAEhC,SAASC,MAAM;AAUf,OAAO,SAASC,mBAAmBA,CAAC;EAAEC;AAA6B,CAAC,EAAE;EACpEN,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,OAAO,EAAE;MACZ;IACF;IACAH,MAAM,CAACI,IAAI,CAAC,oDAAoDF,IAAI,IAAI,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;EAENN,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGP,oBAAoB,CAACQ,OAAO;IAC/C,QAAQJ,IAAI;MACV,KAAKL,YAAY,CAACU,MAAM;QACtBT,oBAAoB,CAACU,UAAU,CAACT,8BAA8B,CAAC,CAAC,CAAC;QACjE;MACF,KAAKF,YAAY,CAACY,MAAM;QACtBX,oBAAoB,CAACU,UAAU,CAAC,IAAI,CAAC;QACrC;MACF,KAAKX,YAAY,CAACa,KAAK;QACrBZ,oBAAoB,CAACU,UAAU,CAAC,KAAK,CAAC;QACtC;IACJ;IACA,OAAO,MAAM;MACXV,oBAAoB,CAACU,UAAU,CAACH,UAAU,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,OAAO,IAAI;AACb"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}