{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorBody.js\";\nimport ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport LogBoxLog from \"../Data/LogBoxLog\";\nimport LogBoxInspectorCodeFrame from \"./LogBoxInspectorCodeFrame\";\nimport LogBoxInspectorMessageHeader from \"./LogBoxInspectorMessageHeader\";\nimport LogBoxInspectorReactFrames from \"./LogBoxInspectorReactFrames\";\nimport LogBoxInspectorStackFrames from \"./LogBoxInspectorStackFrames\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst headerTitleMap = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  component: 'Render Error'\n};\nexport default function LogBoxInspectorBody(props) {\n  const [collapsed, setCollapsed] = useState(true);\n  useEffect(() => {\n    setCollapsed(true);\n  }, [props.log]);\n  const headerTitle = props.log.type ?? headerTitleMap[props.log.isComponentError ? 'component' : props.log.level];\n  if (collapsed) {\n    return _jsxDEV(_Fragment, {\n      children: [_jsxDEV(LogBoxInspectorMessageHeader, {\n        collapsed: collapsed,\n        onPress: () => setCollapsed(!collapsed),\n        message: props.log.message,\n        level: props.log.level,\n        title: headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), _jsxDEV(ScrollView, {\n        style: styles.scrollBody,\n        children: [_jsxDEV(LogBoxInspectorCodeFrame, {\n          codeFrame: props.log.codeFrame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), _jsxDEV(LogBoxInspectorReactFrames, {\n          log: props.log\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), _jsxDEV(LogBoxInspectorStackFrames, {\n          log: props.log,\n          onRetry: props.onRetry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return _jsxDEV(ScrollView, {\n    style: styles.scrollBody,\n    children: [_jsxDEV(LogBoxInspectorMessageHeader, {\n      collapsed: collapsed,\n      onPress: () => setCollapsed(!collapsed),\n      message: props.log.message,\n      level: props.log.level,\n      title: headerTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), _jsxDEV(LogBoxInspectorCodeFrame, {\n      codeFrame: props.log.codeFrame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), _jsxDEV(LogBoxInspectorReactFrames, {\n      log: props.log\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), _jsxDEV(LogBoxInspectorStackFrames, {\n      log: props.log,\n      onRetry: props.onRetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: LogBoxStyle.getTextColor()\n  },\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(0.9),\n    flex: 1\n  }\n});","map":{"version":3,"names":["ScrollView","StyleSheet","LogBoxLog","LogBoxInspectorCodeFrame","LogBoxInspectorMessageHeader","LogBoxInspectorReactFrames","LogBoxInspectorStackFrames","LogBoxStyle","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","headerTitleMap","warn","error","fatal","syntax","component","LogBoxInspectorBody","props","collapsed","setCollapsed","log","headerTitle","type","isComponentError","level","children","onPress","message","title","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","scrollBody","codeFrame","onRetry","create","root","flex","backgroundColor","getTextColor","getBackgroundColor"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorBody.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport LogBoxLog from '../Data/LogBoxLog';\nimport LogBoxInspectorCodeFrame from './LogBoxInspectorCodeFrame';\nimport LogBoxInspectorMessageHeader from './LogBoxInspectorMessageHeader';\nimport LogBoxInspectorReactFrames from './LogBoxInspectorReactFrames';\nimport LogBoxInspectorStackFrames from './LogBoxInspectorStackFrames';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\nimport {useEffect, useState} from 'react';\n\nconst headerTitleMap = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  component: 'Render Error',\n};\n\nexport default function LogBoxInspectorBody(props: {\n  log: LogBoxLog,\n  onRetry: () => void,\n}): React.Node {\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [props.log]);\n\n  const headerTitle =\n    props.log.type ??\n    headerTitleMap[props.log.isComponentError ? 'component' : props.log.level];\n\n  if (collapsed) {\n    return (\n      <>\n        <LogBoxInspectorMessageHeader\n          collapsed={collapsed}\n          onPress={() => setCollapsed(!collapsed)}\n          message={props.log.message}\n          level={props.log.level}\n          title={headerTitle}\n        />\n        <ScrollView style={styles.scrollBody}>\n          <LogBoxInspectorCodeFrame codeFrame={props.log.codeFrame} />\n          <LogBoxInspectorReactFrames log={props.log} />\n          <LogBoxInspectorStackFrames log={props.log} onRetry={props.onRetry} />\n        </ScrollView>\n      </>\n    );\n  }\n  return (\n    <ScrollView style={styles.scrollBody}>\n      <LogBoxInspectorMessageHeader\n        collapsed={collapsed}\n        onPress={() => setCollapsed(!collapsed)}\n        message={props.log.message}\n        level={props.log.level}\n        title={headerTitle}\n      />\n      <LogBoxInspectorCodeFrame codeFrame={props.log.codeFrame} />\n      <LogBoxInspectorReactFrames log={props.log} />\n      <LogBoxInspectorStackFrames log={props.log} onRetry={props.onRetry} />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: LogBoxStyle.getTextColor(),\n  },\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(0.9),\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}