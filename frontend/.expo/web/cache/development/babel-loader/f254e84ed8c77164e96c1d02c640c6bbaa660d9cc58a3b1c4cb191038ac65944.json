{"ast":null,"code":"'use strict';\n\nimport { findNodeHandle } from \"../../ReactNative/RendererProxy\";\nimport { AnimatedEvent } from \"../AnimatedEvent\";\nimport NativeAnimatedHelper from \"../../../src/private/animated/NativeAnimatedHelper\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedObject from \"./AnimatedObject\";\nimport AnimatedStyle from \"./AnimatedStyle\";\nimport invariant from 'invariant';\nfunction createAnimatedProps(inputProps) {\n  const nodeKeys = [];\n  const nodes = [];\n  const props = {};\n  const keys = Object.keys(inputProps);\n  for (let ii = 0, length = keys.length; ii < length; ii++) {\n    const key = keys[ii];\n    const value = inputProps[key];\n    if (key === 'style') {\n      const node = new AnimatedStyle(value);\n      nodeKeys.push(key);\n      nodes.push(node);\n      props[key] = node;\n    } else if (value instanceof AnimatedNode) {\n      const node = value;\n      nodeKeys.push(key);\n      nodes.push(node);\n      props[key] = node;\n    } else {\n      const node = AnimatedObject.from(value);\n      if (node == null) {\n        props[key] = value;\n      } else {\n        nodeKeys.push(key);\n        nodes.push(node);\n        props[key] = node;\n      }\n    }\n  }\n  return [nodeKeys, nodes, props];\n}\nexport default class AnimatedProps extends AnimatedNode {\n  #nodeKeys;\n  #nodes;\n  _animatedView = null;\n  constructor(inputProps, callback) {\n    super();\n    const [nodeKeys, nodes, props] = createAnimatedProps(inputProps);\n    this.#nodeKeys = nodeKeys;\n    this.#nodes = nodes;\n    this._props = props;\n    this._callback = callback;\n  }\n  __getValue() {\n    const props = {};\n    const keys = Object.keys(this._props);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n  __getAnimatedValue() {\n    const props = {};\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      props[key] = node.__getAnimatedValue();\n    }\n    return props;\n  }\n  __attach() {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n  }\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    this._animatedView = null;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n  update() {\n    this._callback();\n  }\n  __makeNative(platformConfig) {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    if (!this.__isNative) {\n      this.__isNative = true;\n      super.__setPlatformConfig(platformConfig);\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n  __restoreDefaultValues() {\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n  __getNativeConfig() {\n    const platformConfig = this.__getPlatformConfig();\n    const propsConfig = {};\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n      propsConfig[key] = node.__getNativeTag();\n    }\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n}","map":{"version":3,"names":["findNodeHandle","AnimatedEvent","NativeAnimatedHelper","AnimatedNode","AnimatedObject","AnimatedStyle","invariant","createAnimatedProps","inputProps","nodeKeys","nodes","props","keys","Object","ii","length","key","value","node","push","from","AnimatedProps","_animatedView","constructor","callback","_props","_callback","__getValue","__getHandler","__getAnimatedValue","__attach","__addChild","__detach","__isNative","__disconnectAnimatedView","__removeChild","update","__makeNative","platformConfig","__setPlatformConfig","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","__getPlatformConfig","propsConfig","type"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport {findNodeHandle} from '../../ReactNative/RendererProxy';\nimport {AnimatedEvent} from '../AnimatedEvent';\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedObject from './AnimatedObject';\nimport AnimatedStyle from './AnimatedStyle';\nimport invariant from 'invariant';\n\nfunction createAnimatedProps(\n  inputProps: Object,\n): [$ReadOnlyArray<string>, $ReadOnlyArray<AnimatedNode>, Object] {\n  const nodeKeys: Array<string> = [];\n  const nodes: Array<AnimatedNode> = [];\n  const props: Object = {};\n\n  const keys = Object.keys(inputProps);\n  for (let ii = 0, length = keys.length; ii < length; ii++) {\n    const key = keys[ii];\n    const value = inputProps[key];\n\n    if (key === 'style') {\n      const node = new AnimatedStyle(value);\n      nodeKeys.push(key);\n      nodes.push(node);\n      props[key] = node;\n    } else if (value instanceof AnimatedNode) {\n      const node = value;\n      nodeKeys.push(key);\n      nodes.push(node);\n      props[key] = node;\n    } else {\n      const node = AnimatedObject.from(value);\n      if (node == null) {\n        props[key] = value;\n      } else {\n        nodeKeys.push(key);\n        nodes.push(node);\n        props[key] = node;\n      }\n    }\n  }\n\n  return [nodeKeys, nodes, props];\n}\n\nexport default class AnimatedProps extends AnimatedNode {\n  #nodeKeys: $ReadOnlyArray<string>;\n  #nodes: $ReadOnlyArray<AnimatedNode>;\n\n  _animatedView: any = null;\n  _props: Object;\n  _callback: () => void;\n\n  constructor(inputProps: Object, callback: () => void) {\n    super();\n    const [nodeKeys, nodes, props] = createAnimatedProps(inputProps);\n    this.#nodeKeys = nodeKeys;\n    this.#nodes = nodes;\n    this._props = props;\n    this._callback = callback;\n  }\n\n  __getValue(): Object {\n    const props: {[string]: any | ((...args: any) => void)} = {};\n\n    const keys = Object.keys(this._props);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      const value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue(): Object {\n    const props: {[string]: any} = {};\n\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      props[key] = node.__getAnimatedValue();\n    }\n\n    return props;\n  }\n\n  __attach(): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n  }\n\n  __detach(): void {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    this._animatedView = null;\n\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n\n    super.__detach();\n  }\n\n  update(): void {\n    this._callback();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      // Since this does not call the super.__makeNative, we need to store the\n      // supplied platformConfig here, before calling __connectAnimatedView\n      // where it will be needed to traverse the graph of attached values.\n      super.__setPlatformConfig(platformConfig);\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView: any): void {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __disconnectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __restoreDefaultValues(): void {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig(): Object {\n    const platformConfig = this.__getPlatformConfig();\n    const propsConfig: {[string]: number} = {};\n\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n      propsConfig[key] = node.__getNativeTag();\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}