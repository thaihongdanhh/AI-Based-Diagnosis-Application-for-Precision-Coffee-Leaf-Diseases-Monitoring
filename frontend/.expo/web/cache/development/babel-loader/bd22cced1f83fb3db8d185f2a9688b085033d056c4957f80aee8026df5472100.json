{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"animating\", \"children\", \"color\", \"direction\", \"hidesWhenStopped\", \"size\", \"style\", \"thickness\", \"strokeCap\"];\nvar _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-progress/CircleSnail.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { Svg } from 'react-native-svg';\nimport Arc from \"./Shapes/Arc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedArc = Animated.createAnimatedComponent(Arc);\nconst MIN_ARC_ANGLE = 0.1;\nconst MAX_ARC_ANGLE = 1.5 * Math.PI;\nexport default class CircleSnail extends Component {\n  static propTypes = {\n    animating: PropTypes.bool,\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    children: PropTypes.node,\n    direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n    duration: PropTypes.number,\n    hidesWhenStopped: PropTypes.bool,\n    size: PropTypes.number,\n    spinDuration: PropTypes.number,\n    style: PropTypes.any,\n    thickness: PropTypes.number,\n    strokeCap: PropTypes.string,\n    useNativeDriver: PropTypes.bool\n  };\n  static defaultProps = {\n    animating: true,\n    color: 'rgba(0, 122, 255, 1)',\n    direction: 'counter-clockwise',\n    hidesWhenStopped: false,\n    size: 40,\n    thickness: 3,\n    strokeCap: 'round',\n    useNativeDriver: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      startAngle: new Animated.Value(-MIN_ARC_ANGLE),\n      endAngle: new Animated.Value(0),\n      rotation: new Animated.Value(0),\n      colorIndex: 0\n    };\n  }\n  componentDidMount() {\n    if (this.props.animating) {\n      this.animate();\n      this.spin();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.animating !== this.props.animating) {\n      if (this.props.animating) {\n        this.animate();\n        this.spin();\n      } else {\n        this.stopAnimations();\n      }\n    }\n  }\n  animate(iteration = 1) {\n    Animated.sequence([Animated.timing(this.state.startAngle, {\n      toValue: -MAX_ARC_ANGLE * iteration - MIN_ARC_ANGLE,\n      duration: this.props.duration || 1000,\n      isInteraction: false,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: this.props.useNativeDriver\n    }), Animated.timing(this.state.endAngle, {\n      toValue: -MAX_ARC_ANGLE * iteration,\n      duration: this.props.duration || 1000,\n      isInteraction: false,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: this.props.useNativeDriver\n    })]).start(endState => {\n      if (endState.finished) {\n        if (Array.isArray(this.props.color)) {\n          this.setState({\n            colorIndex: iteration % this.props.color.length\n          });\n        }\n        this.animate(iteration + 1);\n      }\n    });\n  }\n  spin() {\n    Animated.timing(this.state.rotation, {\n      toValue: 1,\n      duration: this.props.spinDuration || 5000,\n      easing: Easing.linear,\n      isInteraction: false,\n      useNativeDriver: this.props.useNativeDriver\n    }).start(endState => {\n      if (endState.finished) {\n        this.state.rotation.setValue(0);\n        this.spin();\n      }\n    });\n  }\n  stopAnimations() {\n    this.state.startAngle.stopAnimation();\n    this.state.endAngle.stopAnimation();\n    this.state.rotation.stopAnimation();\n  }\n  render() {\n    const _this$props = this.props,\n      {\n        animating,\n        children,\n        color,\n        direction,\n        hidesWhenStopped,\n        size,\n        style,\n        thickness,\n        strokeCap\n      } = _this$props,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    if (!animating && hidesWhenStopped) {\n      return null;\n    }\n    const radius = size / 2 - thickness;\n    const offset = {\n      top: thickness,\n      left: thickness\n    };\n    const directionFactor = direction === 'counter-clockwise' ? -1 : 1;\n    return _jsxDEV(Animated.View, Object.assign({}, restProps, {\n      style: [style, {\n        backgroundColor: 'transparent',\n        overflow: 'hidden',\n        transform: [{\n          rotate: this.state.rotation.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', `${directionFactor * 360}deg`]\n          })\n        }]\n      }],\n      children: [_jsxDEV(Svg, {\n        width: size,\n        height: size,\n        children: _jsxDEV(AnimatedArc, {\n          direction: direction === 'counter-clockwise' ? 'clockwise' : 'counter-clockwise',\n          radius: radius,\n          stroke: Array.isArray(color) ? color[this.state.colorIndex] : color,\n          offset: offset,\n          startAngle: this.state.startAngle,\n          endAngle: this.state.endAngle,\n          strokeCap: strokeCap,\n          strokeWidth: thickness\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), children]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PropTypes","Animated","Easing","Svg","Arc","jsxDEV","_jsxDEV","AnimatedArc","createAnimatedComponent","MIN_ARC_ANGLE","MAX_ARC_ANGLE","Math","PI","CircleSnail","propTypes","animating","bool","color","oneOfType","string","arrayOf","children","node","direction","oneOf","duration","number","hidesWhenStopped","size","spinDuration","style","any","thickness","strokeCap","useNativeDriver","defaultProps","constructor","props","state","startAngle","Value","endAngle","rotation","colorIndex","componentDidMount","animate","spin","componentDidUpdate","prevProps","stopAnimations","iteration","sequence","timing","toValue","isInteraction","easing","inOut","quad","start","endState","finished","Array","isArray","setState","length","linear","setValue","stopAnimation","render","_this$props","restProps","_objectWithoutPropertiesLoose","_excluded","radius","offset","top","left","directionFactor","View","Object","assign","backgroundColor","overflow","transform","rotate","interpolate","inputRange","outputRange","width","height","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native-progress/CircleSnail.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing } from 'react-native';\nimport { Svg } from 'react-native-svg';\n\nimport Arc from './Shapes/Arc';\n\nconst AnimatedArc = Animated.createAnimatedComponent(Arc);\n\nconst MIN_ARC_ANGLE = 0.1;\nconst MAX_ARC_ANGLE = 1.5 * Math.PI;\n\nexport default class CircleSnail extends Component {\n  static propTypes = {\n    animating: PropTypes.bool,\n    color: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n    children: PropTypes.node,\n    direction: PropTypes.oneOf(['clockwise', 'counter-clockwise']),\n    duration: PropTypes.number,\n    hidesWhenStopped: PropTypes.bool,\n    size: PropTypes.number,\n    spinDuration: PropTypes.number,\n    style: PropTypes.any,\n    thickness: PropTypes.number,\n    strokeCap: PropTypes.string,\n    useNativeDriver: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    animating: true,\n    color: 'rgba(0, 122, 255, 1)',\n    direction: 'counter-clockwise',\n    hidesWhenStopped: false,\n    size: 40,\n    thickness: 3,\n    strokeCap: 'round',\n    useNativeDriver: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startAngle: new Animated.Value(-MIN_ARC_ANGLE),\n      endAngle: new Animated.Value(0),\n      rotation: new Animated.Value(0),\n      colorIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.animating) {\n      this.animate();\n      this.spin();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.animating !== this.props.animating) {\n      if (this.props.animating) {\n        this.animate();\n        this.spin();\n      } else {\n        this.stopAnimations();\n      }\n    }\n  }\n\n  animate(iteration = 1) {\n    Animated.sequence([\n      Animated.timing(this.state.startAngle, {\n        toValue: -MAX_ARC_ANGLE * iteration - MIN_ARC_ANGLE,\n        duration: this.props.duration || 1000,\n        isInteraction: false,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: this.props.useNativeDriver,\n      }),\n      Animated.timing(this.state.endAngle, {\n        toValue: -MAX_ARC_ANGLE * iteration,\n        duration: this.props.duration || 1000,\n        isInteraction: false,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: this.props.useNativeDriver,\n      }),\n    ]).start(endState => {\n      if (endState.finished) {\n        if (Array.isArray(this.props.color)) {\n          this.setState({\n            colorIndex: iteration % this.props.color.length,\n          });\n        }\n        this.animate(iteration + 1);\n      }\n    });\n  }\n\n  spin() {\n    Animated.timing(this.state.rotation, {\n      toValue: 1,\n      duration: this.props.spinDuration || 5000,\n      easing: Easing.linear,\n      isInteraction: false,\n      useNativeDriver: this.props.useNativeDriver,\n    }).start(endState => {\n      if (endState.finished) {\n        this.state.rotation.setValue(0);\n        this.spin();\n      }\n    });\n  }\n\n  stopAnimations() {\n    this.state.startAngle.stopAnimation();\n    this.state.endAngle.stopAnimation();\n    this.state.rotation.stopAnimation();\n  }\n\n  render() {\n    const {\n      animating,\n      children,\n      color,\n      direction,\n      hidesWhenStopped,\n      size,\n      style,\n      thickness,\n      strokeCap,\n      ...restProps\n    } = this.props;\n\n    if (!animating && hidesWhenStopped) {\n      return null;\n    }\n\n    const radius = size / 2 - thickness;\n    const offset = {\n      top: thickness,\n      left: thickness,\n    };\n\n    const directionFactor = direction === 'counter-clockwise' ? -1 : 1;\n\n    return (\n      <Animated.View\n        {...restProps}\n        style={[\n          style,\n          {\n            backgroundColor: 'transparent',\n            overflow: 'hidden',\n            transform: [\n              {\n                rotate: this.state.rotation.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: ['0deg', `${directionFactor * 360}deg`],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        <Svg width={size} height={size}>\n          <AnimatedArc\n            direction={\n              direction === 'counter-clockwise'\n                ? 'clockwise'\n                : 'counter-clockwise'\n            }\n            radius={radius}\n            stroke={Array.isArray(color) ? color[this.state.colorIndex] : color}\n            offset={offset}\n            startAngle={this.state.startAngle}\n            endAngle={this.state.endAngle}\n            strokeCap={strokeCap}\n            strokeWidth={thickness}\n          />\n        </Svg>\n        {children}\n      </Animated.View>\n    );\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAAC,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAEnC,SAASC,GAAG,QAAQ,kBAAkB;AAEtC,OAAOC,GAAG;AAAqB,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,WAAW,GAAGN,QAAQ,CAACO,uBAAuB,CAACJ,GAAG,CAAC;AAEzD,MAAMK,aAAa,GAAG,GAAG;AACzB,MAAMC,aAAa,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE;AAEnC,eAAe,MAAMC,WAAW,SAASd,SAAS,CAAC;EACjD,OAAOe,SAAS,GAAG;IACjBC,SAAS,EAAEf,SAAS,CAACgB,IAAI;IACzBC,KAAK,EAAEjB,SAAS,CAACkB,SAAS,CAAC,CACzBlB,SAAS,CAACmB,MAAM,EAChBnB,SAAS,CAACoB,OAAO,CAACpB,SAAS,CAACmB,MAAM,CAAC,CACpC,CAAC;IACFE,QAAQ,EAAErB,SAAS,CAACsB,IAAI;IACxBC,SAAS,EAAEvB,SAAS,CAACwB,KAAK,CAAC,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;IAC9DC,QAAQ,EAAEzB,SAAS,CAAC0B,MAAM;IAC1BC,gBAAgB,EAAE3B,SAAS,CAACgB,IAAI;IAChCY,IAAI,EAAE5B,SAAS,CAAC0B,MAAM;IACtBG,YAAY,EAAE7B,SAAS,CAAC0B,MAAM;IAC9BI,KAAK,EAAE9B,SAAS,CAAC+B,GAAG;IACpBC,SAAS,EAAEhC,SAAS,CAAC0B,MAAM;IAC3BO,SAAS,EAAEjC,SAAS,CAACmB,MAAM;IAC3Be,eAAe,EAAElC,SAAS,CAACgB;EAC7B,CAAC;EAED,OAAOmB,YAAY,GAAG;IACpBpB,SAAS,EAAE,IAAI;IACfE,KAAK,EAAE,sBAAsB;IAC7BM,SAAS,EAAE,mBAAmB;IAC9BI,gBAAgB,EAAE,KAAK;IACvBC,IAAI,EAAE,EAAE;IACRI,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;EACnB,CAAC;EAEDE,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,UAAU,EAAE,IAAItC,QAAQ,CAACuC,KAAK,CAAC,CAAC/B,aAAa,CAAC;MAC9CgC,QAAQ,EAAE,IAAIxC,QAAQ,CAACuC,KAAK,CAAC,CAAC,CAAC;MAC/BE,QAAQ,EAAE,IAAIzC,QAAQ,CAACuC,KAAK,CAAC,CAAC,CAAC;MAC/BG,UAAU,EAAE;IACd,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACP,KAAK,CAACtB,SAAS,EAAE;MACxB,IAAI,CAAC8B,OAAO,CAAC,CAAC;MACd,IAAI,CAACC,IAAI,CAAC,CAAC;IACb;EACF;EAEAC,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAIA,SAAS,CAACjC,SAAS,KAAK,IAAI,CAACsB,KAAK,CAACtB,SAAS,EAAE;MAChD,IAAI,IAAI,CAACsB,KAAK,CAACtB,SAAS,EAAE;QACxB,IAAI,CAAC8B,OAAO,CAAC,CAAC;QACd,IAAI,CAACC,IAAI,CAAC,CAAC;MACb,CAAC,MAAM;QACL,IAAI,CAACG,cAAc,CAAC,CAAC;MACvB;IACF;EACF;EAEAJ,OAAOA,CAACK,SAAS,GAAG,CAAC,EAAE;IACrBjD,QAAQ,CAACkD,QAAQ,CAAC,CAChBlD,QAAQ,CAACmD,MAAM,CAAC,IAAI,CAACd,KAAK,CAACC,UAAU,EAAE;MACrCc,OAAO,EAAE,CAAC3C,aAAa,GAAGwC,SAAS,GAAGzC,aAAa;MACnDgB,QAAQ,EAAE,IAAI,CAACY,KAAK,CAACZ,QAAQ,IAAI,IAAI;MACrC6B,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAErD,MAAM,CAACsD,KAAK,CAACtD,MAAM,CAACuD,IAAI,CAAC;MACjCvB,eAAe,EAAE,IAAI,CAACG,KAAK,CAACH;IAC9B,CAAC,CAAC,EACFjC,QAAQ,CAACmD,MAAM,CAAC,IAAI,CAACd,KAAK,CAACG,QAAQ,EAAE;MACnCY,OAAO,EAAE,CAAC3C,aAAa,GAAGwC,SAAS;MACnCzB,QAAQ,EAAE,IAAI,CAACY,KAAK,CAACZ,QAAQ,IAAI,IAAI;MACrC6B,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAErD,MAAM,CAACsD,KAAK,CAACtD,MAAM,CAACuD,IAAI,CAAC;MACjCvB,eAAe,EAAE,IAAI,CAACG,KAAK,CAACH;IAC9B,CAAC,CAAC,CACH,CAAC,CAACwB,KAAK,CAACC,QAAQ,IAAI;MACnB,IAAIA,QAAQ,CAACC,QAAQ,EAAE;QACrB,IAAIC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACzB,KAAK,CAACpB,KAAK,CAAC,EAAE;UACnC,IAAI,CAAC8C,QAAQ,CAAC;YACZpB,UAAU,EAAEO,SAAS,GAAG,IAAI,CAACb,KAAK,CAACpB,KAAK,CAAC+C;UAC3C,CAAC,CAAC;QACJ;QACA,IAAI,CAACnB,OAAO,CAACK,SAAS,GAAG,CAAC,CAAC;MAC7B;IACF,CAAC,CAAC;EACJ;EAEAJ,IAAIA,CAAA,EAAG;IACL7C,QAAQ,CAACmD,MAAM,CAAC,IAAI,CAACd,KAAK,CAACI,QAAQ,EAAE;MACnCW,OAAO,EAAE,CAAC;MACV5B,QAAQ,EAAE,IAAI,CAACY,KAAK,CAACR,YAAY,IAAI,IAAI;MACzC0B,MAAM,EAAErD,MAAM,CAAC+D,MAAM;MACrBX,aAAa,EAAE,KAAK;MACpBpB,eAAe,EAAE,IAAI,CAACG,KAAK,CAACH;IAC9B,CAAC,CAAC,CAACwB,KAAK,CAACC,QAAQ,IAAI;MACnB,IAAIA,QAAQ,CAACC,QAAQ,EAAE;QACrB,IAAI,CAACtB,KAAK,CAACI,QAAQ,CAACwB,QAAQ,CAAC,CAAC,CAAC;QAC/B,IAAI,CAACpB,IAAI,CAAC,CAAC;MACb;IACF,CAAC,CAAC;EACJ;EAEAG,cAAcA,CAAA,EAAG;IACf,IAAI,CAACX,KAAK,CAACC,UAAU,CAAC4B,aAAa,CAAC,CAAC;IACrC,IAAI,CAAC7B,KAAK,CAACG,QAAQ,CAAC0B,aAAa,CAAC,CAAC;IACnC,IAAI,CAAC7B,KAAK,CAACI,QAAQ,CAACyB,aAAa,CAAC,CAAC;EACrC;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAAC,WAAA,GAWI,IAAI,CAAChC,KAAK;MAXR;QACJtB,SAAS;QACTM,QAAQ;QACRJ,KAAK;QACLM,SAAS;QACTI,gBAAgB;QAChBC,IAAI;QACJE,KAAK;QACLE,SAAS;QACTC;MAEF,CAAC,GAAAoC,WAAA;MADIC,SAAS,GAAAC,6BAAA,CAAAF,WAAA,EAAAG,SAAA;IAGd,IAAI,CAACzD,SAAS,IAAIY,gBAAgB,EAAE;MAClC,OAAO,IAAI;IACb;IAEA,MAAM8C,MAAM,GAAG7C,IAAI,GAAG,CAAC,GAAGI,SAAS;IACnC,MAAM0C,MAAM,GAAG;MACbC,GAAG,EAAE3C,SAAS;MACd4C,IAAI,EAAE5C;IACR,CAAC;IAED,MAAM6C,eAAe,GAAGtD,SAAS,KAAK,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC;IAElE,OACEjB,OAAA,CAACL,QAAQ,CAAC6E,IAAI,EAAAC,MAAA,CAAAC,MAAA,KACRV,SAAS;MACbxC,KAAK,EAAE,CACLA,KAAK,EACL;QACEmD,eAAe,EAAE,aAAa;QAC9BC,QAAQ,EAAE,QAAQ;QAClBC,SAAS,EAAE,CACT;UACEC,MAAM,EAAE,IAAI,CAAC9C,KAAK,CAACI,QAAQ,CAAC2C,WAAW,CAAC;YACtCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAClBC,WAAW,EAAE,CAAC,MAAM,EAAG,GAAEV,eAAe,GAAG,GAAI,KAAI;UACrD,CAAC;QACH,CAAC;MAEL,CAAC,CACD;MAAAxD,QAAA,GAEFf,OAAA,CAACH,GAAG;QAACqF,KAAK,EAAE5D,IAAK;QAAC6D,MAAM,EAAE7D,IAAK;QAAAP,QAAA,EAC7Bf,OAAA,CAACC,WAAW;UACVgB,SAAS,EACPA,SAAS,KAAK,mBAAmB,GAC7B,WAAW,GACX,mBACL;UACDkD,MAAM,EAAEA,MAAO;UACfiB,MAAM,EAAE7B,KAAK,CAACC,OAAO,CAAC7C,KAAK,CAAC,GAAGA,KAAK,CAAC,IAAI,CAACqB,KAAK,CAACK,UAAU,CAAC,GAAG1B,KAAM;UACpEyD,MAAM,EAAEA,MAAO;UACfnC,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAW;UAClCE,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACG,QAAS;UAC9BR,SAAS,EAAEA,SAAU;UACrB0D,WAAW,EAAE3D;QAAU;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACL1E,QAAQ;IAAA;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEpB;AACF"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}