{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport * as React from 'react';\nclass FirebaseRecaptchaVerifierModal extends React.Component {\n  verifier = null;\n  setRef = ref => {\n    if (ref) {\n      if (this.props.appVerificationDisabledForTesting !== undefined) {\n        firebase.auth().settings.appVerificationDisabledForTesting = !!this.props.appVerificationDisabledForTesting;\n      }\n      if (this.props.languageCode) {\n        firebase.auth().languageCode = this.props.languageCode;\n      }\n      this.verifier = new firebase.auth.RecaptchaVerifier(ref, {\n        size: this.props.attemptInvisibleVerification ? 'invisible' : 'normal'\n      });\n    } else {\n      this.verifier = null;\n    }\n    if (this.props.innerRef) {\n      this.props.innerRef.current = this.verifier;\n    }\n  };\n  shouldComponentUpdate(nextProps) {\n    return this.props.appVerificationDisabledForTesting !== nextProps.appVerificationDisabledForTesting || this.props.attemptInvisibleVerification !== nextProps.attemptInvisibleVerification || this.props.languageCode !== nextProps.languageCode;\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.innerRef !== prevProps.innerRef) {\n      if (this.props.innerRef) {\n        this.props.innerRef.current = this.verifier;\n      }\n    }\n  }\n  render() {\n    const {\n      attemptInvisibleVerification,\n      appVerificationDisabledForTesting,\n      languageCode\n    } = this.props;\n    return React.createElement(\"div\", {\n      style: styles.container,\n      key: `${attemptInvisibleVerification ? 'invisible' : 'visible'}-${appVerificationDisabledForTesting ? 'testing' : 'regular'}-${languageCode ?? ''}`,\n      id: \"recaptcha-container\",\n      ref: this.setRef,\n      dangerouslySetInnerHTML: {\n        __html: ''\n      }\n    });\n  }\n}\nexport default React.forwardRef((props, ref) => React.createElement(FirebaseRecaptchaVerifierModal, Object.assign({}, props, {\n  innerRef: ref\n})));\nconst styles = {\n  container: {\n    zIndex: 1000\n  }\n};","map":{"version":3,"names":["firebase","React","FirebaseRecaptchaVerifierModal","Component","verifier","setRef","ref","props","appVerificationDisabledForTesting","undefined","auth","settings","languageCode","RecaptchaVerifier","size","attemptInvisibleVerification","innerRef","current","shouldComponentUpdate","nextProps","componentDidUpdate","prevProps","render","createElement","style","styles","container","key","id","dangerouslySetInnerHTML","__html","forwardRef","Object","assign","zIndex"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/expo-firebase-recaptcha/src/FirebaseRecaptchaVerifierModal.web.tsx"],"sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport * as React from 'react';\n\nimport { FirebaseAuthApplicationVerifier } from './FirebaseRecaptcha.types';\n\ninterface Props {\n  attemptInvisibleVerification?: boolean;\n  appVerificationDisabledForTesting?: boolean;\n  languageCode?: string;\n  innerRef: React.MutableRefObject<FirebaseAuthApplicationVerifier | null>;\n}\n\nclass FirebaseRecaptchaVerifierModal extends React.Component<Props> {\n  private verifier: FirebaseAuthApplicationVerifier | null = null;\n\n  private setRef = (ref: any) => {\n    if (ref) {\n      if (this.props.appVerificationDisabledForTesting !== undefined) {\n        firebase.auth().settings.appVerificationDisabledForTesting =\n          !!this.props.appVerificationDisabledForTesting;\n      }\n      if (this.props.languageCode) {\n        firebase.auth().languageCode = this.props.languageCode;\n      }\n      this.verifier = new firebase.auth.RecaptchaVerifier(ref, {\n        size: this.props.attemptInvisibleVerification ? 'invisible' : 'normal',\n      });\n    } else {\n      this.verifier = null;\n    }\n    if (this.props.innerRef) {\n      this.props.innerRef.current = this.verifier;\n    }\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    return (\n      this.props.appVerificationDisabledForTesting !==\n        nextProps.appVerificationDisabledForTesting ||\n      this.props.attemptInvisibleVerification !== nextProps.attemptInvisibleVerification ||\n      this.props.languageCode !== nextProps.languageCode\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.innerRef !== prevProps.innerRef) {\n      if (this.props.innerRef) {\n        this.props.innerRef.current = this.verifier;\n      }\n    }\n  }\n\n  render() {\n    const { attemptInvisibleVerification, appVerificationDisabledForTesting, languageCode } =\n      this.props;\n    return (\n      <div\n        style={styles.container}\n        key={`${attemptInvisibleVerification ? 'invisible' : 'visible'}-${\n          appVerificationDisabledForTesting ? 'testing' : 'regular'\n        }-${languageCode ?? ''}`}\n        id=\"recaptcha-container\"\n        ref={this.setRef}\n        dangerouslySetInnerHTML={{ __html: '' }}\n      />\n    );\n  }\n}\n\nexport default React.forwardRef((props: Omit<Props, 'innerRef'>, ref: any) => (\n  <FirebaseRecaptchaVerifierModal {...props} innerRef={ref} />\n));\n\nconst styles = {\n  // Ensure the reCAPTCHA badge is in front or other elements\n  container: { zIndex: 1000 },\n};\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAW9B,MAAMC,8BAA+B,SAAQD,KAAK,CAACE,SAAgB;EACzDC,QAAQ,GAA2C,IAAI;EAEvDC,MAAM,GAAIC,GAAQ,IAAI;IAC5B,IAAIA,GAAG,EAAE;MACP,IAAI,IAAI,CAACC,KAAK,CAACC,iCAAiC,KAAKC,SAAS,EAAE;QAC9DT,QAAQ,CAACU,IAAI,EAAE,CAACC,QAAQ,CAACH,iCAAiC,GACxD,CAAC,CAAC,IAAI,CAACD,KAAK,CAACC,iCAAiC;;MAElD,IAAI,IAAI,CAACD,KAAK,CAACK,YAAY,EAAE;QAC3BZ,QAAQ,CAACU,IAAI,EAAE,CAACE,YAAY,GAAG,IAAI,CAACL,KAAK,CAACK,YAAY;;MAExD,IAAI,CAACR,QAAQ,GAAG,IAAIJ,QAAQ,CAACU,IAAI,CAACG,iBAAiB,CAACP,GAAG,EAAE;QACvDQ,IAAI,EAAE,IAAI,CAACP,KAAK,CAACQ,4BAA4B,GAAG,WAAW,GAAG;OAC/D,CAAC;KACH,MAAM;MACL,IAAI,CAACX,QAAQ,GAAG,IAAI;;IAEtB,IAAI,IAAI,CAACG,KAAK,CAACS,QAAQ,EAAE;MACvB,IAAI,CAACT,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,IAAI,CAACb,QAAQ;;EAE/C,CAAC;EAEDc,qBAAqBA,CAACC,SAAgB;IACpC,OACE,IAAI,CAACZ,KAAK,CAACC,iCAAiC,KAC1CW,SAAS,CAACX,iCAAiC,IAC7C,IAAI,CAACD,KAAK,CAACQ,4BAA4B,KAAKI,SAAS,CAACJ,4BAA4B,IAClF,IAAI,CAACR,KAAK,CAACK,YAAY,KAAKO,SAAS,CAACP,YAAY;EAEtD;EAEAQ,kBAAkBA,CAACC,SAAgB;IACjC,IAAI,IAAI,CAACd,KAAK,CAACS,QAAQ,KAAKK,SAAS,CAACL,QAAQ,EAAE;MAC9C,IAAI,IAAI,CAACT,KAAK,CAACS,QAAQ,EAAE;QACvB,IAAI,CAACT,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,IAAI,CAACb,QAAQ;;;EAGjD;EAEAkB,MAAMA,CAAA;IACJ,MAAM;MAAEP,4BAA4B;MAAEP,iCAAiC;MAAEI;IAAY,CAAE,GACrF,IAAI,CAACL,KAAK;IACZ,OACEN,KAAA,CAAAsB,aAAA;MACEC,KAAK,EAAEC,MAAM,CAACC,SAAS;MACvBC,GAAG,EAAE,GAAGZ,4BAA4B,GAAG,WAAW,GAAG,SAAS,IAC5DP,iCAAiC,GAAG,SAAS,GAAG,SAClD,IAAII,YAAY,IAAI,EAAE,EAAE;MACxBgB,EAAE,EAAC,qBAAqB;MACxBtB,GAAG,EAAE,IAAI,CAACD,MAAM;MAChBwB,uBAAuB,EAAE;QAAEC,MAAM,EAAE;MAAE;IAAE,EACvC;EAEN;;AAGF,eAAe7B,KAAK,CAAC8B,UAAU,CAAC,CAACxB,KAA8B,EAAED,GAAQ,KACvEL,KAAA,CAAAsB,aAAA,CAACrB,8BAA8B,EAAA8B,MAAA,CAAAC,MAAA,KAAK1B,KAAK;EAAES,QAAQ,EAAEV;AAAG,GACzD,CAAC;AAEF,MAAMmB,MAAM,GAAG;EAEbC,SAAS,EAAE;IAAEQ,MAAM,EAAE;EAAI;CAC1B"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}