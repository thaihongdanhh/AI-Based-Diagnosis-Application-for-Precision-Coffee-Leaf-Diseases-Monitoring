{"ast":null,"code":"var _jsxFileName = \"/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorHeaderButton.js\";\nimport Image from \"../../Image/Image\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backgroundForLevel = level => ({\n  warn: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getWarningDarkColor()\n  },\n  error: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getErrorDarkColor()\n  },\n  fatal: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getFatalDarkColor()\n  },\n  syntax: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getFatalDarkColor()\n  }\n})[level];\nexport default function LogBoxInspectorHeaderButton(props) {\n  return _jsxDEV(LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? null : props.onPress,\n    style: styles.button,\n    children: props.disabled ? null : _jsxDEV(Image, {\n      source: props.image,\n      style: styles.buttonImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor()\n  }\n});","map":{"version":3,"names":["Image","StyleSheet","LogBoxButton","LogBoxStyle","React","jsxDEV","_jsxDEV","backgroundForLevel","level","warn","default","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","LogBoxInspectorHeaderButton","props","backgroundColor","onPress","disabled","style","styles","button","children","source","image","buttonImage","fileName","_jsxFileName","lineNumber","columnNumber","create","alignItems","aspectRatio","justifyContent","marginTop","marginRight","marginLeft","marginBottom","borderRadius","height","width","tintColor","getTextColor"],"sources":["/home/data2/AIFace/AICoffeeLeaf/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorHeaderButton.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ImageSource} from '../../Image/ImageSource';\nimport type {LogLevel} from '../Data/LogBoxLog';\n\nimport Image from '../../Image/Image';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  })[level];\n\nexport default function LogBoxInspectorHeaderButton(\n  props: $ReadOnly<{\n    disabled: boolean,\n    image: ImageSource,\n    level: LogLevel,\n    onPress?: ?() => void,\n  }>,\n): React.Node {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? null : props.onPress}\n      style={styles.button}>\n      {props.disabled ? null : (\n        <Image source={props.image} style={styles.buttonImage} />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor(),\n  },\n});\n"],"mappings":";AAaA,OAAOA,KAAK;AACZ,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAO,KAAKC,WAAW;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,kBAAkB,GAAIC,KAAe,IACzC,CAAC;EACCC,IAAI,EAAE;IACJC,OAAO,EAAE,aAAa;IACtBC,OAAO,EAAER,WAAW,CAACS,mBAAmB,CAAC;EAC3C,CAAC;EACDC,KAAK,EAAE;IACLH,OAAO,EAAE,aAAa;IACtBC,OAAO,EAAER,WAAW,CAACW,iBAAiB,CAAC;EACzC,CAAC;EACDC,KAAK,EAAE;IACLL,OAAO,EAAE,aAAa;IACtBC,OAAO,EAAER,WAAW,CAACa,iBAAiB,CAAC;EACzC,CAAC;EACDC,MAAM,EAAE;IACNP,OAAO,EAAE,aAAa;IACtBC,OAAO,EAAER,WAAW,CAACa,iBAAiB,CAAC;EACzC;AACF,CAAC,EAAER,KAAK,CAAC;AAEX,eAAe,SAASU,2BAA2BA,CACjDC,KAKE,EACU;EACZ,OACEb,OAAA,CAACJ,YAAY;IACXkB,eAAe,EAAEb,kBAAkB,CAACY,KAAK,CAACX,KAAK,CAAE;IACjDa,OAAO,EAAEF,KAAK,CAACG,QAAQ,GAAG,IAAI,GAAGH,KAAK,CAACE,OAAQ;IAC/CE,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,EACpBP,KAAK,CAACG,QAAQ,GAAG,IAAI,GACpBhB,OAAA,CAACN,KAAK;MAAC2B,MAAM,EAAER,KAAK,CAACS,KAAM;MAACL,KAAK,EAAEC,MAAM,CAACK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEnB;AAEA,MAAMT,MAAM,GAAGvB,UAAU,CAACiC,MAAM,CAAC;EAC/BT,MAAM,EAAE;IACNU,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,CAAC;IACdC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE,CAAC,CAAC;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDb,WAAW,EAAE;IACXc,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE1C,WAAW,CAAC2C,YAAY,CAAC;EACtC;AACF,CAAC,CAAC"},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}